{
	"id": "1254dccb774f0262721abb0f81567aa0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\nimport \"./IERC1155Receiver.sol\";\r\nimport \"./IERC1155MetadataURI.sol\";\r\nimport \"./EnumerableMap.sol\";\r\nimport \"./Address.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_) {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n  \r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not token owner or approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not token owner or approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    mapping(uint256 => address) private creators;\r\n    EnumerableMap.UintToAddressMap private _tokenOwners;\r\n\r\n    //   function _exists(uint256 id) internal view returns (bool) {\r\n    //     address owner = _tokenOwners[id];\r\n    //     return owner != address(0);\r\n    // }\r\n\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal  {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        // require(!_exists(id), \"ERC1155: token already minted\");\r\n\r\n        \r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n         creators[id] = msg.sender;\r\n        // _tokenOwners.set(id, msg.sender);\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n        function totalSupply(uint id) external view virtual returns (uint256) {\r\n        return id;   \r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableMap.sol)\r\n// This file was procedurally generated from scripts/generate/templates/EnumerableMap.js.\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./EnumerableSet.sol\";\r\n\r\n/**\r\n * @dev Library for managing an enumerable variant of Solidity's\r\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\r\n * type.\r\n *\r\n * Maps have the following properties:\r\n *\r\n * - Entries are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableMap.UintToAddressMap private myMap;\r\n * }\r\n * ```\r\n *\r\n * The following map types are supported:\r\n *\r\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\r\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\r\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\r\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\r\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\r\n *\r\n * [WARNING]\r\n * ====\r\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\r\n * unusable.\r\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n * In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\r\n * array of EnumerableMap.\r\n * ====\r\n */\r\nlibrary EnumerableMap {\r\n    using EnumerableSet for EnumerableSet.Bytes32Set;\r\n\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Map type with\r\n    // bytes32 keys and values.\r\n    // The Map implementation uses private functions, and user-facing\r\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\r\n    // the underlying Map.\r\n    // This means that we can only create new EnumerableMaps for types that fit\r\n    // in bytes32.\r\n\r\n    struct Bytes32ToBytes32Map {\r\n        // Storage of keys\r\n        EnumerableSet.Bytes32Set _keys;\r\n        mapping(bytes32 => bytes32) _values;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function set(\r\n        Bytes32ToBytes32Map storage map,\r\n        bytes32 key,\r\n        bytes32 value\r\n    ) internal returns (bool) {\r\n        map._values[key] = value;\r\n        return map._keys.add(key);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a key-value pair from a map. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\r\n        delete map._values[key];\r\n        return map._keys.remove(key);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\r\n        return map._keys.contains(key);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of key-value pairs in the map. O(1).\r\n     */\r\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\r\n        return map._keys.length();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of entries inside the\r\n     * array, and it may change when more entries are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\r\n        bytes32 key = map._keys.at(index);\r\n        return (key, map._values[key]);\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`. O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     */\r\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\r\n        bytes32 value = map._values[key];\r\n        if (value == bytes32(0)) {\r\n            return (contains(map, key), bytes32(0));\r\n        } else {\r\n            return (true, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`. O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\r\n        bytes32 value = map._values[key];\r\n        require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\");\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\r\n     */\r\n    function get(\r\n        Bytes32ToBytes32Map storage map,\r\n        bytes32 key,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes32) {\r\n        bytes32 value = map._values[key];\r\n        require(value != 0 || contains(map, key), errorMessage);\r\n        return value;\r\n    }\r\n\r\n    // UintToUintMap\r\n\r\n    struct UintToUintMap {\r\n        Bytes32ToBytes32Map _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function set(\r\n        UintToUintMap storage map,\r\n        uint256 key,\r\n        uint256 value\r\n    ) internal returns (bool) {\r\n        return set(map._inner, bytes32(key), bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\r\n        return remove(map._inner, bytes32(key));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\r\n        return contains(map._inner, bytes32(key));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of elements in the map. O(1).\r\n     */\r\n    function length(UintToUintMap storage map) internal view returns (uint256) {\r\n        return length(map._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the element stored at position `index` in the set. O(1).\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\r\n        (bytes32 key, bytes32 value) = at(map._inner, index);\r\n        return (uint256(key), uint256(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`. O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     */\r\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\r\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\r\n        return (success, uint256(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`. O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\r\n        return uint256(get(map._inner, bytes32(key)));\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryGet}.\r\n     */\r\n    function get(\r\n        UintToUintMap storage map,\r\n        uint256 key,\r\n        string memory errorMessage\r\n    ) internal view returns (uint256) {\r\n        return uint256(get(map._inner, bytes32(key), errorMessage));\r\n    }\r\n\r\n    // UintToAddressMap\r\n\r\n    struct UintToAddressMap {\r\n        Bytes32ToBytes32Map _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function set(\r\n        UintToAddressMap storage map,\r\n        uint256 key,\r\n        address value\r\n    ) internal returns (bool) {\r\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\r\n        return remove(map._inner, bytes32(key));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\r\n        return contains(map._inner, bytes32(key));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of elements in the map. O(1).\r\n     */\r\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\r\n        return length(map._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the element stored at position `index` in the set. O(1).\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\r\n        (bytes32 key, bytes32 value) = at(map._inner, index);\r\n        return (uint256(key), address(uint160(uint256(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`. O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     */\r\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\r\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\r\n        return (success, address(uint160(uint256(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`. O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\r\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryGet}.\r\n     */\r\n    function get(\r\n        UintToAddressMap storage map,\r\n        uint256 key,\r\n        string memory errorMessage\r\n    ) internal view returns (address) {\r\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\r\n    }\r\n\r\n    // AddressToUintMap\r\n\r\n    struct AddressToUintMap {\r\n        Bytes32ToBytes32Map _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function set(\r\n        AddressToUintMap storage map,\r\n        address key,\r\n        uint256 value\r\n    ) internal returns (bool) {\r\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\r\n        return remove(map._inner, bytes32(uint256(uint160(key))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\r\n        return contains(map._inner, bytes32(uint256(uint160(key))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of elements in the map. O(1).\r\n     */\r\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\r\n        return length(map._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the element stored at position `index` in the set. O(1).\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\r\n        (bytes32 key, bytes32 value) = at(map._inner, index);\r\n        return (address(uint160(uint256(key))), uint256(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`. O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     */\r\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\r\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\r\n        return (success, uint256(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`. O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\r\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryGet}.\r\n     */\r\n    function get(\r\n        AddressToUintMap storage map,\r\n        address key,\r\n        string memory errorMessage\r\n    ) internal view returns (uint256) {\r\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\r\n    }\r\n\r\n    // Bytes32ToUintMap\r\n\r\n    struct Bytes32ToUintMap {\r\n        Bytes32ToBytes32Map _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function set(\r\n        Bytes32ToUintMap storage map,\r\n        bytes32 key,\r\n        uint256 value\r\n    ) internal returns (bool) {\r\n        return set(map._inner, key, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\r\n        return remove(map._inner, key);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\r\n        return contains(map._inner, key);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of elements in the map. O(1).\r\n     */\r\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\r\n        return length(map._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the element stored at position `index` in the set. O(1).\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\r\n        (bytes32 key, bytes32 value) = at(map._inner, index);\r\n        return (key, uint256(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`. O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     */\r\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\r\n        (bool success, bytes32 value) = tryGet(map._inner, key);\r\n        return (success, uint256(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`. O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\r\n        return uint256(get(map._inner, key));\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryGet}.\r\n     */\r\n    function get(\r\n        Bytes32ToUintMap storage map,\r\n        bytes32 key,\r\n        string memory errorMessage\r\n    ) internal view returns (uint256) {\r\n        return uint256(get(map._inner, key, errorMessage));\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\r\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\r\n     *\r\n     * NOTE: To accept the transfer, this must return\r\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n     * (i.e. 0xf23a6e61, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param id The ID of the token being transferred\r\n     * @param value The amount of tokens being transferred\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\r\n     * been updated.\r\n     *\r\n     * NOTE: To accept the transfer(s), this must return\r\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n     * (i.e. 0xbc197c81, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\r\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\r\n * unusable.\r\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\r\n * array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        bytes32[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":202:9401  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":202:9401  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d1d2dd901735664ac5676cd45d1269683ada3bac41eb8a9f64f5071bce8bc28264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1d2dd901735664ac5676cd45d1269683ada3bac41eb8a9f64f5071bce8bc28264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD2 0xDD SWAP1 OR CALLDATALOAD PUSH7 0x4AC5676CD45D12 PUSH10 0x683ADA3BAC41EB8A9F64 CREATE2 SMOD SHL 0xCE DUP12 0xC2 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:9199:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1d2dd901735664ac5676cd45d1269683ada3bac41eb8a9f64f5071bce8bc28264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD2 0xDD SWAP1 OR CALLDATALOAD PUSH7 0x4AC5676CD45D12 PUSH10 0x683ADA3BAC41EB8A9F64 CREATE2 SMOD SHL 0xCE DUP12 0xC2 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:9199:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1d2dd901735664ac5676cd45d1269683ada3bac41eb8a9f64f5071bce8bc28264736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":{\"keccak256\":\"0xe715d1167fccf3435838655706265fdbae6708bc791675e537e2a80db443b483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e503677dccd9bcdac57e3a1a84a810399944cb580726aa238c76246f559109cd\",\"dweb:/ipfs/QmbyXx2FFz14Z1ro4XtXFUXejfeAE4hTAocsmxxQJXacVm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"stateVariables": {
							"creators": {
								"details": "Creates `amount` tokens of token type `id`, and assigns them to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":565:18301  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1117:1181  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1160:1173  _setURI(uri_) */\n  tag_6\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1168:1172  uri_ */\n  dup2\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1160:1167  _setURI */\n  shl(0x20, tag_7)\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1160:1173  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1117:1181  constructor(string memory uri_) {... */\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":565:18301  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":8403:8491  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":8477:8483  newuri */\n  dup1\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":8470:8474  _uri */\n  0x02\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":8470:8483  _uri = newuri */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":8403:8491  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3201   */\ntag_3:\n    /* \"#utility.yul\":2757:2763   */\n  0x00\n    /* \"#utility.yul\":2806:2808   */\n  0x20\n    /* \"#utility.yul\":2794:2803   */\n  dup3\n    /* \"#utility.yul\":2785:2792   */\n  dup5\n    /* \"#utility.yul\":2781:2804   */\n  sub\n    /* \"#utility.yul\":2777:2809   */\n  slt\n    /* \"#utility.yul\":2774:2893   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2812:2891   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2774:2893   */\ntag_78:\n    /* \"#utility.yul\":2953:2954   */\n  0x00\n    /* \"#utility.yul\":2942:2951   */\n  dup3\n    /* \"#utility.yul\":2938:2955   */\n  add\n    /* \"#utility.yul\":2932:2956   */\n  mload\n    /* \"#utility.yul\":2983:3001   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2975:2981   */\n  dup2\n    /* \"#utility.yul\":2972:3002   */\n  gt\n    /* \"#utility.yul\":2969:3086   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3005:3084   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2969:3086   */\ntag_80:\n    /* \"#utility.yul\":3110:3184   */\n  tag_82\n    /* \"#utility.yul\":3176:3183   */\n  dup5\n    /* \"#utility.yul\":3167:3173   */\n  dup3\n    /* \"#utility.yul\":3156:3165   */\n  dup6\n    /* \"#utility.yul\":3152:3174   */\n  add\n    /* \"#utility.yul\":3110:3184   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3100:3184   */\n  swap2\n  pop\n    /* \"#utility.yul\":2903:3194   */\n  pop\n    /* \"#utility.yul\":2677:3201   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3207:3306   */\ntag_25:\n    /* \"#utility.yul\":3259:3265   */\n  0x00\n    /* \"#utility.yul\":3293:3298   */\n  dup2\n    /* \"#utility.yul\":3287:3299   */\n  mload\n    /* \"#utility.yul\":3277:3299   */\n  swap1\n  pop\n    /* \"#utility.yul\":3207:3306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3312:3492   */\ntag_26:\n    /* \"#utility.yul\":3360:3437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3350:3438   */\n  mstore\n    /* \"#utility.yul\":3457:3461   */\n  0x22\n    /* \"#utility.yul\":3454:3455   */\n  0x04\n    /* \"#utility.yul\":3447:3462   */\n  mstore\n    /* \"#utility.yul\":3481:3485   */\n  0x24\n    /* \"#utility.yul\":3478:3479   */\n  0x00\n    /* \"#utility.yul\":3471:3486   */\n  revert\n    /* \"#utility.yul\":3498:3818   */\ntag_27:\n    /* \"#utility.yul\":3542:3548   */\n  0x00\n    /* \"#utility.yul\":3579:3580   */\n  0x02\n    /* \"#utility.yul\":3573:3577   */\n  dup3\n    /* \"#utility.yul\":3569:3581   */\n  div\n    /* \"#utility.yul\":3559:3581   */\n  swap1\n  pop\n    /* \"#utility.yul\":3626:3627   */\n  0x01\n    /* \"#utility.yul\":3620:3624   */\n  dup3\n    /* \"#utility.yul\":3616:3628   */\n  and\n    /* \"#utility.yul\":3647:3665   */\n  dup1\n    /* \"#utility.yul\":3637:3718   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3703:3707   */\n  0x7f\n    /* \"#utility.yul\":3695:3701   */\n  dup3\n    /* \"#utility.yul\":3691:3708   */\n  and\n    /* \"#utility.yul\":3681:3708   */\n  swap2\n  pop\n    /* \"#utility.yul\":3637:3718   */\ntag_86:\n    /* \"#utility.yul\":3765:3767   */\n  0x20\n    /* \"#utility.yul\":3757:3763   */\n  dup3\n    /* \"#utility.yul\":3754:3768   */\n  lt\n    /* \"#utility.yul\":3734:3752   */\n  dup2\n    /* \"#utility.yul\":3731:3769   */\n  sub\n    /* \"#utility.yul\":3728:3812   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3784:3802   */\n  tag_88\n  tag_26\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3728:3812   */\ntag_87:\n    /* \"#utility.yul\":3549:3818   */\n  pop\n    /* \"#utility.yul\":3498:3818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3824:3965   */\ntag_28:\n    /* \"#utility.yul\":3873:3877   */\n  0x00\n    /* \"#utility.yul\":3896:3899   */\n  dup2\n    /* \"#utility.yul\":3888:3899   */\n  swap1\n  pop\n    /* \"#utility.yul\":3919:3922   */\n  dup2\n    /* \"#utility.yul\":3916:3917   */\n  0x00\n    /* \"#utility.yul\":3909:3923   */\n  mstore\n    /* \"#utility.yul\":3953:3957   */\n  0x20\n    /* \"#utility.yul\":3950:3951   */\n  0x00\n    /* \"#utility.yul\":3940:3958   */\n  keccak256\n    /* \"#utility.yul\":3932:3958   */\n  swap1\n  pop\n    /* \"#utility.yul\":3824:3965   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3971:4064   */\ntag_29:\n    /* \"#utility.yul\":4008:4014   */\n  0x00\n    /* \"#utility.yul\":4055:4057   */\n  0x20\n    /* \"#utility.yul\":4050:4052   */\n  0x1f\n    /* \"#utility.yul\":4043:4048   */\n  dup4\n    /* \"#utility.yul\":4039:4053   */\n  add\n    /* \"#utility.yul\":4035:4058   */\n  div\n    /* \"#utility.yul\":4025:4058   */\n  swap1\n  pop\n    /* \"#utility.yul\":3971:4064   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4070:4177   */\ntag_30:\n    /* \"#utility.yul\":4114:4122   */\n  0x00\n    /* \"#utility.yul\":4164:4169   */\n  dup3\n    /* \"#utility.yul\":4158:4162   */\n  dup3\n    /* \"#utility.yul\":4154:4170   */\n  shl\n    /* \"#utility.yul\":4133:4170   */\n  swap1\n  pop\n    /* \"#utility.yul\":4070:4177   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4183:4576   */\ntag_31:\n    /* \"#utility.yul\":4252:4258   */\n  0x00\n    /* \"#utility.yul\":4302:4303   */\n  0x08\n    /* \"#utility.yul\":4290:4300   */\n  dup4\n    /* \"#utility.yul\":4286:4304   */\n  mul\n    /* \"#utility.yul\":4325:4422   */\n  tag_93\n    /* \"#utility.yul\":4355:4421   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4344:4353   */\n  dup3\n    /* \"#utility.yul\":4325:4422   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4443:4482   */\n  tag_94\n    /* \"#utility.yul\":4473:4481   */\n  dup7\n    /* \"#utility.yul\":4462:4471   */\n  dup4\n    /* \"#utility.yul\":4443:4482   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4431:4482   */\n  swap6\n  pop\n    /* \"#utility.yul\":4515:4519   */\n  dup1\n    /* \"#utility.yul\":4511:4520   */\n  not\n    /* \"#utility.yul\":4504:4509   */\n  dup5\n    /* \"#utility.yul\":4500:4521   */\n  and\n    /* \"#utility.yul\":4491:4521   */\n  swap4\n  pop\n    /* \"#utility.yul\":4564:4568   */\n  dup1\n    /* \"#utility.yul\":4554:4562   */\n  dup7\n    /* \"#utility.yul\":4550:4569   */\n  and\n    /* \"#utility.yul\":4543:4548   */\n  dup5\n    /* \"#utility.yul\":4540:4570   */\n  or\n    /* \"#utility.yul\":4530:4570   */\n  swap3\n  pop\n    /* \"#utility.yul\":4259:4576   */\n  pop\n  pop\n    /* \"#utility.yul\":4183:4576   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4582:4659   */\ntag_32:\n    /* \"#utility.yul\":4619:4626   */\n  0x00\n    /* \"#utility.yul\":4648:4653   */\n  dup2\n    /* \"#utility.yul\":4637:4653   */\n  swap1\n  pop\n    /* \"#utility.yul\":4582:4659   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4665:4725   */\ntag_33:\n    /* \"#utility.yul\":4693:4696   */\n  0x00\n    /* \"#utility.yul\":4714:4719   */\n  dup2\n    /* \"#utility.yul\":4707:4719   */\n  swap1\n  pop\n    /* \"#utility.yul\":4665:4725   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4731:4873   */\ntag_34:\n    /* \"#utility.yul\":4781:4790   */\n  0x00\n    /* \"#utility.yul\":4814:4867   */\n  tag_98\n    /* \"#utility.yul\":4832:4866   */\n  tag_99\n    /* \"#utility.yul\":4841:4865   */\n  tag_100\n    /* \"#utility.yul\":4859:4864   */\n  dup5\n    /* \"#utility.yul\":4841:4865   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4832:4866   */\n  tag_33\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4814:4867   */\n  tag_32\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4801:4867   */\n  swap1\n  pop\n    /* \"#utility.yul\":4731:4873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4879:4954   */\ntag_35:\n    /* \"#utility.yul\":4922:4925   */\n  0x00\n    /* \"#utility.yul\":4943:4948   */\n  dup2\n    /* \"#utility.yul\":4936:4948   */\n  swap1\n  pop\n    /* \"#utility.yul\":4879:4954   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4960:5229   */\ntag_36:\n    /* \"#utility.yul\":5070:5109   */\n  tag_103\n    /* \"#utility.yul\":5101:5108   */\n  dup4\n    /* \"#utility.yul\":5070:5109   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5131:5222   */\n  tag_104\n    /* \"#utility.yul\":5180:5221   */\n  tag_105\n    /* \"#utility.yul\":5204:5220   */\n  dup3\n    /* \"#utility.yul\":5180:5221   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5172:5178   */\n  dup5\n    /* \"#utility.yul\":5165:5169   */\n  dup5\n    /* \"#utility.yul\":5159:5170   */\n  sload\n    /* \"#utility.yul\":5131:5222   */\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5125:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5223   */\n  sstore\n    /* \"#utility.yul\":5036:5229   */\n  pop\n    /* \"#utility.yul\":4960:5229   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5235:5308   */\ntag_37:\n    /* \"#utility.yul\":5280:5283   */\n  0x00\n    /* \"#utility.yul\":5235:5308   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5314:5503   */\ntag_38:\n    /* \"#utility.yul\":5391:5423   */\n  tag_108\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5432:5497   */\n  tag_109\n    /* \"#utility.yul\":5490:5496   */\n  dup2\n    /* \"#utility.yul\":5482:5488   */\n  dup5\n    /* \"#utility.yul\":5476:5480   */\n  dup5\n    /* \"#utility.yul\":5432:5497   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5367:5503   */\n  pop\n    /* \"#utility.yul\":5314:5503   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5509:5695   */\ntag_39:\n    /* \"#utility.yul\":5569:5689   */\ntag_111:\n    /* \"#utility.yul\":5586:5589   */\n  dup2\n    /* \"#utility.yul\":5579:5584   */\n  dup2\n    /* \"#utility.yul\":5576:5590   */\n  lt\n    /* \"#utility.yul\":5569:5689   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5640:5679   */\n  tag_114\n    /* \"#utility.yul\":5677:5678   */\n  0x00\n    /* \"#utility.yul\":5670:5675   */\n  dup3\n    /* \"#utility.yul\":5640:5679   */\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5613:5614   */\n  0x01\n    /* \"#utility.yul\":5606:5611   */\n  dup2\n    /* \"#utility.yul\":5602:5615   */\n  add\n    /* \"#utility.yul\":5593:5615   */\n  swap1\n  pop\n    /* \"#utility.yul\":5569:5689   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5509:5695   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5701:6244   */\ntag_40:\n    /* \"#utility.yul\":5802:5804   */\n  0x1f\n    /* \"#utility.yul\":5797:5800   */\n  dup3\n    /* \"#utility.yul\":5794:5805   */\n  gt\n    /* \"#utility.yul\":5791:6237   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5836:5874   */\n  tag_117\n    /* \"#utility.yul\":5868:5873   */\n  dup2\n    /* \"#utility.yul\":5836:5874   */\n  tag_28\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5920:5949   */\n  tag_118\n    /* \"#utility.yul\":5938:5948   */\n  dup5\n    /* \"#utility.yul\":5920:5949   */\n  tag_29\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5910:5918   */\n  dup2\n    /* \"#utility.yul\":5906:5950   */\n  add\n    /* \"#utility.yul\":6103:6105   */\n  0x20\n    /* \"#utility.yul\":6091:6101   */\n  dup6\n    /* \"#utility.yul\":6088:6106   */\n  lt\n    /* \"#utility.yul\":6085:6134   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6124:6132   */\n  dup2\n    /* \"#utility.yul\":6109:6132   */\n  swap1\n  pop\n    /* \"#utility.yul\":6085:6134   */\ntag_119:\n    /* \"#utility.yul\":6147:6227   */\n  tag_120\n    /* \"#utility.yul\":6203:6225   */\n  tag_121\n    /* \"#utility.yul\":6221:6224   */\n  dup6\n    /* \"#utility.yul\":6203:6225   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6193:6201   */\n  dup4\n    /* \"#utility.yul\":6189:6226   */\n  add\n    /* \"#utility.yul\":6176:6187   */\n  dup3\n    /* \"#utility.yul\":6147:6227   */\n  tag_39\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5806:6237   */\n  pop\n  pop\n    /* \"#utility.yul\":5791:6237   */\ntag_116:\n    /* \"#utility.yul\":5701:6244   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6250:6367   */\ntag_41:\n    /* \"#utility.yul\":6304:6312   */\n  0x00\n    /* \"#utility.yul\":6354:6359   */\n  dup3\n    /* \"#utility.yul\":6348:6352   */\n  dup3\n    /* \"#utility.yul\":6344:6360   */\n  shr\n    /* \"#utility.yul\":6323:6360   */\n  swap1\n  pop\n    /* \"#utility.yul\":6250:6367   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6373:6542   */\ntag_42:\n    /* \"#utility.yul\":6417:6423   */\n  0x00\n    /* \"#utility.yul\":6450:6501   */\n  tag_124\n    /* \"#utility.yul\":6498:6499   */\n  0x00\n    /* \"#utility.yul\":6494:6500   */\n  not\n    /* \"#utility.yul\":6486:6491   */\n  dup5\n    /* \"#utility.yul\":6483:6484   */\n  0x08\n    /* \"#utility.yul\":6479:6492   */\n  mul\n    /* \"#utility.yul\":6450:6501   */\n  tag_41\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6446:6502   */\n  not\n    /* \"#utility.yul\":6531:6535   */\n  dup1\n    /* \"#utility.yul\":6525:6529   */\n  dup4\n    /* \"#utility.yul\":6521:6536   */\n  and\n    /* \"#utility.yul\":6511:6536   */\n  swap2\n  pop\n    /* \"#utility.yul\":6424:6542   */\n  pop\n    /* \"#utility.yul\":6373:6542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6547:6842   */\ntag_43:\n    /* \"#utility.yul\":6623:6627   */\n  0x00\n    /* \"#utility.yul\":6769:6798   */\n  tag_126\n    /* \"#utility.yul\":6794:6797   */\n  dup4\n    /* \"#utility.yul\":6788:6792   */\n  dup4\n    /* \"#utility.yul\":6769:6798   */\n  tag_42\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6761:6798   */\n  swap2\n  pop\n    /* \"#utility.yul\":6831:6834   */\n  dup3\n    /* \"#utility.yul\":6828:6829   */\n  0x02\n    /* \"#utility.yul\":6824:6835   */\n  mul\n    /* \"#utility.yul\":6818:6822   */\n  dup3\n    /* \"#utility.yul\":6815:6836   */\n  or\n    /* \"#utility.yul\":6807:6836   */\n  swap1\n  pop\n    /* \"#utility.yul\":6547:6842   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6847:8242   */\ntag_11:\n    /* \"#utility.yul\":6964:7001   */\n  tag_128\n    /* \"#utility.yul\":6997:7000   */\n  dup3\n    /* \"#utility.yul\":6964:7001   */\n  tag_25\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7066:7084   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7058:7064   */\n  dup2\n    /* \"#utility.yul\":7055:7085   */\n  gt\n    /* \"#utility.yul\":7052:7108   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":7088:7106   */\n  tag_130\n  tag_18\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7052:7108   */\ntag_129:\n    /* \"#utility.yul\":7132:7170   */\n  tag_131\n    /* \"#utility.yul\":7164:7168   */\n  dup3\n    /* \"#utility.yul\":7158:7169   */\n  sload\n    /* \"#utility.yul\":7132:7170   */\n  tag_27\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7217:7284   */\n  tag_132\n    /* \"#utility.yul\":7277:7283   */\n  dup3\n    /* \"#utility.yul\":7269:7275   */\n  dup3\n    /* \"#utility.yul\":7263:7267   */\n  dup6\n    /* \"#utility.yul\":7217:7284   */\n  tag_40\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7311:7312   */\n  0x00\n    /* \"#utility.yul\":7335:7339   */\n  0x20\n    /* \"#utility.yul\":7322:7339   */\n  swap1\n  pop\n    /* \"#utility.yul\":7367:7369   */\n  0x1f\n    /* \"#utility.yul\":7359:7365   */\n  dup4\n    /* \"#utility.yul\":7356:7370   */\n  gt\n    /* \"#utility.yul\":7384:7385   */\n  0x01\n    /* \"#utility.yul\":7379:7997   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x00\n    /* \"#utility.yul\":8058:8064   */\n  dup5\n    /* \"#utility.yul\":8055:8132   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8107:8116   */\n  dup3\n    /* \"#utility.yul\":8102:8105   */\n  dup8\n    /* \"#utility.yul\":8098:8117   */\n  add\n    /* \"#utility.yul\":8092:8118   */\n  mload\n    /* \"#utility.yul\":8083:8118   */\n  swap1\n  pop\n    /* \"#utility.yul\":8055:8132   */\ntag_135:\n    /* \"#utility.yul\":8158:8225   */\n  tag_136\n    /* \"#utility.yul\":8218:8224   */\n  dup6\n    /* \"#utility.yul\":8211:8216   */\n  dup3\n    /* \"#utility.yul\":8158:8225   */\n  tag_43\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8145:8226   */\n  sstore\n    /* \"#utility.yul\":8014:8236   */\n  pop\n    /* \"#utility.yul\":7349:8236   */\n  jump(tag_133)\n    /* \"#utility.yul\":7379:7997   */\ntag_134:\n    /* \"#utility.yul\":7431:7435   */\n  0x1f\n    /* \"#utility.yul\":7427:7436   */\n  not\n    /* \"#utility.yul\":7419:7425   */\n  dup5\n    /* \"#utility.yul\":7415:7437   */\n  and\n    /* \"#utility.yul\":7465:7502   */\n  tag_137\n    /* \"#utility.yul\":7497:7501   */\n  dup7\n    /* \"#utility.yul\":7465:7502   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7524:7525   */\n  0x00\n    /* \"#utility.yul\":7538:7746   */\ntag_138:\n    /* \"#utility.yul\":7552:7559   */\n  dup3\n    /* \"#utility.yul\":7549:7550   */\n  dup2\n    /* \"#utility.yul\":7546:7560   */\n  lt\n    /* \"#utility.yul\":7538:7746   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7631:7640   */\n  dup5\n    /* \"#utility.yul\":7626:7629   */\n  dup10\n    /* \"#utility.yul\":7622:7641   */\n  add\n    /* \"#utility.yul\":7616:7642   */\n  mload\n    /* \"#utility.yul\":7608:7614   */\n  dup3\n    /* \"#utility.yul\":7601:7643   */\n  sstore\n    /* \"#utility.yul\":7682:7683   */\n  0x01\n    /* \"#utility.yul\":7674:7680   */\n  dup3\n    /* \"#utility.yul\":7670:7684   */\n  add\n    /* \"#utility.yul\":7660:7684   */\n  swap2\n  pop\n    /* \"#utility.yul\":7729:7731   */\n  0x20\n    /* \"#utility.yul\":7718:7727   */\n  dup6\n    /* \"#utility.yul\":7714:7732   */\n  add\n    /* \"#utility.yul\":7701:7732   */\n  swap5\n  pop\n    /* \"#utility.yul\":7575:7579   */\n  0x20\n    /* \"#utility.yul\":7572:7573   */\n  dup2\n    /* \"#utility.yul\":7568:7580   */\n  add\n    /* \"#utility.yul\":7563:7580   */\n  swap1\n  pop\n    /* \"#utility.yul\":7538:7746   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":7774:7780   */\n  dup7\n    /* \"#utility.yul\":7765:7772   */\n  dup4\n    /* \"#utility.yul\":7762:7781   */\n  lt\n    /* \"#utility.yul\":7759:7938   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7832:7841   */\n  dup5\n    /* \"#utility.yul\":7827:7830   */\n  dup10\n    /* \"#utility.yul\":7823:7842   */\n  add\n    /* \"#utility.yul\":7817:7843   */\n  mload\n    /* \"#utility.yul\":7875:7923   */\n  tag_142\n    /* \"#utility.yul\":7917:7921   */\n  0x1f\n    /* \"#utility.yul\":7909:7915   */\n  dup10\n    /* \"#utility.yul\":7905:7922   */\n  and\n    /* \"#utility.yul\":7894:7903   */\n  dup3\n    /* \"#utility.yul\":7875:7923   */\n  tag_42\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7867:7873   */\n  dup4\n    /* \"#utility.yul\":7860:7924   */\n  sstore\n    /* \"#utility.yul\":7782:7938   */\n  pop\n    /* \"#utility.yul\":7759:7938   */\ntag_141:\n    /* \"#utility.yul\":7984:7985   */\n  0x01\n    /* \"#utility.yul\":7980:7981   */\n  0x02\n    /* \"#utility.yul\":7972:7978   */\n  dup9\n    /* \"#utility.yul\":7968:7982   */\n  mul\n    /* \"#utility.yul\":7964:7986   */\n  add\n    /* \"#utility.yul\":7958:7962   */\n  dup9\n    /* \"#utility.yul\":7951:7987   */\n  sstore\n    /* \"#utility.yul\":7386:7997   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7349:8236   */\ntag_133:\n  pop\n    /* \"#utility.yul\":6939:8242   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6847:8242   */\n  pop\n  pop\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":565:18301  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":565:18301  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2230:2460  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1253:1563  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1974:2079  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4179:4617  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2626:3150  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3223:3378  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":10049:10150  function totalSupply(uint id) external view virtual returns (uint256) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3456:3624  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3696:4102  function safeTransferFrom(... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2230:2460  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2316:2323  uint256 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2363:2364  0 */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2344:2365  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2344:2351  account */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2344:2365  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2336:2412  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2430:2439  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2430:2443  _balances[id] */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2440:2442  id */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2430:2443  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2430:2452  _balances[id][account] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2444:2451  account */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2430:2452  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2423:2452  return _balances[id][account] */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2230:2460  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1253:1563  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1355:1359  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1407:1433  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1433  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1403  interfaceId */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1433  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1502  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_63\n      jumpi\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1465:1502  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1450:1502  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1450:1461  interfaceId */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1450:1502  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1502  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_63:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1555  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_64\n      jumpi\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1519:1555  super.supportsInterface(interfaceId) */\n      tag_65\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1543:1554  interfaceId */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1519:1542  super.supportsInterface */\n      tag_66\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1519:1555  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_65:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1392:1555  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_64:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1372:1555  return... */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1253:1563  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1974:2079  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2034:2047  string memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2067:2071  _uri */\n      0x02\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2060:2071  return _uri */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":1974:2079  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4179:4617  function safeBatchTransferFrom(... */\n    tag_34:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4420:4432  _msgSender() */\n      tag_75\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4420:4430  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4420:4432  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4412:4432  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4412:4416  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4412:4432  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4412:4472  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4436:4472  isApprovedForAll(from, _msgSender()) */\n      tag_78\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4453:4457  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4459:4471  _msgSender() */\n      tag_79\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4459:4469  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4459:4471  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4436:4452  isApprovedForAll */\n      tag_52\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4436:4472  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_78:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4412:4472  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_77:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4390:4546  require(... */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4557:4609  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_83\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4580:4584  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4586:4588  to */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4590:4593  ids */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4595:4602  amounts */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4604:4608  data */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4557:4579  _safeBatchTransferFrom */\n      tag_84\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4557:4609  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_83:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4179:4617  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2626:3150  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_38:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2782:2798  uint256[] memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2843:2846  ids */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2843:2853  ids.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2824:2832  accounts */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2824:2839  accounts.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2824:2853  accounts.length == ids.length */\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2816:2899  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2912:2942  uint256[] memory batchBalances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2959:2967  accounts */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2959:2974  accounts.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2945:2975  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n    tag_89:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_92:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2912:2975  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2993:3002  uint256 i */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2988:3110  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_93:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3012:3020  accounts */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3012:3027  accounts.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3008:3009  i */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3008:3027  i < accounts.length */\n      lt\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2988:3110  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3068:3098  balanceOf(accounts[i], ids[i]) */\n      tag_96\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3078:3086  accounts */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3087:3088  i */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3078:3089  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3091:3094  ids */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3095:3096  i */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3091:3097  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      tag_101\n      tag_99\n      jump\t// in\n    tag_101:\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3068:3077  balanceOf */\n      tag_16\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3068:3098  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_96:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3049:3062  batchBalances */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3063:3064  i */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3049:3065  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_103\n      tag_99\n      jump\t// in\n    tag_103:\n    tag_102:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3049:3098  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3029:3032  ++i */\n      dup1\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2988:3110  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_93)\n    tag_94:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3129:3142  batchBalances */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3122:3142  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":2626:3150  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3223:3378  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_44:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3318:3370  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_107\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3337:3349  _msgSender() */\n      tag_108\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3337:3347  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3337:3349  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3351:3359  operator */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3361:3369  approved */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3318:3336  _setApprovalForAll */\n      tag_109\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3318:3370  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_107:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3223:3378  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":10049:10150  function totalSupply(uint id) external view virtual returns (uint256) {... */\n    tag_47:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":10110:10117  uint256 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":10137:10139  id */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":10130:10139  return id */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":10049:10150  function totalSupply(uint id) external view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3456:3624  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_52:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3555:3559  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3579:3597  _operatorApprovals */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3579:3606  _operatorApprovals[account] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3598:3605  account */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3579:3606  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3579:3616  _operatorApprovals[account][operator] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3607:3615  operator */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3579:3616  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3572:3616  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3456:3624  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3696:4102  function safeTransferFrom(... */\n    tag_57:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3912:3924  _msgSender() */\n      tag_113\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3912:3922  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3912:3924  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3904:3924  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3904:3908  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3904:3924  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3904:3964  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_114\n      jumpi\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3928:3964  isApprovedForAll(from, _msgSender()) */\n      tag_115\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3945:3949  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3951:3963  _msgSender() */\n      tag_116\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3951:3961  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3951:3963  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3928:3944  isApprovedForAll */\n      tag_52\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3928:3964  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_115:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3904:3964  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_114:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3882:4038  require(... */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_82\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4049:4094  _safeTransferFrom(from, to, id, amount, data) */\n      tag_119\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4067:4071  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4073:4075  to */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4077:4079  id */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4081:4087  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4089:4093  data */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4049:4066  _safeTransferFrom */\n      tag_120\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":4049:4094  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_119:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":3696:4102  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_66:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":939:943  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":978:1003  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":963:974  interfaceId */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":956:1003  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_76:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":709:716  address */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6413:7559  function _safeBatchTransferFrom(... */\n    tag_84:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6640:6647  amounts */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6640:6654  amounts.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6626:6629  ids */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6626:6636  ids.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6626:6654  ids.length == amounts.length */\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6618:6699  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6732:6733  0 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6718:6734  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6718:6720  to */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6718:6734  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6710:6776  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6789:6805  address operator */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6808:6820  _msgSender() */\n      tag_130\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6808:6818  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6808:6820  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6789:6820  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6833:6893  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_131\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6854:6862  operator */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6864:6868  from */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6870:6872  to */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6874:6877  ids */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6879:6886  amounts */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6888:6892  data */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6833:6853  _beforeTokenTransfer */\n      tag_132\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6833:6893  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_131:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6911:6920  uint256 i */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6906:7327  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_133:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6930:6933  ids */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6930:6940  ids.length */\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6926:6927  i */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6926:6940  i < ids.length */\n      lt\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6906:7327  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6962:6972  uint256 id */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6975:6978  ids */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6979:6980  i */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6975:6981  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_99\n      jump\t// in\n    tag_137:\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6962:6981  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6996:7010  uint256 amount */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7013:7020  amounts */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7021:7022  i */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7013:7023  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_139\n      tag_99\n      jump\t// in\n    tag_139:\n    tag_138:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6996:7023  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7040:7059  uint256 fromBalance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7062:7071  _balances */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7062:7075  _balances[id] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7072:7074  id */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7062:7075  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7062:7081  _balances[id][from] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7076:7080  from */\n      dup12\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7062:7081  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7040:7081  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7119:7125  amount */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7104:7115  fromBalance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7104:7125  fromBalance >= amount */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7096:7172  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7252:7258  amount */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7238:7249  fromBalance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7238:7258  fromBalance - amount */\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7216:7225  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7216:7229  _balances[id] */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7226:7228  id */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7216:7229  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7216:7235  _balances[id][from] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7230:7234  from */\n      dup13\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7216:7235  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7216:7258  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7309:7315  amount */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7288:7297  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7288:7301  _balances[id] */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7298:7300  id */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7288:7301  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7288:7305  _balances[id][to] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7302:7304  to */\n      dup12\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7288:7305  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7288:7315  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6947:7327  {... */\n      pop\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6942:6945  ++i */\n      dup1\n      tag_145\n      swap1\n      tag_105\n      jump\t// in\n    tag_145:\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6906:7327  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_133)\n    tag_134:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7374:7376  to */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7344:7391  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7368:7372  from */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7344:7391  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7358:7366  operator */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7344:7391  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7378:7381  ids */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7383:7390  amounts */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7344:7391  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7404:7463  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_148\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7424:7432  operator */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7434:7438  from */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7440:7442  to */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7444:7447  ids */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7449:7456  amounts */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7458:7462  data */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7404:7423  _afterTokenTransfer */\n      tag_149\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7404:7463  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_148:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7476:7551  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_150\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7512:7520  operator */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7522:7526  from */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7528:7530  to */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7532:7535  ids */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7537:7544  amounts */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7546:7550  data */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7476:7511  _doSafeBatchTransferAcceptanceCheck */\n      tag_151\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":7476:7551  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_150:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6607:7559  {... */\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6413:7559  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13834:14165  function _setApprovalForAll(... */\n    tag_109:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13989:13997  operator */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13980:13997  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13980:13985  owner */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13980:13997  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13972:14043  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14092:14100  approved */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14054:14072  _operatorApprovals */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14054:14079  _operatorApprovals[owner] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14073:14078  owner */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14054:14079  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14054:14089  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14080:14088  operator */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14054:14089  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14054:14100  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14138:14146  operator */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14116:14157  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14131:14136  owner */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14116:14157  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14148:14156  approved */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":14116:14157  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":13834:14165  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5081:6055  function _safeTransferFrom(... */\n    tag_120:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5283:5284  0 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5269:5285  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5269:5271  to */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5269:5285  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5261:5327  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_129\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5340:5356  address operator */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5359:5371  _msgSender() */\n      tag_160\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5359:5369  _msgSender */\n      tag_76\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5359:5371  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5340:5371  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5382:5402  uint256[] memory ids */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5405:5426  _asSingletonArray(id) */\n      tag_161\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5423:5425  id */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5405:5422  _asSingletonArray */\n      tag_162\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5405:5426  _asSingletonArray(id) */\n      jump\t// in\n    tag_161:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5382:5426  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5437:5461  uint256[] memory amounts */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5464:5489  _asSingletonArray(amount) */\n      tag_163\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5482:5488  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5464:5481  _asSingletonArray */\n      tag_162\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5464:5489  _asSingletonArray(amount) */\n      jump\t// in\n    tag_163:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5437:5489  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5502:5562  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_164\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5523:5531  operator */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5533:5537  from */\n      dup10\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5539:5541  to */\n      dup10\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5543:5546  ids */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5548:5555  amounts */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5557:5561  data */\n      dup10\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5502:5522  _beforeTokenTransfer */\n      tag_132\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5502:5562  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_164:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5575:5594  uint256 fromBalance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5597:5606  _balances */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5597:5610  _balances[id] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5607:5609  id */\n      dup9\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5597:5610  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5597:5616  _balances[id][from] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5611:5615  from */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5597:5616  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5575:5616  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5650:5656  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5635:5646  fromBalance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5635:5656  fromBalance >= amount */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5627:5703  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_142\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5775:5781  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5761:5772  fromBalance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5761:5781  fromBalance - amount */\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5739:5748  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5739:5752  _balances[id] */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5749:5751  id */\n      dup10\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5739:5752  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5739:5758  _balances[id][from] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5753:5757  from */\n      dup12\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5739:5758  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5739:5781  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5824:5830  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5803:5812  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5803:5816  _balances[id] */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5813:5815  id */\n      dup10\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5803:5816  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5803:5820  _balances[id][to] */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5817:5819  to */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5803:5820  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5803:5830  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_167\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_167:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5879:5881  to */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5848:5894  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5873:5877  from */\n      dup10\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5848:5894  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5863:5871  operator */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5848:5894  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5883:5885  id */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5887:5893  amount */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5848:5894  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5907:5966  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_170\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5927:5935  operator */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5937:5941  from */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5943:5945  to */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5947:5950  ids */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5952:5959  amounts */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5961:5965  data */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5907:5926  _afterTokenTransfer */\n      tag_149\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5907:5966  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_170:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5979:6047  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_171\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6010:6018  operator */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6020:6024  from */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6026:6028  to */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6030:6032  id */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6034:6040  amount */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":6042:6046  data */\n      dup11\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5979:6009  _doSafeTransferAcceptanceCheck */\n      tag_172\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5979:6047  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_171:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5250:6055  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":5081:6055  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":15123:15344  function _beforeTokenTransfer(... */\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16299:16519  function _afterTokenTransfer(... */\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17279:18092  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_151:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17519:17534  to.isContract() */\n      tag_176\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17519:17521  to */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17519:17532  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_177\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17519:17534  to.isContract() */\n      jump\t// in\n    tag_176:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17515:18085  if (to.isContract()) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17572:17574  to */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17555:17598  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17599:17607  operator */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17609:17613  from */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17615:17618  ids */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17620:17627  amounts */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17629:17633  data */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17555:17634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      0x01\n    tag_181:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17551:18074  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_184\n      jumpi\n      tag_188\n      tag_189\n      jump\t// in\n    tag_188:\n      dup1\n      0x08c379a0\n      sub\n      tag_187\n      jumpi\n      pop\n      tag_190\n      tag_191\n      jump\t// in\n    tag_190:\n      dup1\n      tag_192\n      jumpi\n      pop\n      jump(tag_186)\n    tag_192:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17947:17953  reason */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17940:17954  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17551:18074  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_187:\n      pop\n    tag_186:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17996:18058  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17551:18074  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_184:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17728:17776  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17716:17776  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17716:17724  response */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17716:17776  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17712:17871  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_197\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17801:17851  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17712:17871  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_197:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17635:17886  returns (... */\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17515:18085  if (to.isContract()) {... */\n    tag_178:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17279:18092  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18100:18298  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_162:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18166:18182  uint256[] memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18195:18217  uint256[] memory array */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18234:18235  1 */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18220:18236  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_91\n      jump\t// in\n    tag_202:\n    tag_201:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_203:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18195:18236  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18258:18265  element */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18247:18252  array */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18253:18254  0 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18247:18255  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_99\n      jump\t// in\n    tag_205:\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18247:18265  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18285:18290  array */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18278:18290  return array */\n      swap2\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":18100:18298  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16527:17271  function _doSafeTransferAcceptanceCheck(... */\n    tag_172:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16742:16757  to.isContract() */\n      tag_207\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16742:16744  to */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16742:16755  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_177\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16742:16757  to.isContract() */\n      jump\t// in\n    tag_207:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16738:17264  if (to.isContract()) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16795:16797  to */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16778:16816  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16817:16825  operator */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16827:16831  from */\n      dup8\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16833:16835  id */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16837:16843  amount */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16845:16849  data */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16778:16850  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_212:\n      0x01\n    tag_211:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16774:17253  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_213\n      jumpi\n      tag_217\n      tag_189\n      jump\t// in\n    tag_217:\n      dup1\n      0x08c379a0\n      sub\n      tag_216\n      jumpi\n      pop\n      tag_218\n      tag_191\n      jump\t// in\n    tag_218:\n      dup1\n      tag_219\n      jumpi\n      pop\n      jump(tag_215)\n    tag_219:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17126:17132  reason */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17119:17133  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16774:17253  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_216:\n      pop\n    tag_215:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":17175:17237  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_195\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16774:17253  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_213:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16912:16955  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16900:16955  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16900:16908  response */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16900:16955  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16896:17050  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_223\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16980:17030  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_199\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16896:17050  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_223:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16851:17065  returns (bytes4 response) {... */\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16738:17264  if (to.isContract()) {... */\n    tag_208:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":16527:17271  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {... */\n    tag_177:\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1270:1274  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1527:1528  0 */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1505:1512  account */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1505:1524  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1505:1528  account.code.length > 0 */\n      gt\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1498:1528  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_226:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_227:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_228:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_229:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_230:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_303\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_229\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_231:\n        /* \"#utility.yul\":641:665   */\n      tag_305\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_230\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_306:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_232:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_308\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_231\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_233:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_234:\n        /* \"#utility.yul\":997:1021   */\n      tag_311\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_233\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_312:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_235:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_314\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_234\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_15:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_317\n      tag_227\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1290:1409   */\n    tag_316:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_318\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_232\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_319\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_235\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_236:\n        /* \"#utility.yul\":1764:1788   */\n      tag_321\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_233\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_18:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_323\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_236\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_237:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_238:\n        /* \"#utility.yul\":2256:2279   */\n      tag_326\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_237\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_327:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_239:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_329\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_238\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_21:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_332\n      tag_227\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2528:2647   */\n    tag_331:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_333\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_239\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_240:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_241:\n        /* \"#utility.yul\":2963:2984   */\n      tag_336\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_240\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_24:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_338\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_241\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_27:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_341\n      tag_227\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3289:3408   */\n    tag_340:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_342\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_235\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_242:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_243:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_244:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_346:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_346)\n    tag_348:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_245:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_246:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_351\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_242\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4359:4430   */\n      tag_352\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_243\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_353\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_244\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4529:4558   */\n      tag_354\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_245\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_30:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_356\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_246\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_247:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5193   */\n    tag_91:\n        /* \"#utility.yul\":5061:5138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5051:5139   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x41\n        /* \"#utility.yul\":5155:5156   */\n      0x04\n        /* \"#utility.yul\":5148:5163   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x24\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5172:5187   */\n      revert\n        /* \"#utility.yul\":5199:5480   */\n    tag_248:\n        /* \"#utility.yul\":5282:5309   */\n      tag_360\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5282:5309   */\n      tag_245\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5274:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5310   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5400:5410   */\n      dup2\n        /* \"#utility.yul\":5397:5419   */\n      lt\n        /* \"#utility.yul\":5376:5394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5395   */\n      gt\n        /* \"#utility.yul\":5358:5420   */\n      or\n        /* \"#utility.yul\":5355:5443   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5423:5441   */\n      tag_362\n      tag_91\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5355:5443   */\n    tag_361:\n        /* \"#utility.yul\":5463:5473   */\n      dup1\n        /* \"#utility.yul\":5459:5461   */\n      0x40\n        /* \"#utility.yul\":5452:5474   */\n      mstore\n        /* \"#utility.yul\":5242:5480   */\n      pop\n        /* \"#utility.yul\":5199:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5615   */\n    tag_249:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5547:5567   */\n      tag_364\n      tag_226\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5537:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5609   */\n      tag_365\n        /* \"#utility.yul\":5604:5608   */\n      dup3\n        /* \"#utility.yul\":5596:5602   */\n      dup3\n        /* \"#utility.yul\":5576:5609   */\n      tag_248\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5486:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5932   */\n    tag_250:\n        /* \"#utility.yul\":5698:5702   */\n      0x00\n        /* \"#utility.yul\":5788:5806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5807   */\n      gt\n        /* \"#utility.yul\":5774:5830   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_368\n      tag_91\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5774:5830   */\n    tag_367:\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5848:5865   */\n      mul\n        /* \"#utility.yul\":5840:5865   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5924   */\n      0x20\n        /* \"#utility.yul\":5914:5918   */\n      dup2\n        /* \"#utility.yul\":5910:5925   */\n      add\n        /* \"#utility.yul\":5902:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6055   */\n    tag_251:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":6078:6788   */\n    tag_252:\n        /* \"#utility.yul\":6174:6179   */\n      0x00\n        /* \"#utility.yul\":6199:6280   */\n      tag_371\n        /* \"#utility.yul\":6215:6279   */\n      tag_372\n        /* \"#utility.yul\":6272:6278   */\n      dup5\n        /* \"#utility.yul\":6215:6279   */\n      tag_250\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6199:6280   */\n      tag_249\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6190:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6305   */\n      dup1\n        /* \"#utility.yul\":6329:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6327   */\n      dup3\n        /* \"#utility.yul\":6315:6336   */\n      mstore\n        /* \"#utility.yul\":6363:6367   */\n      0x20\n        /* \"#utility.yul\":6356:6361   */\n      dup3\n        /* \"#utility.yul\":6352:6368   */\n      add\n        /* \"#utility.yul\":6345:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6420   */\n      0x20\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6404:6421   */\n      mul\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6392:6422   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup2\n        /* \"#utility.yul\":6434:6449   */\n      gt\n        /* \"#utility.yul\":6431:6553   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6464:6543   */\n      tag_374\n      tag_251\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6431:6553   */\n    tag_373:\n        /* \"#utility.yul\":6579:6585   */\n      dup4\n        /* \"#utility.yul\":6562:6782   */\n    tag_375:\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6591:6594   */\n      dup2\n        /* \"#utility.yul\":6588:6603   */\n      lt\n        /* \"#utility.yul\":6562:6782   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6671:6674   */\n      dup1\n        /* \"#utility.yul\":6700:6737   */\n      tag_378\n        /* \"#utility.yul\":6733:6736   */\n      dup9\n        /* \"#utility.yul\":6721:6731   */\n      dup3\n        /* \"#utility.yul\":6700:6737   */\n      tag_235\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6695:6698   */\n      dup5\n        /* \"#utility.yul\":6688:6738   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x20\n        /* \"#utility.yul\":6762:6765   */\n      dup5\n        /* \"#utility.yul\":6758:6772   */\n      add\n        /* \"#utility.yul\":6751:6772   */\n      swap4\n      pop\n        /* \"#utility.yul\":6638:6782   */\n      pop\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup2\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6606:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6782   */\n      jump(tag_375)\n    tag_377:\n        /* \"#utility.yul\":6566:6587   */\n      pop\n        /* \"#utility.yul\":6180:6788   */\n      pop\n      pop\n        /* \"#utility.yul\":6078:6788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7181   */\n    tag_253:\n        /* \"#utility.yul\":6882:6887   */\n      0x00\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6924:6928   */\n      0x1f\n        /* \"#utility.yul\":6916:6922   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6908:6935   */\n      slt\n        /* \"#utility.yul\":6898:7020   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6939:7018   */\n      tag_381\n      tag_247\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6898:7020   */\n    tag_380:\n        /* \"#utility.yul\":7056:7062   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      calldataload\n        /* \"#utility.yul\":7081:7175   */\n      tag_382\n        /* \"#utility.yul\":7171:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7148:7154   */\n      dup7\n        /* \"#utility.yul\":7144:7161   */\n      add\n        /* \"#utility.yul\":7081:7175   */\n      tag_252\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7072:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7181   */\n      pop\n        /* \"#utility.yul\":6811:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7304   */\n    tag_254:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7293:7294   */\n      dup1\n        /* \"#utility.yul\":7286:7298   */\n      revert\n        /* \"#utility.yul\":7310:7617   */\n    tag_255:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7461:7479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7453:7459   */\n      dup3\n        /* \"#utility.yul\":7450:7480   */\n      gt\n        /* \"#utility.yul\":7447:7503   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":7483:7501   */\n      tag_386\n      tag_91\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7447:7503   */\n    tag_385:\n        /* \"#utility.yul\":7521:7550   */\n      tag_387\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7521:7550   */\n      tag_245\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7513:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7609   */\n      0x20\n        /* \"#utility.yul\":7599:7603   */\n      dup2\n        /* \"#utility.yul\":7595:7610   */\n      add\n        /* \"#utility.yul\":7587:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7769   */\n    tag_256:\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7715:7718   */\n      dup2\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7697:7727   */\n      calldatacopy\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7752:7758   */\n      dup4\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7743:7759   */\n      add\n        /* \"#utility.yul\":7736:7763   */\n      mstore\n        /* \"#utility.yul\":7623:7769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8198   */\n    tag_257:\n        /* \"#utility.yul\":7852:7857   */\n      0x00\n        /* \"#utility.yul\":7877:7942   */\n      tag_390\n        /* \"#utility.yul\":7893:7941   */\n      tag_391\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7893:7941   */\n      tag_255\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7877:7942   */\n      tag_249\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7868:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7958:7963   */\n      dup2\n        /* \"#utility.yul\":7951:7972   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x20\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":8041:8044   */\n      dup5\n        /* \"#utility.yul\":8032:8038   */\n      dup5\n        /* \"#utility.yul\":8027:8030   */\n      dup5\n        /* \"#utility.yul\":8023:8039   */\n      add\n        /* \"#utility.yul\":8020:8045   */\n      gt\n        /* \"#utility.yul\":8017:8129   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":8048:8127   */\n      tag_393\n      tag_254\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8017:8129   */\n    tag_392:\n        /* \"#utility.yul\":8138:8192   */\n      tag_394\n        /* \"#utility.yul\":8185:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8183   */\n      dup3\n        /* \"#utility.yul\":8175:8178   */\n      dup6\n        /* \"#utility.yul\":8138:8192   */\n      tag_256\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7858:8198   */\n      pop\n        /* \"#utility.yul\":7775:8198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8555   */\n    tag_258:\n        /* \"#utility.yul\":8272:8277   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8318   */\n      0x1f\n        /* \"#utility.yul\":8306:8312   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      slt\n        /* \"#utility.yul\":8288:8410   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_397\n      tag_247\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8288:8410   */\n    tag_396:\n        /* \"#utility.yul\":8446:8452   */\n      dup2\n        /* \"#utility.yul\":8433:8453   */\n      calldataload\n        /* \"#utility.yul\":8471:8549   */\n      tag_398\n        /* \"#utility.yul\":8545:8548   */\n      dup5\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8530:8534   */\n      0x20\n        /* \"#utility.yul\":8522:8528   */\n      dup7\n        /* \"#utility.yul\":8518:8535   */\n      add\n        /* \"#utility.yul\":8471:8549   */\n      tag_257\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8462:8549   */\n      swap2\n      pop\n        /* \"#utility.yul\":8278:8555   */\n      pop\n        /* \"#utility.yul\":8217:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:10070   */\n    tag_33:\n        /* \"#utility.yul\":8715:8721   */\n      0x00\n        /* \"#utility.yul\":8723:8729   */\n      dup1\n        /* \"#utility.yul\":8731:8737   */\n      0x00\n        /* \"#utility.yul\":8739:8745   */\n      dup1\n        /* \"#utility.yul\":8747:8753   */\n      0x00\n        /* \"#utility.yul\":8796:8799   */\n      0xa0\n        /* \"#utility.yul\":8784:8793   */\n      dup7\n        /* \"#utility.yul\":8775:8782   */\n      dup9\n        /* \"#utility.yul\":8771:8794   */\n      sub\n        /* \"#utility.yul\":8767:8800   */\n      slt\n        /* \"#utility.yul\":8764:8884   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":8803:8882   */\n      tag_401\n      tag_227\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8764:8884   */\n    tag_400:\n        /* \"#utility.yul\":8923:8924   */\n      0x00\n        /* \"#utility.yul\":8948:9001   */\n      tag_402\n        /* \"#utility.yul\":8993:9000   */\n      dup9\n        /* \"#utility.yul\":8984:8990   */\n      dup3\n        /* \"#utility.yul\":8973:8982   */\n      dup10\n        /* \"#utility.yul\":8969:8991   */\n      add\n        /* \"#utility.yul\":8948:9001   */\n      tag_232\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8938:9001   */\n      swap6\n      pop\n        /* \"#utility.yul\":8894:9011   */\n      pop\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9076:9129   */\n      tag_403\n        /* \"#utility.yul\":9121:9128   */\n      dup9\n        /* \"#utility.yul\":9112:9118   */\n      dup3\n        /* \"#utility.yul\":9101:9110   */\n      dup10\n        /* \"#utility.yul\":9097:9119   */\n      add\n        /* \"#utility.yul\":9076:9129   */\n      tag_232\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9066:9129   */\n      swap5\n      pop\n        /* \"#utility.yul\":9021:9139   */\n      pop\n        /* \"#utility.yul\":9206:9208   */\n      0x40\n        /* \"#utility.yul\":9195:9204   */\n      dup7\n        /* \"#utility.yul\":9191:9209   */\n      add\n        /* \"#utility.yul\":9178:9210   */\n      calldataload\n        /* \"#utility.yul\":9237:9255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9229:9235   */\n      dup2\n        /* \"#utility.yul\":9226:9256   */\n      gt\n        /* \"#utility.yul\":9223:9340   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9259:9338   */\n      tag_405\n      tag_228\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9223:9340   */\n    tag_404:\n        /* \"#utility.yul\":9364:9442   */\n      tag_406\n        /* \"#utility.yul\":9434:9441   */\n      dup9\n        /* \"#utility.yul\":9425:9431   */\n      dup3\n        /* \"#utility.yul\":9414:9423   */\n      dup10\n        /* \"#utility.yul\":9410:9432   */\n      add\n        /* \"#utility.yul\":9364:9442   */\n      tag_253\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9354:9442   */\n      swap4\n      pop\n        /* \"#utility.yul\":9149:9452   */\n      pop\n        /* \"#utility.yul\":9519:9521   */\n      0x60\n        /* \"#utility.yul\":9508:9517   */\n      dup7\n        /* \"#utility.yul\":9504:9522   */\n      add\n        /* \"#utility.yul\":9491:9523   */\n      calldataload\n        /* \"#utility.yul\":9550:9568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9542:9548   */\n      dup2\n        /* \"#utility.yul\":9539:9569   */\n      gt\n        /* \"#utility.yul\":9536:9653   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9572:9651   */\n      tag_408\n      tag_228\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9536:9653   */\n    tag_407:\n        /* \"#utility.yul\":9677:9755   */\n      tag_409\n        /* \"#utility.yul\":9747:9754   */\n      dup9\n        /* \"#utility.yul\":9738:9744   */\n      dup3\n        /* \"#utility.yul\":9727:9736   */\n      dup10\n        /* \"#utility.yul\":9723:9745   */\n      add\n        /* \"#utility.yul\":9677:9755   */\n      tag_253\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9667:9755   */\n      swap3\n      pop\n        /* \"#utility.yul\":9462:9765   */\n      pop\n        /* \"#utility.yul\":9832:9835   */\n      0x80\n        /* \"#utility.yul\":9821:9830   */\n      dup7\n        /* \"#utility.yul\":9817:9836   */\n      add\n        /* \"#utility.yul\":9804:9837   */\n      calldataload\n        /* \"#utility.yul\":9864:9882   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9856:9862   */\n      dup2\n        /* \"#utility.yul\":9853:9883   */\n      gt\n        /* \"#utility.yul\":9850:9967   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":9886:9965   */\n      tag_411\n      tag_228\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9850:9967   */\n    tag_410:\n        /* \"#utility.yul\":9991:10053   */\n      tag_412\n        /* \"#utility.yul\":10045:10052   */\n      dup9\n        /* \"#utility.yul\":10036:10042   */\n      dup3\n        /* \"#utility.yul\":10025:10034   */\n      dup10\n        /* \"#utility.yul\":10021:10043   */\n      add\n        /* \"#utility.yul\":9991:10053   */\n      tag_258\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9981:10053   */\n      swap2\n      pop\n        /* \"#utility.yul\":9775:10063   */\n      pop\n        /* \"#utility.yul\":8561:10070   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:10387   */\n    tag_259:\n        /* \"#utility.yul\":10153:10157   */\n      0x00\n        /* \"#utility.yul\":10243:10261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10235:10241   */\n      dup3\n        /* \"#utility.yul\":10232:10262   */\n      gt\n        /* \"#utility.yul\":10229:10285   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":10265:10283   */\n      tag_415\n      tag_91\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10229:10285   */\n    tag_414:\n        /* \"#utility.yul\":10315:10319   */\n      0x20\n        /* \"#utility.yul\":10307:10313   */\n      dup3\n        /* \"#utility.yul\":10303:10320   */\n      mul\n        /* \"#utility.yul\":10295:10320   */\n      swap1\n      pop\n        /* \"#utility.yul\":10375:10379   */\n      0x20\n        /* \"#utility.yul\":10369:10373   */\n      dup2\n        /* \"#utility.yul\":10365:10380   */\n      add\n        /* \"#utility.yul\":10357:10380   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10410:11120   */\n    tag_260:\n        /* \"#utility.yul\":10506:10511   */\n      0x00\n        /* \"#utility.yul\":10531:10612   */\n      tag_417\n        /* \"#utility.yul\":10547:10611   */\n      tag_418\n        /* \"#utility.yul\":10604:10610   */\n      dup5\n        /* \"#utility.yul\":10547:10611   */\n      tag_259\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10531:10612   */\n      tag_249\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10522:10612   */\n      swap1\n      pop\n        /* \"#utility.yul\":10632:10637   */\n      dup1\n        /* \"#utility.yul\":10661:10667   */\n      dup4\n        /* \"#utility.yul\":10654:10659   */\n      dup3\n        /* \"#utility.yul\":10647:10668   */\n      mstore\n        /* \"#utility.yul\":10695:10699   */\n      0x20\n        /* \"#utility.yul\":10688:10693   */\n      dup3\n        /* \"#utility.yul\":10684:10700   */\n      add\n        /* \"#utility.yul\":10677:10700   */\n      swap1\n      pop\n        /* \"#utility.yul\":10748:10752   */\n      0x20\n        /* \"#utility.yul\":10740:10746   */\n      dup5\n        /* \"#utility.yul\":10736:10753   */\n      mul\n        /* \"#utility.yul\":10728:10734   */\n      dup4\n        /* \"#utility.yul\":10724:10754   */\n      add\n        /* \"#utility.yul\":10777:10780   */\n      dup6\n        /* \"#utility.yul\":10769:10775   */\n      dup2\n        /* \"#utility.yul\":10766:10781   */\n      gt\n        /* \"#utility.yul\":10763:10885   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":10796:10875   */\n      tag_420\n      tag_251\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10763:10885   */\n    tag_419:\n        /* \"#utility.yul\":10911:10917   */\n      dup4\n        /* \"#utility.yul\":10894:11114   */\n    tag_421:\n        /* \"#utility.yul\":10928:10934   */\n      dup2\n        /* \"#utility.yul\":10923:10926   */\n      dup2\n        /* \"#utility.yul\":10920:10935   */\n      lt\n        /* \"#utility.yul\":10894:11114   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":11003:11006   */\n      dup1\n        /* \"#utility.yul\":11032:11069   */\n      tag_424\n        /* \"#utility.yul\":11065:11068   */\n      dup9\n        /* \"#utility.yul\":11053:11063   */\n      dup3\n        /* \"#utility.yul\":11032:11069   */\n      tag_232\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11027:11030   */\n      dup5\n        /* \"#utility.yul\":11020:11070   */\n      mstore\n        /* \"#utility.yul\":11099:11103   */\n      0x20\n        /* \"#utility.yul\":11094:11097   */\n      dup5\n        /* \"#utility.yul\":11090:11104   */\n      add\n        /* \"#utility.yul\":11083:11104   */\n      swap4\n      pop\n        /* \"#utility.yul\":10970:11114   */\n      pop\n        /* \"#utility.yul\":10954:10958   */\n      0x20\n        /* \"#utility.yul\":10949:10952   */\n      dup2\n        /* \"#utility.yul\":10945:10959   */\n      add\n        /* \"#utility.yul\":10938:10959   */\n      swap1\n      pop\n        /* \"#utility.yul\":10894:11114   */\n      jump(tag_421)\n    tag_423:\n        /* \"#utility.yul\":10898:10919   */\n      pop\n        /* \"#utility.yul\":10512:11120   */\n      pop\n      pop\n        /* \"#utility.yul\":10410:11120   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11143:11513   */\n    tag_261:\n        /* \"#utility.yul\":11214:11219   */\n      0x00\n        /* \"#utility.yul\":11263:11266   */\n      dup3\n        /* \"#utility.yul\":11256:11260   */\n      0x1f\n        /* \"#utility.yul\":11248:11254   */\n      dup4\n        /* \"#utility.yul\":11244:11261   */\n      add\n        /* \"#utility.yul\":11240:11267   */\n      slt\n        /* \"#utility.yul\":11230:11352   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11271:11350   */\n      tag_427\n      tag_247\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11230:11352   */\n    tag_426:\n        /* \"#utility.yul\":11388:11394   */\n      dup2\n        /* \"#utility.yul\":11375:11395   */\n      calldataload\n        /* \"#utility.yul\":11413:11507   */\n      tag_428\n        /* \"#utility.yul\":11503:11506   */\n      dup5\n        /* \"#utility.yul\":11495:11501   */\n      dup3\n        /* \"#utility.yul\":11488:11492   */\n      0x20\n        /* \"#utility.yul\":11480:11486   */\n      dup7\n        /* \"#utility.yul\":11476:11493   */\n      add\n        /* \"#utility.yul\":11413:11507   */\n      tag_260\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11404:11507   */\n      swap2\n      pop\n        /* \"#utility.yul\":11220:11513   */\n      pop\n        /* \"#utility.yul\":11143:11513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11519:12413   */\n    tag_37:\n        /* \"#utility.yul\":11637:11643   */\n      0x00\n        /* \"#utility.yul\":11645:11651   */\n      dup1\n        /* \"#utility.yul\":11694:11696   */\n      0x40\n        /* \"#utility.yul\":11682:11691   */\n      dup4\n        /* \"#utility.yul\":11673:11680   */\n      dup6\n        /* \"#utility.yul\":11669:11692   */\n      sub\n        /* \"#utility.yul\":11665:11697   */\n      slt\n        /* \"#utility.yul\":11662:11781   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":11700:11779   */\n      tag_431\n      tag_227\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11662:11781   */\n    tag_430:\n        /* \"#utility.yul\":11848:11849   */\n      0x00\n        /* \"#utility.yul\":11837:11846   */\n      dup4\n        /* \"#utility.yul\":11833:11850   */\n      add\n        /* \"#utility.yul\":11820:11851   */\n      calldataload\n        /* \"#utility.yul\":11878:11896   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11870:11876   */\n      dup2\n        /* \"#utility.yul\":11867:11897   */\n      gt\n        /* \"#utility.yul\":11864:11981   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":11900:11979   */\n      tag_433\n      tag_228\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11864:11981   */\n    tag_432:\n        /* \"#utility.yul\":12005:12083   */\n      tag_434\n        /* \"#utility.yul\":12075:12082   */\n      dup6\n        /* \"#utility.yul\":12066:12072   */\n      dup3\n        /* \"#utility.yul\":12055:12064   */\n      dup7\n        /* \"#utility.yul\":12051:12073   */\n      add\n        /* \"#utility.yul\":12005:12083   */\n      tag_261\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11995:12083   */\n      swap3\n      pop\n        /* \"#utility.yul\":11791:12093   */\n      pop\n        /* \"#utility.yul\":12160:12162   */\n      0x20\n        /* \"#utility.yul\":12149:12158   */\n      dup4\n        /* \"#utility.yul\":12145:12163   */\n      add\n        /* \"#utility.yul\":12132:12164   */\n      calldataload\n        /* \"#utility.yul\":12191:12209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12183:12189   */\n      dup2\n        /* \"#utility.yul\":12180:12210   */\n      gt\n        /* \"#utility.yul\":12177:12294   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":12213:12292   */\n      tag_436\n      tag_228\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12177:12294   */\n    tag_435:\n        /* \"#utility.yul\":12318:12396   */\n      tag_437\n        /* \"#utility.yul\":12388:12395   */\n      dup6\n        /* \"#utility.yul\":12379:12385   */\n      dup3\n        /* \"#utility.yul\":12368:12377   */\n      dup7\n        /* \"#utility.yul\":12364:12386   */\n      add\n        /* \"#utility.yul\":12318:12396   */\n      tag_253\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12308:12396   */\n      swap2\n      pop\n        /* \"#utility.yul\":12103:12406   */\n      pop\n        /* \"#utility.yul\":11519:12413   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12533   */\n    tag_262:\n        /* \"#utility.yul\":12486:12492   */\n      0x00\n        /* \"#utility.yul\":12520:12525   */\n      dup2\n        /* \"#utility.yul\":12514:12526   */\n      mload\n        /* \"#utility.yul\":12504:12526   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12539:12723   */\n    tag_263:\n        /* \"#utility.yul\":12638:12649   */\n      0x00\n        /* \"#utility.yul\":12672:12678   */\n      dup3\n        /* \"#utility.yul\":12667:12670   */\n      dup3\n        /* \"#utility.yul\":12660:12679   */\n      mstore\n        /* \"#utility.yul\":12712:12716   */\n      0x20\n        /* \"#utility.yul\":12707:12710   */\n      dup3\n        /* \"#utility.yul\":12703:12717   */\n      add\n        /* \"#utility.yul\":12688:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12539:12723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12729:12861   */\n    tag_264:\n        /* \"#utility.yul\":12796:12800   */\n      0x00\n        /* \"#utility.yul\":12819:12822   */\n      dup2\n        /* \"#utility.yul\":12811:12822   */\n      swap1\n      pop\n        /* \"#utility.yul\":12849:12853   */\n      0x20\n        /* \"#utility.yul\":12844:12847   */\n      dup3\n        /* \"#utility.yul\":12840:12854   */\n      add\n        /* \"#utility.yul\":12832:12854   */\n      swap1\n      pop\n        /* \"#utility.yul\":12729:12861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12867:12975   */\n    tag_265:\n        /* \"#utility.yul\":12944:12968   */\n      tag_442\n        /* \"#utility.yul\":12962:12967   */\n      dup2\n        /* \"#utility.yul\":12944:12968   */\n      tag_233\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":12939:12942   */\n      dup3\n        /* \"#utility.yul\":12932:12969   */\n      mstore\n        /* \"#utility.yul\":12867:12975   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12981:13160   */\n    tag_266:\n        /* \"#utility.yul\":13050:13060   */\n      0x00\n        /* \"#utility.yul\":13071:13117   */\n      tag_444\n        /* \"#utility.yul\":13113:13116   */\n      dup4\n        /* \"#utility.yul\":13105:13111   */\n      dup4\n        /* \"#utility.yul\":13071:13117   */\n      tag_265\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13149:13153   */\n      0x20\n        /* \"#utility.yul\":13144:13147   */\n      dup4\n        /* \"#utility.yul\":13140:13154   */\n      add\n        /* \"#utility.yul\":13126:13154   */\n      swap1\n      pop\n        /* \"#utility.yul\":12981:13160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13166:13279   */\n    tag_267:\n        /* \"#utility.yul\":13236:13240   */\n      0x00\n        /* \"#utility.yul\":13268:13272   */\n      0x20\n        /* \"#utility.yul\":13263:13266   */\n      dup3\n        /* \"#utility.yul\":13259:13273   */\n      add\n        /* \"#utility.yul\":13251:13273   */\n      swap1\n      pop\n        /* \"#utility.yul\":13166:13279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13315:14047   */\n    tag_268:\n        /* \"#utility.yul\":13434:13437   */\n      0x00\n        /* \"#utility.yul\":13463:13517   */\n      tag_447\n        /* \"#utility.yul\":13511:13516   */\n      dup3\n        /* \"#utility.yul\":13463:13517   */\n      tag_262\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13533:13619   */\n      tag_448\n        /* \"#utility.yul\":13612:13618   */\n      dup2\n        /* \"#utility.yul\":13607:13610   */\n      dup6\n        /* \"#utility.yul\":13533:13619   */\n      tag_263\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13526:13619   */\n      swap4\n      pop\n        /* \"#utility.yul\":13643:13699   */\n      tag_449\n        /* \"#utility.yul\":13693:13698   */\n      dup4\n        /* \"#utility.yul\":13643:13699   */\n      tag_264\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13722:13729   */\n      dup1\n        /* \"#utility.yul\":13753:13754   */\n      0x00\n        /* \"#utility.yul\":13738:14022   */\n    tag_450:\n        /* \"#utility.yul\":13763:13769   */\n      dup4\n        /* \"#utility.yul\":13760:13761   */\n      dup2\n        /* \"#utility.yul\":13757:13770   */\n      lt\n        /* \"#utility.yul\":13738:14022   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":13839:13845   */\n      dup2\n        /* \"#utility.yul\":13833:13846   */\n      mload\n        /* \"#utility.yul\":13866:13929   */\n      tag_453\n        /* \"#utility.yul\":13925:13928   */\n      dup9\n        /* \"#utility.yul\":13910:13923   */\n      dup3\n        /* \"#utility.yul\":13866:13929   */\n      tag_266\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":13859:13929   */\n      swap8\n      pop\n        /* \"#utility.yul\":13952:14012   */\n      tag_454\n        /* \"#utility.yul\":14005:14011   */\n      dup4\n        /* \"#utility.yul\":13952:14012   */\n      tag_267\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13942:14012   */\n      swap3\n      pop\n        /* \"#utility.yul\":13798:14022   */\n      pop\n        /* \"#utility.yul\":13785:13786   */\n      0x01\n        /* \"#utility.yul\":13782:13783   */\n      dup2\n        /* \"#utility.yul\":13778:13787   */\n      add\n        /* \"#utility.yul\":13773:13787   */\n      swap1\n      pop\n        /* \"#utility.yul\":13738:14022   */\n      jump(tag_450)\n    tag_452:\n        /* \"#utility.yul\":13742:13756   */\n      pop\n        /* \"#utility.yul\":14038:14041   */\n      dup6\n        /* \"#utility.yul\":14031:14041   */\n      swap4\n      pop\n        /* \"#utility.yul\":13439:14047   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13315:14047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14053:14426   */\n    tag_40:\n        /* \"#utility.yul\":14196:14200   */\n      0x00\n        /* \"#utility.yul\":14234:14236   */\n      0x20\n        /* \"#utility.yul\":14223:14232   */\n      dup3\n        /* \"#utility.yul\":14219:14237   */\n      add\n        /* \"#utility.yul\":14211:14237   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14292   */\n      dup2\n        /* \"#utility.yul\":14277:14281   */\n      dup2\n        /* \"#utility.yul\":14273:14293   */\n      sub\n        /* \"#utility.yul\":14269:14270   */\n      0x00\n        /* \"#utility.yul\":14258:14267   */\n      dup4\n        /* \"#utility.yul\":14254:14271   */\n      add\n        /* \"#utility.yul\":14247:14294   */\n      mstore\n        /* \"#utility.yul\":14311:14419   */\n      tag_456\n        /* \"#utility.yul\":14414:14418   */\n      dup2\n        /* \"#utility.yul\":14405:14411   */\n      dup5\n        /* \"#utility.yul\":14311:14419   */\n      tag_268\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14303:14419   */\n      swap1\n      pop\n        /* \"#utility.yul\":14053:14426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14432:14548   */\n    tag_269:\n        /* \"#utility.yul\":14502:14523   */\n      tag_458\n        /* \"#utility.yul\":14517:14522   */\n      dup2\n        /* \"#utility.yul\":14502:14523   */\n      tag_240\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14495:14500   */\n      dup2\n        /* \"#utility.yul\":14492:14524   */\n      eq\n        /* \"#utility.yul\":14482:14542   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":14538:14539   */\n      0x00\n        /* \"#utility.yul\":14535:14536   */\n      dup1\n        /* \"#utility.yul\":14528:14540   */\n      revert\n        /* \"#utility.yul\":14482:14542   */\n    tag_459:\n        /* \"#utility.yul\":14432:14548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14554:14687   */\n    tag_270:\n        /* \"#utility.yul\":14597:14602   */\n      0x00\n        /* \"#utility.yul\":14635:14641   */\n      dup2\n        /* \"#utility.yul\":14622:14642   */\n      calldataload\n        /* \"#utility.yul\":14613:14642   */\n      swap1\n      pop\n        /* \"#utility.yul\":14651:14681   */\n      tag_461\n        /* \"#utility.yul\":14675:14680   */\n      dup2\n        /* \"#utility.yul\":14651:14681   */\n      tag_269\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14554:14687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14693:15161   */\n    tag_43:\n        /* \"#utility.yul\":14758:14764   */\n      0x00\n        /* \"#utility.yul\":14766:14772   */\n      dup1\n        /* \"#utility.yul\":14815:14817   */\n      0x40\n        /* \"#utility.yul\":14803:14812   */\n      dup4\n        /* \"#utility.yul\":14794:14801   */\n      dup6\n        /* \"#utility.yul\":14790:14813   */\n      sub\n        /* \"#utility.yul\":14786:14818   */\n      slt\n        /* \"#utility.yul\":14783:14902   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":14821:14900   */\n      tag_464\n      tag_227\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14783:14902   */\n    tag_463:\n        /* \"#utility.yul\":14941:14942   */\n      0x00\n        /* \"#utility.yul\":14966:15019   */\n      tag_465\n        /* \"#utility.yul\":15011:15018   */\n      dup6\n        /* \"#utility.yul\":15002:15008   */\n      dup3\n        /* \"#utility.yul\":14991:15000   */\n      dup7\n        /* \"#utility.yul\":14987:15009   */\n      add\n        /* \"#utility.yul\":14966:15019   */\n      tag_232\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14956:15019   */\n      swap3\n      pop\n        /* \"#utility.yul\":14912:15029   */\n      pop\n        /* \"#utility.yul\":15068:15070   */\n      0x20\n        /* \"#utility.yul\":15094:15144   */\n      tag_466\n        /* \"#utility.yul\":15136:15143   */\n      dup6\n        /* \"#utility.yul\":15127:15133   */\n      dup3\n        /* \"#utility.yul\":15116:15125   */\n      dup7\n        /* \"#utility.yul\":15112:15134   */\n      add\n        /* \"#utility.yul\":15094:15144   */\n      tag_270\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15084:15144   */\n      swap2\n      pop\n        /* \"#utility.yul\":15039:15154   */\n      pop\n        /* \"#utility.yul\":14693:15161   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15167:15641   */\n    tag_51:\n        /* \"#utility.yul\":15235:15241   */\n      0x00\n        /* \"#utility.yul\":15243:15249   */\n      dup1\n        /* \"#utility.yul\":15292:15294   */\n      0x40\n        /* \"#utility.yul\":15280:15289   */\n      dup4\n        /* \"#utility.yul\":15271:15278   */\n      dup6\n        /* \"#utility.yul\":15267:15290   */\n      sub\n        /* \"#utility.yul\":15263:15295   */\n      slt\n        /* \"#utility.yul\":15260:15379   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":15298:15377   */\n      tag_469\n      tag_227\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15260:15379   */\n    tag_468:\n        /* \"#utility.yul\":15418:15419   */\n      0x00\n        /* \"#utility.yul\":15443:15496   */\n      tag_470\n        /* \"#utility.yul\":15488:15495   */\n      dup6\n        /* \"#utility.yul\":15479:15485   */\n      dup3\n        /* \"#utility.yul\":15468:15477   */\n      dup7\n        /* \"#utility.yul\":15464:15486   */\n      add\n        /* \"#utility.yul\":15443:15496   */\n      tag_232\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15433:15496   */\n      swap3\n      pop\n        /* \"#utility.yul\":15389:15506   */\n      pop\n        /* \"#utility.yul\":15545:15547   */\n      0x20\n        /* \"#utility.yul\":15571:15624   */\n      tag_471\n        /* \"#utility.yul\":15616:15623   */\n      dup6\n        /* \"#utility.yul\":15607:15613   */\n      dup3\n        /* \"#utility.yul\":15596:15605   */\n      dup7\n        /* \"#utility.yul\":15592:15614   */\n      add\n        /* \"#utility.yul\":15571:15624   */\n      tag_232\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15561:15624   */\n      swap2\n      pop\n        /* \"#utility.yul\":15516:15634   */\n      pop\n        /* \"#utility.yul\":15167:15641   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15647:16736   */\n    tag_56:\n        /* \"#utility.yul\":15751:15757   */\n      0x00\n        /* \"#utility.yul\":15759:15765   */\n      dup1\n        /* \"#utility.yul\":15767:15773   */\n      0x00\n        /* \"#utility.yul\":15775:15781   */\n      dup1\n        /* \"#utility.yul\":15783:15789   */\n      0x00\n        /* \"#utility.yul\":15832:15835   */\n      0xa0\n        /* \"#utility.yul\":15820:15829   */\n      dup7\n        /* \"#utility.yul\":15811:15818   */\n      dup9\n        /* \"#utility.yul\":15807:15830   */\n      sub\n        /* \"#utility.yul\":15803:15836   */\n      slt\n        /* \"#utility.yul\":15800:15920   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":15839:15918   */\n      tag_474\n      tag_227\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15800:15920   */\n    tag_473:\n        /* \"#utility.yul\":15959:15960   */\n      0x00\n        /* \"#utility.yul\":15984:16037   */\n      tag_475\n        /* \"#utility.yul\":16029:16036   */\n      dup9\n        /* \"#utility.yul\":16020:16026   */\n      dup3\n        /* \"#utility.yul\":16009:16018   */\n      dup10\n        /* \"#utility.yul\":16005:16027   */\n      add\n        /* \"#utility.yul\":15984:16037   */\n      tag_232\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":15974:16037   */\n      swap6\n      pop\n        /* \"#utility.yul\":15930:16047   */\n      pop\n        /* \"#utility.yul\":16086:16088   */\n      0x20\n        /* \"#utility.yul\":16112:16165   */\n      tag_476\n        /* \"#utility.yul\":16157:16164   */\n      dup9\n        /* \"#utility.yul\":16148:16154   */\n      dup3\n        /* \"#utility.yul\":16137:16146   */\n      dup10\n        /* \"#utility.yul\":16133:16155   */\n      add\n        /* \"#utility.yul\":16112:16165   */\n      tag_232\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16102:16165   */\n      swap5\n      pop\n        /* \"#utility.yul\":16057:16175   */\n      pop\n        /* \"#utility.yul\":16214:16216   */\n      0x40\n        /* \"#utility.yul\":16240:16293   */\n      tag_477\n        /* \"#utility.yul\":16285:16292   */\n      dup9\n        /* \"#utility.yul\":16276:16282   */\n      dup3\n        /* \"#utility.yul\":16265:16274   */\n      dup10\n        /* \"#utility.yul\":16261:16283   */\n      add\n        /* \"#utility.yul\":16240:16293   */\n      tag_235\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16230:16293   */\n      swap4\n      pop\n        /* \"#utility.yul\":16185:16303   */\n      pop\n        /* \"#utility.yul\":16342:16344   */\n      0x60\n        /* \"#utility.yul\":16368:16421   */\n      tag_478\n        /* \"#utility.yul\":16413:16420   */\n      dup9\n        /* \"#utility.yul\":16404:16410   */\n      dup3\n        /* \"#utility.yul\":16393:16402   */\n      dup10\n        /* \"#utility.yul\":16389:16411   */\n      add\n        /* \"#utility.yul\":16368:16421   */\n      tag_235\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16358:16421   */\n      swap3\n      pop\n        /* \"#utility.yul\":16313:16431   */\n      pop\n        /* \"#utility.yul\":16498:16501   */\n      0x80\n        /* \"#utility.yul\":16487:16496   */\n      dup7\n        /* \"#utility.yul\":16483:16502   */\n      add\n        /* \"#utility.yul\":16470:16503   */\n      calldataload\n        /* \"#utility.yul\":16530:16548   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16522:16528   */\n      dup2\n        /* \"#utility.yul\":16519:16549   */\n      gt\n        /* \"#utility.yul\":16516:16633   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":16552:16631   */\n      tag_480\n      tag_228\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":16516:16633   */\n    tag_479:\n        /* \"#utility.yul\":16657:16719   */\n      tag_481\n        /* \"#utility.yul\":16711:16718   */\n      dup9\n        /* \"#utility.yul\":16702:16708   */\n      dup3\n        /* \"#utility.yul\":16691:16700   */\n      dup10\n        /* \"#utility.yul\":16687:16709   */\n      add\n        /* \"#utility.yul\":16657:16719   */\n      tag_258\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16647:16719   */\n      swap2\n      pop\n        /* \"#utility.yul\":16441:16729   */\n      pop\n        /* \"#utility.yul\":15647:16736   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16742:16971   */\n    tag_271:\n        /* \"#utility.yul\":16882:16916   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":16878:16879   */\n      0x00\n        /* \"#utility.yul\":16870:16876   */\n      dup3\n        /* \"#utility.yul\":16866:16880   */\n      add\n        /* \"#utility.yul\":16859:16917   */\n      mstore\n        /* \"#utility.yul\":16951:16963   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16946:16948   */\n      0x20\n        /* \"#utility.yul\":16938:16944   */\n      dup3\n        /* \"#utility.yul\":16934:16949   */\n      add\n        /* \"#utility.yul\":16927:16964   */\n      mstore\n        /* \"#utility.yul\":16742:16971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16977:17343   */\n    tag_272:\n        /* \"#utility.yul\":17119:17122   */\n      0x00\n        /* \"#utility.yul\":17140:17207   */\n      tag_484\n        /* \"#utility.yul\":17204:17206   */\n      0x2a\n        /* \"#utility.yul\":17199:17202   */\n      dup4\n        /* \"#utility.yul\":17140:17207   */\n      tag_243\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17133:17207   */\n      swap2\n      pop\n        /* \"#utility.yul\":17216:17309   */\n      tag_485\n        /* \"#utility.yul\":17305:17308   */\n      dup3\n        /* \"#utility.yul\":17216:17309   */\n      tag_271\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17334:17336   */\n      0x40\n        /* \"#utility.yul\":17329:17332   */\n      dup3\n        /* \"#utility.yul\":17325:17337   */\n      add\n        /* \"#utility.yul\":17318:17337   */\n      swap1\n      pop\n        /* \"#utility.yul\":16977:17343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17349:17768   */\n    tag_61:\n        /* \"#utility.yul\":17515:17519   */\n      0x00\n        /* \"#utility.yul\":17553:17555   */\n      0x20\n        /* \"#utility.yul\":17542:17551   */\n      dup3\n        /* \"#utility.yul\":17538:17556   */\n      add\n        /* \"#utility.yul\":17530:17556   */\n      swap1\n      pop\n        /* \"#utility.yul\":17602:17611   */\n      dup2\n        /* \"#utility.yul\":17596:17600   */\n      dup2\n        /* \"#utility.yul\":17592:17612   */\n      sub\n        /* \"#utility.yul\":17588:17589   */\n      0x00\n        /* \"#utility.yul\":17577:17586   */\n      dup4\n        /* \"#utility.yul\":17573:17590   */\n      add\n        /* \"#utility.yul\":17566:17613   */\n      mstore\n        /* \"#utility.yul\":17630:17761   */\n      tag_487\n        /* \"#utility.yul\":17756:17760   */\n      dup2\n        /* \"#utility.yul\":17630:17761   */\n      tag_272\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17622:17761   */\n      swap1\n      pop\n        /* \"#utility.yul\":17349:17768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17774:17954   */\n    tag_273:\n        /* \"#utility.yul\":17822:17899   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17819:17820   */\n      0x00\n        /* \"#utility.yul\":17812:17900   */\n      mstore\n        /* \"#utility.yul\":17919:17923   */\n      0x22\n        /* \"#utility.yul\":17916:17917   */\n      0x04\n        /* \"#utility.yul\":17909:17924   */\n      mstore\n        /* \"#utility.yul\":17943:17947   */\n      0x24\n        /* \"#utility.yul\":17940:17941   */\n      0x00\n        /* \"#utility.yul\":17933:17948   */\n      revert\n        /* \"#utility.yul\":17960:18280   */\n    tag_69:\n        /* \"#utility.yul\":18004:18010   */\n      0x00\n        /* \"#utility.yul\":18041:18042   */\n      0x02\n        /* \"#utility.yul\":18035:18039   */\n      dup3\n        /* \"#utility.yul\":18031:18043   */\n      div\n        /* \"#utility.yul\":18021:18043   */\n      swap1\n      pop\n        /* \"#utility.yul\":18088:18089   */\n      0x01\n        /* \"#utility.yul\":18082:18086   */\n      dup3\n        /* \"#utility.yul\":18078:18090   */\n      and\n        /* \"#utility.yul\":18109:18127   */\n      dup1\n        /* \"#utility.yul\":18099:18180   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":18165:18169   */\n      0x7f\n        /* \"#utility.yul\":18157:18163   */\n      dup3\n        /* \"#utility.yul\":18153:18170   */\n      and\n        /* \"#utility.yul\":18143:18170   */\n      swap2\n      pop\n        /* \"#utility.yul\":18099:18180   */\n    tag_490:\n        /* \"#utility.yul\":18227:18229   */\n      0x20\n        /* \"#utility.yul\":18219:18225   */\n      dup3\n        /* \"#utility.yul\":18216:18230   */\n      lt\n        /* \"#utility.yul\":18196:18214   */\n      dup2\n        /* \"#utility.yul\":18193:18231   */\n      sub\n        /* \"#utility.yul\":18190:18274   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":18246:18264   */\n      tag_492\n      tag_273\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18190:18274   */\n    tag_491:\n        /* \"#utility.yul\":18011:18280   */\n      pop\n        /* \"#utility.yul\":17960:18280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18286:18519   */\n    tag_274:\n        /* \"#utility.yul\":18426:18460   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":18422:18423   */\n      0x00\n        /* \"#utility.yul\":18414:18420   */\n      dup3\n        /* \"#utility.yul\":18410:18424   */\n      add\n        /* \"#utility.yul\":18403:18461   */\n      mstore\n        /* \"#utility.yul\":18495:18511   */\n      0x6572206f7220617070726f766564000000000000000000000000000000000000\n        /* \"#utility.yul\":18490:18492   */\n      0x20\n        /* \"#utility.yul\":18482:18488   */\n      dup3\n        /* \"#utility.yul\":18478:18493   */\n      add\n        /* \"#utility.yul\":18471:18512   */\n      mstore\n        /* \"#utility.yul\":18286:18519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18525:18891   */\n    tag_275:\n        /* \"#utility.yul\":18667:18670   */\n      0x00\n        /* \"#utility.yul\":18688:18755   */\n      tag_495\n        /* \"#utility.yul\":18752:18754   */\n      0x2e\n        /* \"#utility.yul\":18747:18750   */\n      dup4\n        /* \"#utility.yul\":18688:18755   */\n      tag_243\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18681:18755   */\n      swap2\n      pop\n        /* \"#utility.yul\":18764:18857   */\n      tag_496\n        /* \"#utility.yul\":18853:18856   */\n      dup3\n        /* \"#utility.yul\":18764:18857   */\n      tag_274\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18882:18884   */\n      0x40\n        /* \"#utility.yul\":18877:18880   */\n      dup3\n        /* \"#utility.yul\":18873:18885   */\n      add\n        /* \"#utility.yul\":18866:18885   */\n      swap1\n      pop\n        /* \"#utility.yul\":18525:18891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18897:19316   */\n    tag_82:\n        /* \"#utility.yul\":19063:19067   */\n      0x00\n        /* \"#utility.yul\":19101:19103   */\n      0x20\n        /* \"#utility.yul\":19090:19099   */\n      dup3\n        /* \"#utility.yul\":19086:19104   */\n      add\n        /* \"#utility.yul\":19078:19104   */\n      swap1\n      pop\n        /* \"#utility.yul\":19150:19159   */\n      dup2\n        /* \"#utility.yul\":19144:19148   */\n      dup2\n        /* \"#utility.yul\":19140:19160   */\n      sub\n        /* \"#utility.yul\":19136:19137   */\n      0x00\n        /* \"#utility.yul\":19125:19134   */\n      dup4\n        /* \"#utility.yul\":19121:19138   */\n      add\n        /* \"#utility.yul\":19114:19161   */\n      mstore\n        /* \"#utility.yul\":19178:19309   */\n      tag_498\n        /* \"#utility.yul\":19304:19308   */\n      dup2\n        /* \"#utility.yul\":19178:19309   */\n      tag_275\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19170:19309   */\n      swap1\n      pop\n        /* \"#utility.yul\":18897:19316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19322:19550   */\n    tag_276:\n        /* \"#utility.yul\":19462:19496   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19458:19459   */\n      0x00\n        /* \"#utility.yul\":19450:19456   */\n      dup3\n        /* \"#utility.yul\":19446:19460   */\n      add\n        /* \"#utility.yul\":19439:19497   */\n      mstore\n        /* \"#utility.yul\":19531:19542   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19526:19528   */\n      0x20\n        /* \"#utility.yul\":19518:19524   */\n      dup3\n        /* \"#utility.yul\":19514:19529   */\n      add\n        /* \"#utility.yul\":19507:19543   */\n      mstore\n        /* \"#utility.yul\":19322:19550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19556:19922   */\n    tag_277:\n        /* \"#utility.yul\":19698:19701   */\n      0x00\n        /* \"#utility.yul\":19719:19786   */\n      tag_501\n        /* \"#utility.yul\":19783:19785   */\n      0x29\n        /* \"#utility.yul\":19778:19781   */\n      dup4\n        /* \"#utility.yul\":19719:19786   */\n      tag_243\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":19712:19786   */\n      swap2\n      pop\n        /* \"#utility.yul\":19795:19888   */\n      tag_502\n        /* \"#utility.yul\":19884:19887   */\n      dup3\n        /* \"#utility.yul\":19795:19888   */\n      tag_276\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19913:19915   */\n      0x40\n        /* \"#utility.yul\":19908:19911   */\n      dup3\n        /* \"#utility.yul\":19904:19916   */\n      add\n        /* \"#utility.yul\":19897:19916   */\n      swap1\n      pop\n        /* \"#utility.yul\":19556:19922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19928:20347   */\n    tag_88:\n        /* \"#utility.yul\":20094:20098   */\n      0x00\n        /* \"#utility.yul\":20132:20134   */\n      0x20\n        /* \"#utility.yul\":20121:20130   */\n      dup3\n        /* \"#utility.yul\":20117:20135   */\n      add\n        /* \"#utility.yul\":20109:20135   */\n      swap1\n      pop\n        /* \"#utility.yul\":20181:20190   */\n      dup2\n        /* \"#utility.yul\":20175:20179   */\n      dup2\n        /* \"#utility.yul\":20171:20191   */\n      sub\n        /* \"#utility.yul\":20167:20168   */\n      0x00\n        /* \"#utility.yul\":20156:20165   */\n      dup4\n        /* \"#utility.yul\":20152:20169   */\n      add\n        /* \"#utility.yul\":20145:20192   */\n      mstore\n        /* \"#utility.yul\":20209:20340   */\n      tag_504\n        /* \"#utility.yul\":20335:20339   */\n      dup2\n        /* \"#utility.yul\":20209:20340   */\n      tag_277\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20201:20340   */\n      swap1\n      pop\n        /* \"#utility.yul\":19928:20347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20353:20533   */\n    tag_99:\n        /* \"#utility.yul\":20401:20478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20398:20399   */\n      0x00\n        /* \"#utility.yul\":20391:20479   */\n      mstore\n        /* \"#utility.yul\":20498:20502   */\n      0x32\n        /* \"#utility.yul\":20495:20496   */\n      0x04\n        /* \"#utility.yul\":20488:20503   */\n      mstore\n        /* \"#utility.yul\":20522:20526   */\n      0x24\n        /* \"#utility.yul\":20519:20520   */\n      0x00\n        /* \"#utility.yul\":20512:20527   */\n      revert\n        /* \"#utility.yul\":20539:20719   */\n    tag_278:\n        /* \"#utility.yul\":20587:20664   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20584:20585   */\n      0x00\n        /* \"#utility.yul\":20577:20665   */\n      mstore\n        /* \"#utility.yul\":20684:20688   */\n      0x11\n        /* \"#utility.yul\":20681:20682   */\n      0x04\n        /* \"#utility.yul\":20674:20689   */\n      mstore\n        /* \"#utility.yul\":20708:20712   */\n      0x24\n        /* \"#utility.yul\":20705:20706   */\n      0x00\n        /* \"#utility.yul\":20698:20713   */\n      revert\n        /* \"#utility.yul\":20725:20958   */\n    tag_105:\n        /* \"#utility.yul\":20764:20767   */\n      0x00\n        /* \"#utility.yul\":20787:20811   */\n      tag_508\n        /* \"#utility.yul\":20805:20810   */\n      dup3\n        /* \"#utility.yul\":20787:20811   */\n      tag_233\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20778:20811   */\n      swap2\n      pop\n        /* \"#utility.yul\":20833:20899   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20826:20831   */\n      dup3\n        /* \"#utility.yul\":20823:20900   */\n      sub\n        /* \"#utility.yul\":20820:20923   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":20903:20921   */\n      tag_510\n      tag_278\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":20820:20923   */\n    tag_509:\n        /* \"#utility.yul\":20950:20951   */\n      0x01\n        /* \"#utility.yul\":20943:20948   */\n      dup3\n        /* \"#utility.yul\":20939:20952   */\n      add\n        /* \"#utility.yul\":20932:20952   */\n      swap1\n      pop\n        /* \"#utility.yul\":20725:20958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20964:21191   */\n    tag_279:\n        /* \"#utility.yul\":21104:21138   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":21100:21101   */\n      0x00\n        /* \"#utility.yul\":21092:21098   */\n      dup3\n        /* \"#utility.yul\":21088:21102   */\n      add\n        /* \"#utility.yul\":21081:21139   */\n      mstore\n        /* \"#utility.yul\":21173:21183   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21168:21170   */\n      0x20\n        /* \"#utility.yul\":21160:21166   */\n      dup3\n        /* \"#utility.yul\":21156:21171   */\n      add\n        /* \"#utility.yul\":21149:21184   */\n      mstore\n        /* \"#utility.yul\":20964:21191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21197:21563   */\n    tag_280:\n        /* \"#utility.yul\":21339:21342   */\n      0x00\n        /* \"#utility.yul\":21360:21427   */\n      tag_513\n        /* \"#utility.yul\":21424:21426   */\n      0x28\n        /* \"#utility.yul\":21419:21422   */\n      dup4\n        /* \"#utility.yul\":21360:21427   */\n      tag_243\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21353:21427   */\n      swap2\n      pop\n        /* \"#utility.yul\":21436:21529   */\n      tag_514\n        /* \"#utility.yul\":21525:21528   */\n      dup3\n        /* \"#utility.yul\":21436:21529   */\n      tag_279\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":21554:21556   */\n      0x40\n        /* \"#utility.yul\":21549:21552   */\n      dup3\n        /* \"#utility.yul\":21545:21557   */\n      add\n        /* \"#utility.yul\":21538:21557   */\n      swap1\n      pop\n        /* \"#utility.yul\":21197:21563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21569:21988   */\n    tag_126:\n        /* \"#utility.yul\":21735:21739   */\n      0x00\n        /* \"#utility.yul\":21773:21775   */\n      0x20\n        /* \"#utility.yul\":21762:21771   */\n      dup3\n        /* \"#utility.yul\":21758:21776   */\n      add\n        /* \"#utility.yul\":21750:21776   */\n      swap1\n      pop\n        /* \"#utility.yul\":21822:21831   */\n      dup2\n        /* \"#utility.yul\":21816:21820   */\n      dup2\n        /* \"#utility.yul\":21812:21832   */\n      sub\n        /* \"#utility.yul\":21808:21809   */\n      0x00\n        /* \"#utility.yul\":21797:21806   */\n      dup4\n        /* \"#utility.yul\":21793:21810   */\n      add\n        /* \"#utility.yul\":21786:21833   */\n      mstore\n        /* \"#utility.yul\":21850:21981   */\n      tag_516\n        /* \"#utility.yul\":21976:21980   */\n      dup2\n        /* \"#utility.yul\":21850:21981   */\n      tag_280\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21842:21981   */\n      swap1\n      pop\n        /* \"#utility.yul\":21569:21988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21994:22218   */\n    tag_281:\n        /* \"#utility.yul\":22134:22168   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":22130:22131   */\n      0x00\n        /* \"#utility.yul\":22122:22128   */\n      dup3\n        /* \"#utility.yul\":22118:22132   */\n      add\n        /* \"#utility.yul\":22111:22169   */\n      mstore\n        /* \"#utility.yul\":22203:22210   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22198:22200   */\n      0x20\n        /* \"#utility.yul\":22190:22196   */\n      dup3\n        /* \"#utility.yul\":22186:22201   */\n      add\n        /* \"#utility.yul\":22179:22211   */\n      mstore\n        /* \"#utility.yul\":21994:22218   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22224:22590   */\n    tag_282:\n        /* \"#utility.yul\":22366:22369   */\n      0x00\n        /* \"#utility.yul\":22387:22454   */\n      tag_519\n        /* \"#utility.yul\":22451:22453   */\n      0x25\n        /* \"#utility.yul\":22446:22449   */\n      dup4\n        /* \"#utility.yul\":22387:22454   */\n      tag_243\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22380:22454   */\n      swap2\n      pop\n        /* \"#utility.yul\":22463:22556   */\n      tag_520\n        /* \"#utility.yul\":22552:22555   */\n      dup3\n        /* \"#utility.yul\":22463:22556   */\n      tag_281\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":22581:22583   */\n      0x40\n        /* \"#utility.yul\":22576:22579   */\n      dup3\n        /* \"#utility.yul\":22572:22584   */\n      add\n        /* \"#utility.yul\":22565:22584   */\n      swap1\n      pop\n        /* \"#utility.yul\":22224:22590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22596:23015   */\n    tag_129:\n        /* \"#utility.yul\":22762:22766   */\n      0x00\n        /* \"#utility.yul\":22800:22802   */\n      0x20\n        /* \"#utility.yul\":22789:22798   */\n      dup3\n        /* \"#utility.yul\":22785:22803   */\n      add\n        /* \"#utility.yul\":22777:22803   */\n      swap1\n      pop\n        /* \"#utility.yul\":22849:22858   */\n      dup2\n        /* \"#utility.yul\":22843:22847   */\n      dup2\n        /* \"#utility.yul\":22839:22859   */\n      sub\n        /* \"#utility.yul\":22835:22836   */\n      0x00\n        /* \"#utility.yul\":22824:22833   */\n      dup4\n        /* \"#utility.yul\":22820:22837   */\n      add\n        /* \"#utility.yul\":22813:22860   */\n      mstore\n        /* \"#utility.yul\":22877:23008   */\n      tag_522\n        /* \"#utility.yul\":23003:23007   */\n      dup2\n        /* \"#utility.yul\":22877:23008   */\n      tag_282\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":22869:23008   */\n      swap1\n      pop\n        /* \"#utility.yul\":22596:23015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23021:23250   */\n    tag_283:\n        /* \"#utility.yul\":23161:23195   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":23157:23158   */\n      0x00\n        /* \"#utility.yul\":23149:23155   */\n      dup3\n        /* \"#utility.yul\":23145:23159   */\n      add\n        /* \"#utility.yul\":23138:23196   */\n      mstore\n        /* \"#utility.yul\":23230:23242   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23225:23227   */\n      0x20\n        /* \"#utility.yul\":23217:23223   */\n      dup3\n        /* \"#utility.yul\":23213:23228   */\n      add\n        /* \"#utility.yul\":23206:23243   */\n      mstore\n        /* \"#utility.yul\":23021:23250   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23256:23622   */\n    tag_284:\n        /* \"#utility.yul\":23398:23401   */\n      0x00\n        /* \"#utility.yul\":23419:23486   */\n      tag_525\n        /* \"#utility.yul\":23483:23485   */\n      0x2a\n        /* \"#utility.yul\":23478:23481   */\n      dup4\n        /* \"#utility.yul\":23419:23486   */\n      tag_243\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":23412:23486   */\n      swap2\n      pop\n        /* \"#utility.yul\":23495:23588   */\n      tag_526\n        /* \"#utility.yul\":23584:23587   */\n      dup3\n        /* \"#utility.yul\":23495:23588   */\n      tag_283\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":23613:23615   */\n      0x40\n        /* \"#utility.yul\":23608:23611   */\n      dup3\n        /* \"#utility.yul\":23604:23616   */\n      add\n        /* \"#utility.yul\":23597:23616   */\n      swap1\n      pop\n        /* \"#utility.yul\":23256:23622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23628:24047   */\n    tag_142:\n        /* \"#utility.yul\":23794:23798   */\n      0x00\n        /* \"#utility.yul\":23832:23834   */\n      0x20\n        /* \"#utility.yul\":23821:23830   */\n      dup3\n        /* \"#utility.yul\":23817:23835   */\n      add\n        /* \"#utility.yul\":23809:23835   */\n      swap1\n      pop\n        /* \"#utility.yul\":23881:23890   */\n      dup2\n        /* \"#utility.yul\":23875:23879   */\n      dup2\n        /* \"#utility.yul\":23871:23891   */\n      sub\n        /* \"#utility.yul\":23867:23868   */\n      0x00\n        /* \"#utility.yul\":23856:23865   */\n      dup4\n        /* \"#utility.yul\":23852:23869   */\n      add\n        /* \"#utility.yul\":23845:23892   */\n      mstore\n        /* \"#utility.yul\":23909:24040   */\n      tag_528\n        /* \"#utility.yul\":24035:24039   */\n      dup2\n        /* \"#utility.yul\":23909:24040   */\n      tag_284\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23901:24040   */\n      swap1\n      pop\n        /* \"#utility.yul\":23628:24047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24053:24244   */\n    tag_144:\n        /* \"#utility.yul\":24093:24096   */\n      0x00\n        /* \"#utility.yul\":24112:24132   */\n      tag_530\n        /* \"#utility.yul\":24130:24131   */\n      dup3\n        /* \"#utility.yul\":24112:24132   */\n      tag_233\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":24107:24132   */\n      swap2\n      pop\n        /* \"#utility.yul\":24146:24166   */\n      tag_531\n        /* \"#utility.yul\":24164:24165   */\n      dup4\n        /* \"#utility.yul\":24146:24166   */\n      tag_233\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":24141:24166   */\n      swap3\n      pop\n        /* \"#utility.yul\":24189:24190   */\n      dup3\n        /* \"#utility.yul\":24186:24187   */\n      dup3\n        /* \"#utility.yul\":24182:24191   */\n      add\n        /* \"#utility.yul\":24175:24191   */\n      swap1\n      pop\n        /* \"#utility.yul\":24210:24213   */\n      dup1\n        /* \"#utility.yul\":24207:24208   */\n      dup3\n        /* \"#utility.yul\":24204:24214   */\n      gt\n        /* \"#utility.yul\":24201:24237   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":24217:24235   */\n      tag_533\n      tag_278\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":24201:24237   */\n    tag_532:\n        /* \"#utility.yul\":24053:24244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24250:24884   */\n    tag_147:\n        /* \"#utility.yul\":24471:24475   */\n      0x00\n        /* \"#utility.yul\":24509:24511   */\n      0x40\n        /* \"#utility.yul\":24498:24507   */\n      dup3\n        /* \"#utility.yul\":24494:24512   */\n      add\n        /* \"#utility.yul\":24486:24512   */\n      swap1\n      pop\n        /* \"#utility.yul\":24558:24567   */\n      dup2\n        /* \"#utility.yul\":24552:24556   */\n      dup2\n        /* \"#utility.yul\":24548:24568   */\n      sub\n        /* \"#utility.yul\":24544:24545   */\n      0x00\n        /* \"#utility.yul\":24533:24542   */\n      dup4\n        /* \"#utility.yul\":24529:24546   */\n      add\n        /* \"#utility.yul\":24522:24569   */\n      mstore\n        /* \"#utility.yul\":24586:24694   */\n      tag_535\n        /* \"#utility.yul\":24689:24693   */\n      dup2\n        /* \"#utility.yul\":24680:24686   */\n      dup6\n        /* \"#utility.yul\":24586:24694   */\n      tag_268\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":24578:24694   */\n      swap1\n      pop\n        /* \"#utility.yul\":24741:24750   */\n      dup2\n        /* \"#utility.yul\":24735:24739   */\n      dup2\n        /* \"#utility.yul\":24731:24751   */\n      sub\n        /* \"#utility.yul\":24726:24728   */\n      0x20\n        /* \"#utility.yul\":24715:24724   */\n      dup4\n        /* \"#utility.yul\":24711:24729   */\n      add\n        /* \"#utility.yul\":24704:24752   */\n      mstore\n        /* \"#utility.yul\":24769:24877   */\n      tag_536\n        /* \"#utility.yul\":24872:24876   */\n      dup2\n        /* \"#utility.yul\":24863:24869   */\n      dup5\n        /* \"#utility.yul\":24769:24877   */\n      tag_268\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":24761:24877   */\n      swap1\n      pop\n        /* \"#utility.yul\":24250:24884   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24890:25118   */\n    tag_285:\n        /* \"#utility.yul\":25030:25064   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":25026:25027   */\n      0x00\n        /* \"#utility.yul\":25018:25024   */\n      dup3\n        /* \"#utility.yul\":25014:25028   */\n      add\n        /* \"#utility.yul\":25007:25065   */\n      mstore\n        /* \"#utility.yul\":25099:25110   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25094:25096   */\n      0x20\n        /* \"#utility.yul\":25086:25092   */\n      dup3\n        /* \"#utility.yul\":25082:25097   */\n      add\n        /* \"#utility.yul\":25075:25111   */\n      mstore\n        /* \"#utility.yul\":24890:25118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25124:25490   */\n    tag_286:\n        /* \"#utility.yul\":25266:25269   */\n      0x00\n        /* \"#utility.yul\":25287:25354   */\n      tag_539\n        /* \"#utility.yul\":25351:25353   */\n      0x29\n        /* \"#utility.yul\":25346:25349   */\n      dup4\n        /* \"#utility.yul\":25287:25354   */\n      tag_243\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25280:25354   */\n      swap2\n      pop\n        /* \"#utility.yul\":25363:25456   */\n      tag_540\n        /* \"#utility.yul\":25452:25455   */\n      dup3\n        /* \"#utility.yul\":25363:25456   */\n      tag_285\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":25481:25483   */\n      0x40\n        /* \"#utility.yul\":25476:25479   */\n      dup3\n        /* \"#utility.yul\":25472:25484   */\n      add\n        /* \"#utility.yul\":25465:25484   */\n      swap1\n      pop\n        /* \"#utility.yul\":25124:25490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25496:25915   */\n    tag_155:\n        /* \"#utility.yul\":25662:25666   */\n      0x00\n        /* \"#utility.yul\":25700:25702   */\n      0x20\n        /* \"#utility.yul\":25689:25698   */\n      dup3\n        /* \"#utility.yul\":25685:25703   */\n      add\n        /* \"#utility.yul\":25677:25703   */\n      swap1\n      pop\n        /* \"#utility.yul\":25749:25758   */\n      dup2\n        /* \"#utility.yul\":25743:25747   */\n      dup2\n        /* \"#utility.yul\":25739:25759   */\n      sub\n        /* \"#utility.yul\":25735:25736   */\n      0x00\n        /* \"#utility.yul\":25724:25733   */\n      dup4\n        /* \"#utility.yul\":25720:25737   */\n      add\n        /* \"#utility.yul\":25713:25760   */\n      mstore\n        /* \"#utility.yul\":25777:25908   */\n      tag_542\n        /* \"#utility.yul\":25903:25907   */\n      dup2\n        /* \"#utility.yul\":25777:25908   */\n      tag_286\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":25769:25908   */\n      swap1\n      pop\n        /* \"#utility.yul\":25496:25915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25921:26253   */\n    tag_169:\n        /* \"#utility.yul\":26042:26046   */\n      0x00\n        /* \"#utility.yul\":26080:26082   */\n      0x40\n        /* \"#utility.yul\":26069:26078   */\n      dup3\n        /* \"#utility.yul\":26065:26083   */\n      add\n        /* \"#utility.yul\":26057:26083   */\n      swap1\n      pop\n        /* \"#utility.yul\":26093:26164   */\n      tag_544\n        /* \"#utility.yul\":26161:26162   */\n      0x00\n        /* \"#utility.yul\":26150:26159   */\n      dup4\n        /* \"#utility.yul\":26146:26163   */\n      add\n        /* \"#utility.yul\":26137:26143   */\n      dup6\n        /* \"#utility.yul\":26093:26164   */\n      tag_236\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":26174:26246   */\n      tag_545\n        /* \"#utility.yul\":26242:26244   */\n      0x20\n        /* \"#utility.yul\":26231:26240   */\n      dup4\n        /* \"#utility.yul\":26227:26245   */\n      add\n        /* \"#utility.yul\":26218:26224   */\n      dup5\n        /* \"#utility.yul\":26174:26246   */\n      tag_236\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":25921:26253   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26259:26377   */\n    tag_287:\n        /* \"#utility.yul\":26346:26370   */\n      tag_547\n        /* \"#utility.yul\":26364:26369   */\n      dup2\n        /* \"#utility.yul\":26346:26370   */\n      tag_230\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":26341:26344   */\n      dup3\n        /* \"#utility.yul\":26334:26371   */\n      mstore\n        /* \"#utility.yul\":26259:26377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26383:26481   */\n    tag_288:\n        /* \"#utility.yul\":26434:26440   */\n      0x00\n        /* \"#utility.yul\":26468:26473   */\n      dup2\n        /* \"#utility.yul\":26462:26474   */\n      mload\n        /* \"#utility.yul\":26452:26474   */\n      swap1\n      pop\n        /* \"#utility.yul\":26383:26481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26487:26655   */\n    tag_289:\n        /* \"#utility.yul\":26570:26581   */\n      0x00\n        /* \"#utility.yul\":26604:26610   */\n      dup3\n        /* \"#utility.yul\":26599:26602   */\n      dup3\n        /* \"#utility.yul\":26592:26611   */\n      mstore\n        /* \"#utility.yul\":26644:26648   */\n      0x20\n        /* \"#utility.yul\":26639:26642   */\n      dup3\n        /* \"#utility.yul\":26635:26649   */\n      add\n        /* \"#utility.yul\":26620:26649   */\n      swap1\n      pop\n        /* \"#utility.yul\":26487:26655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26661:27034   */\n    tag_290:\n        /* \"#utility.yul\":26747:26750   */\n      0x00\n        /* \"#utility.yul\":26775:26813   */\n      tag_551\n        /* \"#utility.yul\":26807:26812   */\n      dup3\n        /* \"#utility.yul\":26775:26813   */\n      tag_288\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":26829:26899   */\n      tag_552\n        /* \"#utility.yul\":26892:26898   */\n      dup2\n        /* \"#utility.yul\":26887:26890   */\n      dup6\n        /* \"#utility.yul\":26829:26899   */\n      tag_289\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":26822:26899   */\n      swap4\n      pop\n        /* \"#utility.yul\":26908:26973   */\n      tag_553\n        /* \"#utility.yul\":26966:26972   */\n      dup2\n        /* \"#utility.yul\":26961:26964   */\n      dup6\n        /* \"#utility.yul\":26954:26958   */\n      0x20\n        /* \"#utility.yul\":26947:26952   */\n      dup7\n        /* \"#utility.yul\":26943:26959   */\n      add\n        /* \"#utility.yul\":26908:26973   */\n      tag_244\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":26998:27027   */\n      tag_554\n        /* \"#utility.yul\":27020:27026   */\n      dup2\n        /* \"#utility.yul\":26998:27027   */\n      tag_245\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":26993:26996   */\n      dup5\n        /* \"#utility.yul\":26989:27028   */\n      add\n        /* \"#utility.yul\":26982:27028   */\n      swap2\n      pop\n        /* \"#utility.yul\":26751:27034   */\n      pop\n        /* \"#utility.yul\":26661:27034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27040:28093   */\n    tag_180:\n        /* \"#utility.yul\":27363:27367   */\n      0x00\n        /* \"#utility.yul\":27401:27404   */\n      0xa0\n        /* \"#utility.yul\":27390:27399   */\n      dup3\n        /* \"#utility.yul\":27386:27405   */\n      add\n        /* \"#utility.yul\":27378:27405   */\n      swap1\n      pop\n        /* \"#utility.yul\":27415:27486   */\n      tag_556\n        /* \"#utility.yul\":27483:27484   */\n      0x00\n        /* \"#utility.yul\":27472:27481   */\n      dup4\n        /* \"#utility.yul\":27468:27485   */\n      add\n        /* \"#utility.yul\":27459:27465   */\n      dup9\n        /* \"#utility.yul\":27415:27486   */\n      tag_287\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":27496:27568   */\n      tag_557\n        /* \"#utility.yul\":27564:27566   */\n      0x20\n        /* \"#utility.yul\":27553:27562   */\n      dup4\n        /* \"#utility.yul\":27549:27567   */\n      add\n        /* \"#utility.yul\":27540:27546   */\n      dup8\n        /* \"#utility.yul\":27496:27568   */\n      tag_287\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":27615:27624   */\n      dup2\n        /* \"#utility.yul\":27609:27613   */\n      dup2\n        /* \"#utility.yul\":27605:27625   */\n      sub\n        /* \"#utility.yul\":27600:27602   */\n      0x40\n        /* \"#utility.yul\":27589:27598   */\n      dup4\n        /* \"#utility.yul\":27585:27603   */\n      add\n        /* \"#utility.yul\":27578:27626   */\n      mstore\n        /* \"#utility.yul\":27643:27751   */\n      tag_558\n        /* \"#utility.yul\":27746:27750   */\n      dup2\n        /* \"#utility.yul\":27737:27743   */\n      dup7\n        /* \"#utility.yul\":27643:27751   */\n      tag_268\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":27635:27751   */\n      swap1\n      pop\n        /* \"#utility.yul\":27798:27807   */\n      dup2\n        /* \"#utility.yul\":27792:27796   */\n      dup2\n        /* \"#utility.yul\":27788:27808   */\n      sub\n        /* \"#utility.yul\":27783:27785   */\n      0x60\n        /* \"#utility.yul\":27772:27781   */\n      dup4\n        /* \"#utility.yul\":27768:27786   */\n      add\n        /* \"#utility.yul\":27761:27809   */\n      mstore\n        /* \"#utility.yul\":27826:27934   */\n      tag_559\n        /* \"#utility.yul\":27929:27933   */\n      dup2\n        /* \"#utility.yul\":27920:27926   */\n      dup6\n        /* \"#utility.yul\":27826:27934   */\n      tag_268\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":27818:27934   */\n      swap1\n      pop\n        /* \"#utility.yul\":27982:27991   */\n      dup2\n        /* \"#utility.yul\":27976:27980   */\n      dup2\n        /* \"#utility.yul\":27972:27992   */\n      sub\n        /* \"#utility.yul\":27966:27969   */\n      0x80\n        /* \"#utility.yul\":27955:27964   */\n      dup4\n        /* \"#utility.yul\":27951:27970   */\n      add\n        /* \"#utility.yul\":27944:27993   */\n      mstore\n        /* \"#utility.yul\":28010:28086   */\n      tag_560\n        /* \"#utility.yul\":28081:28085   */\n      dup2\n        /* \"#utility.yul\":28072:28078   */\n      dup5\n        /* \"#utility.yul\":28010:28086   */\n      tag_290\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":28002:28086   */\n      swap1\n      pop\n        /* \"#utility.yul\":27040:28093   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28099:28240   */\n    tag_291:\n        /* \"#utility.yul\":28155:28160   */\n      0x00\n        /* \"#utility.yul\":28186:28192   */\n      dup2\n        /* \"#utility.yul\":28180:28193   */\n      mload\n        /* \"#utility.yul\":28171:28193   */\n      swap1\n      pop\n        /* \"#utility.yul\":28202:28234   */\n      tag_562\n        /* \"#utility.yul\":28228:28233   */\n      dup2\n        /* \"#utility.yul\":28202:28234   */\n      tag_238\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":28099:28240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28246:28595   */\n    tag_183:\n        /* \"#utility.yul\":28315:28321   */\n      0x00\n        /* \"#utility.yul\":28364:28366   */\n      0x20\n        /* \"#utility.yul\":28352:28361   */\n      dup3\n        /* \"#utility.yul\":28343:28350   */\n      dup5\n        /* \"#utility.yul\":28339:28362   */\n      sub\n        /* \"#utility.yul\":28335:28367   */\n      slt\n        /* \"#utility.yul\":28332:28451   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":28370:28449   */\n      tag_565\n      tag_227\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":28332:28451   */\n    tag_564:\n        /* \"#utility.yul\":28490:28491   */\n      0x00\n        /* \"#utility.yul\":28515:28578   */\n      tag_566\n        /* \"#utility.yul\":28570:28577   */\n      dup5\n        /* \"#utility.yul\":28561:28567   */\n      dup3\n        /* \"#utility.yul\":28550:28559   */\n      dup6\n        /* \"#utility.yul\":28546:28568   */\n      add\n        /* \"#utility.yul\":28515:28578   */\n      tag_291\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":28505:28578   */\n      swap2\n      pop\n        /* \"#utility.yul\":28461:28588   */\n      pop\n        /* \"#utility.yul\":28246:28595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28601:28707   */\n    tag_292:\n        /* \"#utility.yul\":28645:28653   */\n      0x00\n        /* \"#utility.yul\":28694:28699   */\n      dup2\n        /* \"#utility.yul\":28689:28692   */\n      0xe0\n        /* \"#utility.yul\":28685:28700   */\n      shr\n        /* \"#utility.yul\":28664:28700   */\n      swap1\n      pop\n        /* \"#utility.yul\":28601:28707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28713:28896   */\n    tag_189:\n        /* \"#utility.yul\":28748:28751   */\n      0x00\n        /* \"#utility.yul\":28786:28787   */\n      0x03\n        /* \"#utility.yul\":28768:28784   */\n      returndatasize\n        /* \"#utility.yul\":28765:28788   */\n      gt\n        /* \"#utility.yul\":28762:28890   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":28824:28825   */\n      0x04\n        /* \"#utility.yul\":28821:28822   */\n      0x00\n        /* \"#utility.yul\":28818:28819   */\n      dup1\n        /* \"#utility.yul\":28803:28826   */\n      returndatacopy\n        /* \"#utility.yul\":28846:28880   */\n      tag_570\n        /* \"#utility.yul\":28877:28878   */\n      0x00\n        /* \"#utility.yul\":28871:28879   */\n      mload\n        /* \"#utility.yul\":28846:28880   */\n      tag_292\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":28839:28880   */\n      swap1\n      pop\n        /* \"#utility.yul\":28762:28890   */\n    tag_569:\n        /* \"#utility.yul\":28713:28896   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":28902:29613   */\n    tag_191:\n        /* \"#utility.yul\":28941:28944   */\n      0x00\n        /* \"#utility.yul\":28979:28983   */\n      0x44\n        /* \"#utility.yul\":28961:28977   */\n      returndatasize\n        /* \"#utility.yul\":28958:28984   */\n      lt\n        /* \"#utility.yul\":28987:28992   */\n      tag_571\n        /* \"#utility.yul\":28955:28994   */\n      jumpi\n        /* \"#utility.yul\":29016:29036   */\n      tag_573\n      tag_226\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":29091:29092   */\n      0x04\n        /* \"#utility.yul\":29073:29089   */\n      returndatasize\n        /* \"#utility.yul\":29069:29093   */\n      sub\n        /* \"#utility.yul\":29066:29067   */\n      0x04\n        /* \"#utility.yul\":29060:29064   */\n      dup3\n        /* \"#utility.yul\":29045:29094   */\n      returndatacopy\n        /* \"#utility.yul\":29124:29128   */\n      dup1\n        /* \"#utility.yul\":29118:29129   */\n      mload\n        /* \"#utility.yul\":29223:29239   */\n      returndatasize\n        /* \"#utility.yul\":29216:29220   */\n      0x24\n        /* \"#utility.yul\":29208:29214   */\n      dup3\n        /* \"#utility.yul\":29204:29221   */\n      add\n        /* \"#utility.yul\":29201:29240   */\n      gt\n        /* \"#utility.yul\":29168:29186   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29160:29166   */\n      dup3\n        /* \"#utility.yul\":29157:29187   */\n      gt\n        /* \"#utility.yul\":29141:29254   */\n      or\n        /* \"#utility.yul\":29138:29284   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":29269:29274   */\n      pop\n      pop\n      jump(tag_571)\n        /* \"#utility.yul\":29138:29284   */\n    tag_574:\n        /* \"#utility.yul\":29315:29321   */\n      dup1\n        /* \"#utility.yul\":29309:29313   */\n      dup3\n        /* \"#utility.yul\":29305:29322   */\n      add\n        /* \"#utility.yul\":29351:29354   */\n      dup1\n        /* \"#utility.yul\":29345:29355   */\n      mload\n        /* \"#utility.yul\":29378:29396   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29370:29376   */\n      dup2\n        /* \"#utility.yul\":29367:29397   */\n      gt\n        /* \"#utility.yul\":29364:29407   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":29400:29405   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_571)\n        /* \"#utility.yul\":29364:29407   */\n    tag_575:\n        /* \"#utility.yul\":29448:29454   */\n      dup1\n        /* \"#utility.yul\":29441:29445   */\n      0x20\n        /* \"#utility.yul\":29436:29439   */\n      dup4\n        /* \"#utility.yul\":29432:29446   */\n      add\n        /* \"#utility.yul\":29428:29455   */\n      add\n        /* \"#utility.yul\":29507:29508   */\n      0x04\n        /* \"#utility.yul\":29489:29505   */\n      returndatasize\n        /* \"#utility.yul\":29485:29509   */\n      sub\n        /* \"#utility.yul\":29479:29483   */\n      dup6\n        /* \"#utility.yul\":29475:29510   */\n      add\n        /* \"#utility.yul\":29470:29473   */\n      dup2\n        /* \"#utility.yul\":29467:29511   */\n      gt\n        /* \"#utility.yul\":29464:29521   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":29514:29519   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_571)\n        /* \"#utility.yul\":29464:29521   */\n    tag_576:\n        /* \"#utility.yul\":29531:29588   */\n      tag_577\n        /* \"#utility.yul\":29579:29585   */\n      dup3\n        /* \"#utility.yul\":29573:29577   */\n      0x20\n        /* \"#utility.yul\":29569:29586   */\n      add\n        /* \"#utility.yul\":29561:29567   */\n      dup6\n        /* \"#utility.yul\":29557:29587   */\n      add\n        /* \"#utility.yul\":29551:29555   */\n      dup7\n        /* \"#utility.yul\":29531:29588   */\n      tag_248\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":29604:29607   */\n      dup3\n        /* \"#utility.yul\":29597:29607   */\n      swap6\n      pop\n        /* \"#utility.yul\":28945:29613   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":28902:29613   */\n    tag_571:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29619:29858   */\n    tag_293:\n        /* \"#utility.yul\":29759:29793   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":29755:29756   */\n      0x00\n        /* \"#utility.yul\":29747:29753   */\n      dup3\n        /* \"#utility.yul\":29743:29757   */\n      add\n        /* \"#utility.yul\":29736:29794   */\n      mstore\n        /* \"#utility.yul\":29828:29850   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":29823:29825   */\n      0x20\n        /* \"#utility.yul\":29815:29821   */\n      dup3\n        /* \"#utility.yul\":29811:29826   */\n      add\n        /* \"#utility.yul\":29804:29851   */\n      mstore\n        /* \"#utility.yul\":29619:29858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29864:30230   */\n    tag_294:\n        /* \"#utility.yul\":30006:30009   */\n      0x00\n        /* \"#utility.yul\":30027:30094   */\n      tag_580\n        /* \"#utility.yul\":30091:30093   */\n      0x34\n        /* \"#utility.yul\":30086:30089   */\n      dup4\n        /* \"#utility.yul\":30027:30094   */\n      tag_243\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":30020:30094   */\n      swap2\n      pop\n        /* \"#utility.yul\":30103:30196   */\n      tag_581\n        /* \"#utility.yul\":30192:30195   */\n      dup3\n        /* \"#utility.yul\":30103:30196   */\n      tag_293\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":30221:30223   */\n      0x40\n        /* \"#utility.yul\":30216:30219   */\n      dup3\n        /* \"#utility.yul\":30212:30224   */\n      add\n        /* \"#utility.yul\":30205:30224   */\n      swap1\n      pop\n        /* \"#utility.yul\":29864:30230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30236:30655   */\n    tag_195:\n        /* \"#utility.yul\":30402:30406   */\n      0x00\n        /* \"#utility.yul\":30440:30442   */\n      0x20\n        /* \"#utility.yul\":30429:30438   */\n      dup3\n        /* \"#utility.yul\":30425:30443   */\n      add\n        /* \"#utility.yul\":30417:30443   */\n      swap1\n      pop\n        /* \"#utility.yul\":30489:30498   */\n      dup2\n        /* \"#utility.yul\":30483:30487   */\n      dup2\n        /* \"#utility.yul\":30479:30499   */\n      sub\n        /* \"#utility.yul\":30475:30476   */\n      0x00\n        /* \"#utility.yul\":30464:30473   */\n      dup4\n        /* \"#utility.yul\":30460:30477   */\n      add\n        /* \"#utility.yul\":30453:30500   */\n      mstore\n        /* \"#utility.yul\":30517:30648   */\n      tag_583\n        /* \"#utility.yul\":30643:30647   */\n      dup2\n        /* \"#utility.yul\":30517:30648   */\n      tag_294\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":30509:30648   */\n      swap1\n      pop\n        /* \"#utility.yul\":30236:30655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30661:30888   */\n    tag_295:\n        /* \"#utility.yul\":30801:30835   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":30797:30798   */\n      0x00\n        /* \"#utility.yul\":30789:30795   */\n      dup3\n        /* \"#utility.yul\":30785:30799   */\n      add\n        /* \"#utility.yul\":30778:30836   */\n      mstore\n        /* \"#utility.yul\":30870:30880   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30865:30867   */\n      0x20\n        /* \"#utility.yul\":30857:30863   */\n      dup3\n        /* \"#utility.yul\":30853:30868   */\n      add\n        /* \"#utility.yul\":30846:30881   */\n      mstore\n        /* \"#utility.yul\":30661:30888   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30894:31260   */\n    tag_296:\n        /* \"#utility.yul\":31036:31039   */\n      0x00\n        /* \"#utility.yul\":31057:31124   */\n      tag_586\n        /* \"#utility.yul\":31121:31123   */\n      0x28\n        /* \"#utility.yul\":31116:31119   */\n      dup4\n        /* \"#utility.yul\":31057:31124   */\n      tag_243\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":31050:31124   */\n      swap2\n      pop\n        /* \"#utility.yul\":31133:31226   */\n      tag_587\n        /* \"#utility.yul\":31222:31225   */\n      dup3\n        /* \"#utility.yul\":31133:31226   */\n      tag_295\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":31251:31253   */\n      0x40\n        /* \"#utility.yul\":31246:31249   */\n      dup3\n        /* \"#utility.yul\":31242:31254   */\n      add\n        /* \"#utility.yul\":31235:31254   */\n      swap1\n      pop\n        /* \"#utility.yul\":30894:31260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31266:31685   */\n    tag_199:\n        /* \"#utility.yul\":31432:31436   */\n      0x00\n        /* \"#utility.yul\":31470:31472   */\n      0x20\n        /* \"#utility.yul\":31459:31468   */\n      dup3\n        /* \"#utility.yul\":31455:31473   */\n      add\n        /* \"#utility.yul\":31447:31473   */\n      swap1\n      pop\n        /* \"#utility.yul\":31519:31528   */\n      dup2\n        /* \"#utility.yul\":31513:31517   */\n      dup2\n        /* \"#utility.yul\":31509:31529   */\n      sub\n        /* \"#utility.yul\":31505:31506   */\n      0x00\n        /* \"#utility.yul\":31494:31503   */\n      dup4\n        /* \"#utility.yul\":31490:31507   */\n      add\n        /* \"#utility.yul\":31483:31530   */\n      mstore\n        /* \"#utility.yul\":31547:31678   */\n      tag_589\n        /* \"#utility.yul\":31673:31677   */\n      dup2\n        /* \"#utility.yul\":31547:31678   */\n      tag_296\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":31539:31678   */\n      swap1\n      pop\n        /* \"#utility.yul\":31266:31685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31691:32442   */\n    tag_210:\n        /* \"#utility.yul\":31914:31918   */\n      0x00\n        /* \"#utility.yul\":31952:31955   */\n      0xa0\n        /* \"#utility.yul\":31941:31950   */\n      dup3\n        /* \"#utility.yul\":31937:31956   */\n      add\n        /* \"#utility.yul\":31929:31956   */\n      swap1\n      pop\n        /* \"#utility.yul\":31966:32037   */\n      tag_591\n        /* \"#utility.yul\":32034:32035   */\n      0x00\n        /* \"#utility.yul\":32023:32032   */\n      dup4\n        /* \"#utility.yul\":32019:32036   */\n      add\n        /* \"#utility.yul\":32010:32016   */\n      dup9\n        /* \"#utility.yul\":31966:32037   */\n      tag_287\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":32047:32119   */\n      tag_592\n        /* \"#utility.yul\":32115:32117   */\n      0x20\n        /* \"#utility.yul\":32104:32113   */\n      dup4\n        /* \"#utility.yul\":32100:32118   */\n      add\n        /* \"#utility.yul\":32091:32097   */\n      dup8\n        /* \"#utility.yul\":32047:32119   */\n      tag_287\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":32129:32201   */\n      tag_593\n        /* \"#utility.yul\":32197:32199   */\n      0x40\n        /* \"#utility.yul\":32186:32195   */\n      dup4\n        /* \"#utility.yul\":32182:32200   */\n      add\n        /* \"#utility.yul\":32173:32179   */\n      dup7\n        /* \"#utility.yul\":32129:32201   */\n      tag_236\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":32211:32283   */\n      tag_594\n        /* \"#utility.yul\":32279:32281   */\n      0x60\n        /* \"#utility.yul\":32268:32277   */\n      dup4\n        /* \"#utility.yul\":32264:32282   */\n      add\n        /* \"#utility.yul\":32255:32261   */\n      dup6\n        /* \"#utility.yul\":32211:32283   */\n      tag_236\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":32331:32340   */\n      dup2\n        /* \"#utility.yul\":32325:32329   */\n      dup2\n        /* \"#utility.yul\":32321:32341   */\n      sub\n        /* \"#utility.yul\":32315:32318   */\n      0x80\n        /* \"#utility.yul\":32304:32313   */\n      dup4\n        /* \"#utility.yul\":32300:32319   */\n      add\n        /* \"#utility.yul\":32293:32342   */\n      mstore\n        /* \"#utility.yul\":32359:32435   */\n      tag_595\n        /* \"#utility.yul\":32430:32434   */\n      dup2\n        /* \"#utility.yul\":32421:32427   */\n      dup5\n        /* \"#utility.yul\":32359:32435   */\n      tag_290\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":32351:32435   */\n      swap1\n      pop\n        /* \"#utility.yul\":31691:32442   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204252aed44bb6b3bd6d2eb5715b1a4fdd139aafbc74f82e1209555c2a68474b8564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_908": {
									"entryPoint": 79,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8245:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:437:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2810:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2812:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2812:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:32:10"
															},
															"nodeType": "YulIf",
															"src": "2774:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2903:291:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2918:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2942:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2953:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2938:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2938:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2932:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2932:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2922:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3003:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3005:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3005:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3005:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2975:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2972:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2972:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "2969:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3100:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3110:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3110:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3100:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2734:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2745:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2757:6:10",
														"type": ""
													}
												],
												"src": "2677:524:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3277:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3293:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3287:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3249:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3259:6:10",
														"type": ""
													}
												],
												"src": "3207:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3360:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3350:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3478:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3481:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3471:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3312:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3549:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3559:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3573:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3590:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3620:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3594:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3667:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3681:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3695:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3703:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3691:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3691:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3647:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:26:10"
															},
															"nodeType": "YulIf",
															"src": "3637:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3770:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3784:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3784:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3784:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3734:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3765:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3754:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3754:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:38:10"
															},
															"nodeType": "YulIf",
															"src": "3728:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3533:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3542:6:10",
														"type": ""
													}
												],
												"src": "3498:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3896:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3888:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3919:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3909:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3932:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3940:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3932:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3865:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3873:4:10",
														"type": ""
													}
												],
												"src": "3824:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4015:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4025:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4043:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4050:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3998:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4008:6:10",
														"type": ""
													}
												],
												"src": "3971:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4133:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4164:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4133:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4098:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4104:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4114:8:10",
														"type": ""
													}
												],
												"src": "4070:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4259:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4269:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4290:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4273:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4313:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4355:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4325:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4317:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4431:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4462:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4473:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4443:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4431:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4491:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4504:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4515:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4511:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4491:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4530:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4554:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4564:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4550:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4550:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4220:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4227:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4239:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4252:6:10",
														"type": ""
													}
												],
												"src": "4183:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4627:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4637:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4648:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4619:7:10",
														"type": ""
													}
												],
												"src": "4582:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4697:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4707:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4714:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4683:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4693:3:10",
														"type": ""
													}
												],
												"src": "4665:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4801:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4859:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4841:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4832:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4814:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4801:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4771:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4781:9:10",
														"type": ""
													}
												],
												"src": "4731:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4926:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4936:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4943:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4922:3:10",
														"type": ""
													}
												],
												"src": "4879:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5036:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5046:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5101:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5070:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5050:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5165:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5159:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5159:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5172:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5204:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5180:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5180:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5131:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5013:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5019:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5027:7:10",
														"type": ""
													}
												],
												"src": "4960:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5301:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5280:3:10",
														"type": ""
													}
												],
												"src": "5235:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5367:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5377:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5391:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5381:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5476:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5482:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5432:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5432:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5353:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5359:6:10",
														"type": ""
													}
												],
												"src": "5314:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5559:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5626:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5670:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5677:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5640:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5640:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5579:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5576:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5591:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5593:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5606:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5602:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5602:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5593:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5573:2:10",
																"statements": []
															},
															"src": "5569:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5547:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5554:3:10",
														"type": ""
													}
												],
												"src": "5509:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5780:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5806:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5820:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5868:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "5836:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5836:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "5824:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5887:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "5910:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "5938:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "5920:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5920:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5906:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5906:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5891:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6107:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6109:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6124:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6109:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6091:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6103:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6088:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6088:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6085:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6176:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6193:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6221:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6203:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6203:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6189:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6189:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6147:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6147:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6147:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5797:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5802:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5794:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:11:10"
															},
															"nodeType": "YulIf",
															"src": "5791:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5756:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5763:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "5768:10:10",
														"type": ""
													}
												],
												"src": "5701:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6313:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6323:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6348:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6354:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6323:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6288:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6294:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6304:8:10",
														"type": ""
													}
												],
												"src": "6250:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6424:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6434:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6483:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6486:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6479:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6479:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6498:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6494:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6450:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6450:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6438:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6511:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6525:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6531:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6401:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6407:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6417:6:10",
														"type": ""
													}
												],
												"src": "6373:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6788:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6794:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "6769:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6761:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6818:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6828:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6831:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6824:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6815:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6609:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6615:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6623:4:10",
														"type": ""
													}
												],
												"src": "6547:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6950:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6997:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6964:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "6954:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7086:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7088:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7088:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7088:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7058:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7055:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:30:10"
															},
															"nodeType": "YulIf",
															"src": "7052:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7118:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7164:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7158:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7158:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7132:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7122:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7263:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7217:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7294:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7311:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7298:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7322:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7335:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7322:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7386:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7400:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7419:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7431:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7427:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7427:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7415:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7415:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7404:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7451:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7497:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7465:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7465:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7455:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7515:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7524:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7519:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7583:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7608:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7626:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7631:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7622:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7622:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7616:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7616:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7601:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7601:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7601:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7660:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7674:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7682:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7670:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7670:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7660:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7701:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "7718:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7729:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7714:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7714:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "7701:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7549:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7552:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7546:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7546:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7561:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7563:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7572:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7575:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7568:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7568:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7563:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7542:3:10",
																					"statements": []
																				},
																				"src": "7538:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7782:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "7800:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7827:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7832:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7823:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7823:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7817:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7817:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "7804:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7867:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7894:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "7909:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "7917:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "7905:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7905:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "7875:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7875:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7860:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7860:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7860:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7765:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7774:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7762:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7762:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "7759:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7958:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "7972:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7980:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "7968:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7968:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7984:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7964:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7964:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7951:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7951:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7951:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7379:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8014:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8028:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8041:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8032:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8065:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8083:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8102:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8107:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8098:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8098:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8092:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8092:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8083:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8058:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8055:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8211:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8218:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8158:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8158:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8145:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8145:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8145:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8006:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7359:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7356:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "7349:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6928:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6934:3:10",
														"type": ""
													}
												],
												"src": "6847:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002ac638038062002ac68339818101604052810190620000379190620001f7565b62000048816200004f60201b60201c565b506200057a565b806002908162000060919062000493565b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cd8262000082565b810181811067ffffffffffffffff82111715620000ef57620000ee62000093565b5b80604052505050565b60006200010462000064565b9050620001128282620000c2565b919050565b600067ffffffffffffffff82111562000135576200013462000093565b5b620001408262000082565b9050602081019050919050565b60005b838110156200016d57808201518184015260208101905062000150565b60008484015250505050565b6000620001906200018a8462000117565b620000f8565b905082815260208101848484011115620001af57620001ae6200007d565b5b620001bc8482856200014d565b509392505050565b600082601f830112620001dc57620001db62000078565b5b8151620001ee84826020860162000179565b91505092915050565b60006020828403121562000210576200020f6200006e565b5b600082015167ffffffffffffffff81111562000231576200023062000073565b5b6200023f84828501620001c4565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029b57607f821691505b602082108103620002b157620002b062000253565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002dc565b620003278683620002dc565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003746200036e62000368846200033f565b62000349565b6200033f565b9050919050565b6000819050919050565b620003908362000353565b620003a86200039f826200037b565b848454620002e9565b825550505050565b600090565b620003bf620003b0565b620003cc81848462000385565b505050565b5b81811015620003f457620003e8600082620003b5565b600181019050620003d2565b5050565b601f82111562000443576200040d81620002b7565b6200041884620002cc565b8101602085101562000428578190505b620004406200043785620002cc565b830182620003d1565b50505b505050565b600082821c905092915050565b6000620004686000198460080262000448565b1980831691505092915050565b600062000483838362000455565b9150826002028217905092915050565b6200049e8262000248565b67ffffffffffffffff811115620004ba57620004b962000093565b5b620004c6825462000282565b620004d3828285620003f8565b600060209050601f8311600181146200050b5760008415620004f6578287015190505b62000502858262000475565b86555062000572565b601f1984166200051b86620002b7565b60005b8281101562000545578489015182556001820191506020850194506020810190506200051e565b8683101562000565578489015162000561601f89168262000455565b8355505b6001600288020188555050505b505050505050565b61253c806200058a6000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80634e1273f4116100665780634e1273f414610143578063a22cb46514610173578063bd85b0391461018f578063e985e9c5146101bf578063f242432a146101ef57610092565b8062fdd58e1461009757806301ffc9a7146100c75780630e89341c146100f75780632eb2c2d614610127575b600080fd5b6100b160048036038101906100ac91906113f5565b61020b565b6040516100be9190611444565b60405180910390f35b6100e160048036038101906100dc91906114b7565b6102d3565b6040516100ee91906114ff565b60405180910390f35b610111600480360381019061010c919061151a565b6103b5565b60405161011e91906115d7565b60405180910390f35b610141600480360381019061013c91906117f6565b610449565b005b61015d60048036038101906101589190611988565b6104ea565b60405161016a9190611abe565b60405180910390f35b61018d60048036038101906101889190611b0c565b610603565b005b6101a960048036038101906101a4919061151a565b610619565b6040516101b69190611444565b60405180910390f35b6101d960048036038101906101d49190611b4c565b610623565b6040516101e691906114ff565b60405180910390f35b61020960048036038101906102049190611b8c565b6106b7565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361027b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027290611c95565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039e57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ae57506103ad82610758565b5b9050919050565b6060600280546103c490611ce4565b80601f01602080910402602001604051908101604052809291908181526020018280546103f090611ce4565b801561043d5780601f106104125761010080835404028352916020019161043d565b820191906000526020600020905b81548152906001019060200180831161042057829003601f168201915b50505050509050919050565b6104516107c2565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806104975750610496856104916107c2565b610623565b5b6104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cd90611d87565b60405180910390fd5b6104e385858585856107ca565b5050505050565b60608151835114610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790611e19565b60405180910390fd5b6000835167ffffffffffffffff81111561054d5761054c6115fe565b5b60405190808252806020026020018201604052801561057b5781602001602082028036833780820191505090505b50905060005b84518110156105f8576105c88582815181106105a05761059f611e39565b5b60200260200101518583815181106105bb576105ba611e39565b5b602002602001015161020b565b8282815181106105db576105da611e39565b5b602002602001018181525050806105f190611e97565b9050610581565b508091505092915050565b61061561060e6107c2565b8383610aeb565b5050565b6000819050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6106bf6107c2565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806107055750610704856106ff6107c2565b610623565b5b610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90611d87565b60405180910390fd5b6107518585858585610c57565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b815183511461080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590611f51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490611fe3565b60405180910390fd5b60006108876107c2565b9050610897818787878787610ef2565b60005b8451811015610a485760008582815181106108b8576108b7611e39565b5b6020026020010151905060008583815181106108d7576108d6611e39565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f90612075565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2d9190612095565b9250508190555050505080610a4190611e97565b905061089a565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610abf9291906120c9565b60405180910390a4610ad5818787878787610efa565b610ae3818787878787610f02565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5090612172565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c4a91906114ff565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90611fe3565b60405180910390fd5b6000610cd06107c2565b90506000610cdd856110d9565b90506000610cea856110d9565b9050610cfa838989858589610ef2565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8890612075565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e469190612095565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610ec3929190612192565b60405180910390a4610ed9848a8a86868a610efa565b610ee7848a8a8a8a8a611153565b505050505050505050565b505050505050565b505050505050565b610f218473ffffffffffffffffffffffffffffffffffffffff1661132a565b156110d1578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f6795949392919061221f565b6020604051808303816000875af1925050508015610fa357506040513d601f19601f82011682018060405250810190610fa0919061229c565b60015b61104857610faf6122d6565b806308c379a00361100b5750610fc36122f8565b80610fce575061100d565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100291906115d7565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f906123fa565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c69061248c565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110f8576110f76115fe565b5b6040519080825280602002602001820160405280156111265781602001602082028036833780820191505090505b509050828160008151811061113e5761113d611e39565b5b60200260200101818152505080915050919050565b6111728473ffffffffffffffffffffffffffffffffffffffff1661132a565b15611322578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016111b89594939291906124ac565b6020604051808303816000875af19250505080156111f457506040513d601f19601f820116820180604052508101906111f1919061229c565b60015b611299576112006122d6565b806308c379a00361125c57506112146122f8565b8061121f575061125e565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125391906115d7565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611290906123fa565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611320576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113179061248c565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061138c82611361565b9050919050565b61139c81611381565b81146113a757600080fd5b50565b6000813590506113b981611393565b92915050565b6000819050919050565b6113d2816113bf565b81146113dd57600080fd5b50565b6000813590506113ef816113c9565b92915050565b6000806040838503121561140c5761140b611357565b5b600061141a858286016113aa565b925050602061142b858286016113e0565b9150509250929050565b61143e816113bf565b82525050565b60006020820190506114596000830184611435565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114948161145f565b811461149f57600080fd5b50565b6000813590506114b18161148b565b92915050565b6000602082840312156114cd576114cc611357565b5b60006114db848285016114a2565b91505092915050565b60008115159050919050565b6114f9816114e4565b82525050565b600060208201905061151460008301846114f0565b92915050565b6000602082840312156115305761152f611357565b5b600061153e848285016113e0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611581578082015181840152602081019050611566565b60008484015250505050565b6000601f19601f8301169050919050565b60006115a982611547565b6115b38185611552565b93506115c3818560208601611563565b6115cc8161158d565b840191505092915050565b600060208201905081810360008301526115f1818461159e565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116368261158d565b810181811067ffffffffffffffff82111715611655576116546115fe565b5b80604052505050565b600061166861134d565b9050611674828261162d565b919050565b600067ffffffffffffffff821115611694576116936115fe565b5b602082029050602081019050919050565b600080fd5b60006116bd6116b884611679565b61165e565b905080838252602082019050602084028301858111156116e0576116df6116a5565b5b835b8181101561170957806116f588826113e0565b8452602084019350506020810190506116e2565b5050509392505050565b600082601f830112611728576117276115f9565b5b81356117388482602086016116aa565b91505092915050565b600080fd5b600067ffffffffffffffff821115611761576117606115fe565b5b61176a8261158d565b9050602081019050919050565b82818337600083830152505050565b600061179961179484611746565b61165e565b9050828152602081018484840111156117b5576117b4611741565b5b6117c0848285611777565b509392505050565b600082601f8301126117dd576117dc6115f9565b5b81356117ed848260208601611786565b91505092915050565b600080600080600060a0868803121561181257611811611357565b5b6000611820888289016113aa565b9550506020611831888289016113aa565b945050604086013567ffffffffffffffff8111156118525761185161135c565b5b61185e88828901611713565b935050606086013567ffffffffffffffff81111561187f5761187e61135c565b5b61188b88828901611713565b925050608086013567ffffffffffffffff8111156118ac576118ab61135c565b5b6118b8888289016117c8565b9150509295509295909350565b600067ffffffffffffffff8211156118e0576118df6115fe565b5b602082029050602081019050919050565b60006119046118ff846118c5565b61165e565b90508083825260208201905060208402830185811115611927576119266116a5565b5b835b81811015611950578061193c88826113aa565b845260208401935050602081019050611929565b5050509392505050565b600082601f83011261196f5761196e6115f9565b5b813561197f8482602086016118f1565b91505092915050565b6000806040838503121561199f5761199e611357565b5b600083013567ffffffffffffffff8111156119bd576119bc61135c565b5b6119c98582860161195a565b925050602083013567ffffffffffffffff8111156119ea576119e961135c565b5b6119f685828601611713565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a35816113bf565b82525050565b6000611a478383611a2c565b60208301905092915050565b6000602082019050919050565b6000611a6b82611a00565b611a758185611a0b565b9350611a8083611a1c565b8060005b83811015611ab1578151611a988882611a3b565b9750611aa383611a53565b925050600181019050611a84565b5085935050505092915050565b60006020820190508181036000830152611ad88184611a60565b905092915050565b611ae9816114e4565b8114611af457600080fd5b50565b600081359050611b0681611ae0565b92915050565b60008060408385031215611b2357611b22611357565b5b6000611b31858286016113aa565b9250506020611b4285828601611af7565b9150509250929050565b60008060408385031215611b6357611b62611357565b5b6000611b71858286016113aa565b9250506020611b82858286016113aa565b9150509250929050565b600080600080600060a08688031215611ba857611ba7611357565b5b6000611bb6888289016113aa565b9550506020611bc7888289016113aa565b9450506040611bd8888289016113e0565b9350506060611be9888289016113e0565b925050608086013567ffffffffffffffff811115611c0a57611c0961135c565b5b611c16888289016117c8565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c7f602a83611552565b9150611c8a82611c23565b604082019050919050565b60006020820190508181036000830152611cae81611c72565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cfc57607f821691505b602082108103611d0f57611d0e611cb5565b5b50919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611d71602e83611552565b9150611d7c82611d15565b604082019050919050565b60006020820190508181036000830152611da081611d64565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611e03602983611552565b9150611e0e82611da7565b604082019050919050565b60006020820190508181036000830152611e3281611df6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ea2826113bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ed457611ed3611e68565b5b600182019050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f3b602883611552565b9150611f4682611edf565b604082019050919050565b60006020820190508181036000830152611f6a81611f2e565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611fcd602583611552565b9150611fd882611f71565b604082019050919050565b60006020820190508181036000830152611ffc81611fc0565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b600061205f602a83611552565b915061206a82612003565b604082019050919050565b6000602082019050818103600083015261208e81612052565b9050919050565b60006120a0826113bf565b91506120ab836113bf565b92508282019050808211156120c3576120c2611e68565b5b92915050565b600060408201905081810360008301526120e38185611a60565b905081810360208301526120f78184611a60565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b600061215c602983611552565b915061216782612100565b604082019050919050565b6000602082019050818103600083015261218b8161214f565b9050919050565b60006040820190506121a76000830185611435565b6121b46020830184611435565b9392505050565b6121c481611381565b82525050565b600081519050919050565b600082825260208201905092915050565b60006121f1826121ca565b6121fb81856121d5565b935061220b818560208601611563565b6122148161158d565b840191505092915050565b600060a08201905061223460008301886121bb565b61224160208301876121bb565b81810360408301526122538186611a60565b905081810360608301526122678185611a60565b9050818103608083015261227b81846121e6565b90509695505050505050565b6000815190506122968161148b565b92915050565b6000602082840312156122b2576122b1611357565b5b60006122c084828501612287565b91505092915050565b60008160e01c9050919050565b600060033d11156122f55760046000803e6122f26000516122c9565b90505b90565b600060443d106123855761230a61134d565b60043d036004823e80513d602482011167ffffffffffffffff82111715612332575050612385565b808201805167ffffffffffffffff8111156123505750505050612385565b80602083010160043d03850181111561236d575050505050612385565b61237c8260200185018661162d565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006123e4603483611552565b91506123ef82612388565b604082019050919050565b60006020820190508181036000830152612413816123d7565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000612476602883611552565b91506124818261241a565b604082019050919050565b600060208201905081810360008301526124a581612469565b9050919050565b600060a0820190506124c160008301886121bb565b6124ce60208301876121bb565b6124db6040830186611435565b6124e86060830185611435565b81810360808301526124fa81846121e6565b9050969550505050505056fea26469706673582212204252aed44bb6b3bd6d2eb5715b1a4fdd139aafbc74f82e1209555c2a68474b8564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2AC6 CODESIZE SUB DUP1 PUSH3 0x2AC6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F7 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x57A JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x493 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCD DUP3 PUSH3 0x82 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEE PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x104 PUSH3 0x64 JUMP JUMPDEST SWAP1 POP PUSH3 0x112 DUP3 DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x140 DUP3 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x150 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x190 PUSH3 0x18A DUP5 PUSH3 0x117 JUMP JUMPDEST PUSH3 0xF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AF JUMPI PUSH3 0x1AE PUSH3 0x7D JUMP JUMPDEST JUMPDEST PUSH3 0x1BC DUP5 DUP3 DUP6 PUSH3 0x14D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DC JUMPI PUSH3 0x1DB PUSH3 0x78 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP5 DUP3 DUP6 ADD PUSH3 0x1C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x29B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2B1 JUMPI PUSH3 0x2B0 PUSH3 0x253 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x31B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x327 DUP7 DUP4 PUSH3 0x2DC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x374 PUSH3 0x36E PUSH3 0x368 DUP5 PUSH3 0x33F JUMP JUMPDEST PUSH3 0x349 JUMP JUMPDEST PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x390 DUP4 PUSH3 0x353 JUMP JUMPDEST PUSH3 0x3A8 PUSH3 0x39F DUP3 PUSH3 0x37B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3BF PUSH3 0x3B0 JUMP JUMPDEST PUSH3 0x3CC DUP2 DUP5 DUP5 PUSH3 0x385 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3F4 JUMPI PUSH3 0x3E8 PUSH1 0x0 DUP3 PUSH3 0x3B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x443 JUMPI PUSH3 0x40D DUP2 PUSH3 0x2B7 JUMP JUMPDEST PUSH3 0x418 DUP5 PUSH3 0x2CC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x428 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x440 PUSH3 0x437 DUP6 PUSH3 0x2CC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3D1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x468 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x448 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x483 DUP4 DUP4 PUSH3 0x455 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x49E DUP3 PUSH3 0x248 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4BA JUMPI PUSH3 0x4B9 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x4C6 DUP3 SLOAD PUSH3 0x282 JUMP JUMPDEST PUSH3 0x4D3 DUP3 DUP3 DUP6 PUSH3 0x3F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x50B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4F6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x502 DUP6 DUP3 PUSH3 0x475 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x572 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x51B DUP7 PUSH3 0x2B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x545 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x51E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x565 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x561 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x455 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x253C DUP1 PUSH3 0x58A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1EF JUMPI PUSH2 0x92 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1988 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x39E JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3AE JUMPI POP PUSH2 0x3AD DUP3 PUSH2 0x758 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3C4 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F0 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x412 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x420 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x451 PUSH2 0x7C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x496 DUP6 PUSH2 0x491 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST JUMPDEST PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x7CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x57B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH2 0x5C8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BB JUMPI PUSH2 0x5BA PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5F1 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x581 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x615 PUSH2 0x60E PUSH2 0x7C2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x7C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x705 JUMPI POP PUSH2 0x704 DUP6 PUSH2 0x6FF PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST JUMPDEST PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x751 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC57 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x874 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x887 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x897 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA48 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8B8 JUMPI PUSH2 0x8B7 PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8D7 JUMPI PUSH2 0x8D6 PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96F SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA41 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x89A JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xABF SWAP3 SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xAD5 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xAE3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF02 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBD SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD0 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCDD DUP6 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCEA DUP6 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xEC3 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xED9 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xEE7 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1153 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF21 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132A JUMP JUMPDEST ISZERO PUSH2 0x10D1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF67 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFA3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1048 JUMPI PUSH2 0xFAF PUSH2 0x22D6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x100B JUMPI POP PUSH2 0xFC3 PUSH2 0x22F8 JUMP JUMPDEST DUP1 PUSH2 0xFCE JUMPI POP PUSH2 0x100D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP1 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1126 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x113E JUMPI PUSH2 0x113D PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1172 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132A JUMP JUMPDEST ISZERO PUSH2 0x1322 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1299 JUMPI PUSH2 0x1200 PUSH2 0x22D6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x125C JUMPI POP PUSH2 0x1214 PUSH2 0x22F8 JUMP JUMPDEST DUP1 PUSH2 0x121F JUMPI POP PUSH2 0x125E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP1 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP3 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1381 JUMP JUMPDEST DUP2 EQ PUSH2 0x13A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B9 DUP2 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x13BF JUMP JUMPDEST DUP2 EQ PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13EF DUP2 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140C JUMPI PUSH2 0x140B PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x13BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1459 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1494 DUP2 PUSH2 0x145F JUMP JUMPDEST DUP2 EQ PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B1 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP5 DUP3 DUP6 ADD PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x14E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP5 DUP3 DUP6 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1581 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A9 DUP3 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x15B3 DUP2 DUP6 PUSH2 0x1552 JUMP JUMPDEST SWAP4 POP PUSH2 0x15C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x15CC DUP2 PUSH2 0x158D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 DUP5 PUSH2 0x159E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1636 DUP3 PUSH2 0x158D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1668 PUSH2 0x134D JUMP JUMPDEST SWAP1 POP PUSH2 0x1674 DUP3 DUP3 PUSH2 0x162D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16BD PUSH2 0x16B8 DUP5 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x16A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1709 JUMPI DUP1 PUSH2 0x16F5 DUP9 DUP3 PUSH2 0x13E0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1738 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH2 0x176A DUP3 PUSH2 0x158D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1799 PUSH2 0x1794 DUP5 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST PUSH2 0x17C0 DUP5 DUP3 DUP6 PUSH2 0x1777 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17DD JUMPI PUSH2 0x17DC PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1812 JUMPI PUSH2 0x1811 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1820 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1831 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x185E DUP9 DUP3 DUP10 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187E PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x188B DUP9 DUP3 DUP10 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AC JUMPI PUSH2 0x18AB PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x18B8 DUP9 DUP3 DUP10 ADD PUSH2 0x17C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18E0 JUMPI PUSH2 0x18DF PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1904 PUSH2 0x18FF DUP5 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1927 JUMPI PUSH2 0x1926 PUSH2 0x16A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1950 JUMPI DUP1 PUSH2 0x193C DUP9 DUP3 PUSH2 0x13AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1929 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x196F JUMPI PUSH2 0x196E PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x197F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BD JUMPI PUSH2 0x19BC PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x19C9 DUP6 DUP3 DUP7 ADD PUSH2 0x195A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP6 DUP3 DUP7 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x13BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A47 DUP4 DUP4 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6B DUP3 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x1A75 DUP2 DUP6 PUSH2 0x1A0B JUMP JUMPDEST SWAP4 POP PUSH2 0x1A80 DUP4 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AB1 JUMPI DUP2 MLOAD PUSH2 0x1A98 DUP9 DUP3 PUSH2 0x1A3B JUMP JUMPDEST SWAP8 POP PUSH2 0x1AA3 DUP4 PUSH2 0x1A53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A84 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD8 DUP2 DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE9 DUP2 PUSH2 0x14E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B06 DUP2 PUSH2 0x1AE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B22 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B31 DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B42 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B82 DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BA8 JUMPI PUSH2 0x1BA7 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB6 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1BC7 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BD8 DUP9 DUP3 DUP10 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BE9 DUP9 DUP3 DUP10 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C0A JUMPI PUSH2 0x1C09 PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x1C16 DUP9 DUP3 DUP10 ADD PUSH2 0x17C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7F PUSH1 0x2A DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8A DUP3 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CAE DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1CB5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D71 PUSH1 0x2E DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7C DUP3 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA0 DUP2 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 PUSH1 0x29 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0E DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E32 DUP2 PUSH2 0x1DF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EA2 DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1E68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3B PUSH1 0x28 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F46 DUP3 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6A DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCD PUSH1 0x25 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD8 DUP3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFC DUP2 PUSH2 0x1FC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205F PUSH1 0x2A DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x206A DUP3 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x208E DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A0 DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP4 PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1E68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E3 DUP2 DUP6 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x20F7 DUP2 DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215C PUSH1 0x29 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x2167 DUP3 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x218B DUP2 PUSH2 0x214F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x21B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21C4 DUP2 PUSH2 0x1381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F1 DUP3 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x21FB DUP2 DUP6 PUSH2 0x21D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x220B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x158D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2234 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x2241 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2253 DUP2 DUP7 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 DUP6 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x227B DUP2 DUP5 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2296 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B2 JUMPI PUSH2 0x22B1 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP5 DUP3 DUP6 ADD PUSH2 0x2287 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x22F5 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22F2 PUSH1 0x0 MLOAD PUSH2 0x22C9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2385 JUMPI PUSH2 0x230A PUSH2 0x134D JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2332 JUMPI POP POP PUSH2 0x2385 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2350 JUMPI POP POP POP POP PUSH2 0x2385 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x236D JUMPI POP POP POP POP POP PUSH2 0x2385 JUMP JUMPDEST PUSH2 0x237C DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x162D JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E4 PUSH1 0x34 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x23EF DUP3 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2413 DUP2 PUSH2 0x23D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2476 PUSH1 0x28 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x2481 DUP3 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24A5 DUP2 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24C1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x24CE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x24DB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x24E8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1435 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24FA DUP2 DUP5 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP MSTORE 0xAE 0xD4 0x4B 0xB6 0xB3 0xBD PUSH14 0x2EB5715B1A4FDD139AAFBC74F82E SLT MULMOD SSTORE 0x5C 0x2A PUSH9 0x474B8564736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "565:17736:2:-:0;;;1117:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1160:13;1168:4;1160:7;;;:13;;:::i;:::-;1117:64;565:17736;;8403:88;8477:6;8470:4;:13;;;;;;:::i;:::-;;8403:88;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;565:17736:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1442": {
									"entryPoint": 3834,
									"id": 1442,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1598": {
									"entryPoint": 4313,
									"id": 1598,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1423": {
									"entryPoint": 3826,
									"id": 1423,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1570": {
									"entryPoint": 3842,
									"id": 1570,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1505": {
									"entryPoint": 4435,
									"id": 1505,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_341": {
									"entryPoint": 1986,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_897": {
									"entryPoint": 1994,
									"id": 897,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_762": {
									"entryPoint": 3159,
									"id": 762,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1404": {
									"entryPoint": 2795,
									"id": 1404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 1258,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 523,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_567": {
									"entryPoint": 1571,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": 4906,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 1097,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 1719,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 1539,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1622": {
									"entryPoint": 1880,
									"id": 1622,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 723,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1033": {
									"entryPoint": 1561,
									"id": 1033,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_440": {
									"entryPoint": 949,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9388,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 7203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 8952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32445:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:10",
														"type": ""
													}
												],
												"src": "1677:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:10",
														"type": ""
													}
												],
												"src": "1801:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:10",
														"type": ""
													}
												],
												"src": "2029:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:10"
															},
															"nodeType": "YulIf",
															"src": "2236:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:10",
														"type": ""
													}
												],
												"src": "2184:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:10",
														"type": ""
													}
												],
												"src": "2310:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:10"
															},
															"nodeType": "YulIf",
															"src": "2528:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:10",
														"type": ""
													}
												],
												"src": "2453:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:10",
														"type": ""
													}
												],
												"src": "2786:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:10",
														"type": ""
													}
												],
												"src": "2882:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:10",
														"type": ""
													}
												],
												"src": "2997:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:10"
															},
															"nodeType": "YulIf",
															"src": "3289:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:10",
														"type": ""
													}
												],
												"src": "3213:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:10",
														"type": ""
													}
												],
												"src": "3548:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:10",
														"type": ""
													}
												],
												"src": "3653:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3890:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3909:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3969:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3941:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3943:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3923:3:10",
																"statements": []
															},
															"src": "3919:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3872:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3877:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3882:6:10",
														"type": ""
													}
												],
												"src": "3828:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4128:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4138:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4111:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4121:6:10",
														"type": ""
													}
												],
												"src": "4080:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4280:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4513:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4261:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4276:3:10",
														"type": ""
													}
												],
												"src": "4188:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4791:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4684:4:10",
														"type": ""
													}
												],
												"src": "4571:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5041:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5061:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5051:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5148:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5252:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5274:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5304:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5282:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5256:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5421:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5423:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5423:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5364:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5376:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5400:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5397:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5358:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:62:10"
															},
															"nodeType": "YulIf",
															"src": "5355:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5463:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5228:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5236:4:10",
														"type": ""
													}
												],
												"src": "5199:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5537:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5547:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5576:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5576:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5511:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5520:6:10",
														"type": ""
													}
												],
												"src": "5486:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5703:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5808:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5788:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5777:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:10"
															},
															"nodeType": "YulIf",
															"src": "5774:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5840:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5860:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5914:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5902:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5687:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5698:4:10",
														"type": ""
													}
												],
												"src": "5621:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6027:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6180:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6190:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6215:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6215:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6199:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6289:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6300:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6293:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6329:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6345:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6356:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6363:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6378:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6382:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6450:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6464:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6464:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:15:10"
															},
															"nodeType": "YulIf",
															"src": "6431:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6638:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6653:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6657:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6721:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6733:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6700:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6700:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6688:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6751:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6767:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6758:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6758:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6588:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6604:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6606:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6622:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6613:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6566:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6568:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6579:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6572:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6562:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6150:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6158:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6166:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6174:5:10",
														"type": ""
													}
												],
												"src": "6078:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6888:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6937:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6939:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6939:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6939:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6924:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6912:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:35:10"
															},
															"nodeType": "YulIf",
															"src": "6898:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7029:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7033:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7072:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7148:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7156:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7144:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7081:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7072:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6866:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6874:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6882:5:10",
														"type": ""
													}
												],
												"src": "6811:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7276:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7286:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7187:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7376:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7481:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7483:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7483:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7483:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7461:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:30:10"
															},
															"nodeType": "YulIf",
															"src": "7447:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7513:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7521:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7599:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7360:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7371:4:10",
														"type": ""
													}
												],
												"src": "7310:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7687:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7697:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7736:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7669:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7674:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7679:6:10",
														"type": ""
													}
												],
												"src": "7623:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:340:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7868:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7893:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7877:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7981:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7996:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7985:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8046:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8048:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8048:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8027:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8032:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8023:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:25:10"
															},
															"nodeType": "YulIf",
															"src": "8017:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8175:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8138:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7831:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7836:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7844:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7852:5:10",
														"type": ""
													}
												],
												"src": "7775:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8278:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8327:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8306:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8314:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8302:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8321:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:35:10"
															},
															"nodeType": "YulIf",
															"src": "8288:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8419:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8433:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8462:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8522:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8471:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8256:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8264:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8272:5:10",
														"type": ""
													}
												],
												"src": "8217:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:1316:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8801:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8803:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8803:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8803:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8775:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8771:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8796:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8767:33:10"
															},
															"nodeType": "YulIf",
															"src": "8764:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8894:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8909:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8913:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8938:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8973:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8984:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8969:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8969:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8993:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8948:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8948:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8938:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9021:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9036:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9040:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9066:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9101:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9112:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9097:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9097:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9121:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9076:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9076:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9066:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9149:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9164:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9195:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9206:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9191:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9191:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9178:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9178:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9168:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9257:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9259:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9259:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9259:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9229:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9237:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9226:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9223:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9354:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9414:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9425:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9410:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9410:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9434:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9364:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9364:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9354:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9462:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9477:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9508:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9519:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9504:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9504:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9491:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9491:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9481:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9570:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9572:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9572:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9572:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9542:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9550:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9539:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9536:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9667:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9727:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9738:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9723:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9723:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9747:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9677:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9667:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9775:288:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9790:47:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9821:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9832:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9817:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9804:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9804:33:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9794:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9884:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9886:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9886:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9886:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9856:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9864:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9853:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9853:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9850:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9981:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10025:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10036:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10021:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10021:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10045:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9991:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9991:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9981:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8692:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8703:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8715:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8723:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8731:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8739:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8747:6:10",
														"type": ""
													}
												],
												"src": "8561:1509:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10158:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10263:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10265:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10265:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10265:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10235:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10243:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10232:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10232:30:10"
															},
															"nodeType": "YulIf",
															"src": "10229:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10295:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10307:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10295:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10357:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10369:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10375:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10365:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10357:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10142:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10153:4:10",
														"type": ""
													}
												],
												"src": "10076:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10512:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10522:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10604:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10547:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10531:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10531:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10522:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10621:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10632:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10625:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10654:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10661:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10647:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10677:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10688:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10695:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10684:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10684:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10677:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10710:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10728:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10740:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10748:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10736:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10714:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10782:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10796:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10796:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10796:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10769:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10777:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10766:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10766:15:10"
															},
															"nodeType": "YulIf",
															"src": "10763:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10970:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10985:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11003:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "10989:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11027:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11053:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11065:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11032:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11032:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11020:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11020:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11020:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11083:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11094:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11099:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11090:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11090:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11083:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10923:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10928:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10920:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10920:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10936:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10938:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10949:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10954:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10945:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10945:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10938:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10898:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10900:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10911:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10904:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10894:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10482:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10490:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10498:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10506:5:10",
														"type": ""
													}
												],
												"src": "10410:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11220:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11269:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11271:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11271:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11271:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11248:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11256:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11244:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11244:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11263:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11240:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11240:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11233:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11233:35:10"
															},
															"nodeType": "YulIf",
															"src": "11230:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11361:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11388:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11375:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11375:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11365:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11404:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11480:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11488:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11495:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11503:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11413:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11404:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11198:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11206:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11214:5:10",
														"type": ""
													}
												],
												"src": "11143:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11652:761:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11698:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11700:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11700:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11700:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11673:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11669:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11669:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11665:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11665:32:10"
															},
															"nodeType": "YulIf",
															"src": "11662:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "11791:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11806:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11837:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11848:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11833:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11833:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11820:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11820:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11810:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11898:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11900:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11900:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11900:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11870:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11878:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11867:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11867:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "11864:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11995:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12055:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12066:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12051:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12051:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12075:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12005:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12005:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11995:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12103:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12118:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12149:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12160:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12145:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12145:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12132:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12132:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12122:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12211:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12213:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12213:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12213:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12183:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12191:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12180:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12180:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "12177:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12308:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12368:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12379:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12364:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12364:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12388:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12318:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12318:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12308:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11614:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11625:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11637:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11645:6:10",
														"type": ""
													}
												],
												"src": "11519:894:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12493:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12504:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12520:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12514:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12514:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12504:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12476:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12486:6:10",
														"type": ""
													}
												],
												"src": "12419:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12650:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12667:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12672:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12660:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12688:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12707:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12712:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12688:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12622:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12638:11:10",
														"type": ""
													}
												],
												"src": "12539:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12811:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12819:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12811:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12832:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12844:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12849:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12840:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12832:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12788:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12796:4:10",
														"type": ""
													}
												],
												"src": "12729:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12922:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12939:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12962:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12944:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12944:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12932:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12932:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12932:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12910:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12917:3:10",
														"type": ""
													}
												],
												"src": "12867:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13061:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13105:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13113:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13071:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13071:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13126:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13144:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13149:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13140:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13126:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13034:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13042:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13050:10:10",
														"type": ""
													}
												],
												"src": "12981:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13241:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13251:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13263:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13268:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13259:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13259:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13251:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13228:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13236:4:10",
														"type": ""
													}
												],
												"src": "13166:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13439:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13449:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13511:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13463:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13453:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13526:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13607:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13612:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13533:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13533:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13526:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13628:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13693:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13643:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13632:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13708:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13722:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13712:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13798:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13812:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13839:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13833:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13833:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13816:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13859:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13910:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13925:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13866:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13866:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13859:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13942:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14005:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13952:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13952:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13942:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13760:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13763:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13757:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13771:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13773:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13782:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13785:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13778:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13778:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13773:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13742:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13744:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13753:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13748:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13738:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14031:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14038:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13418:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13425:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13434:3:10",
														"type": ""
													}
												],
												"src": "13315:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14201:225:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14211:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14223:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14219:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14211:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14277:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14273:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14247:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14247:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14303:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14405:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14414:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14311:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14303:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14173:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14196:4:10",
														"type": ""
													}
												],
												"src": "14053:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14472:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14526:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14535:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14538:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14528:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14528:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14528:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14495:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14517:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14502:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14502:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14492:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14492:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14485:40:10"
															},
															"nodeType": "YulIf",
															"src": "14482:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14465:5:10",
														"type": ""
													}
												],
												"src": "14432:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14603:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14613:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14635:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14622:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14613:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14675:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14651:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14651:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14581:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14589:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14597:5:10",
														"type": ""
													}
												],
												"src": "14554:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14819:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14821:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14821:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14821:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14794:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14790:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14790:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14815:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14786:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14786:32:10"
															},
															"nodeType": "YulIf",
															"src": "14783:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "14912:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14927:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14941:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14931:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14956:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14991:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15002:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14987:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14987:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15011:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14966:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14966:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14956:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15039:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15054:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15068:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15058:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15084:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15116:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15127:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15112:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15112:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15136:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15094:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15094:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15084:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14735:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14746:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14758:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14766:6:10",
														"type": ""
													}
												],
												"src": "14693:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15250:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15296:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15298:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15298:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15298:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15271:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15280:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15267:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15267:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15292:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15263:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15263:32:10"
															},
															"nodeType": "YulIf",
															"src": "15260:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "15389:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15404:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15418:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15408:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15433:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15468:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15479:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15464:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15464:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15488:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15443:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15443:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15433:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15516:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15531:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15545:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15535:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15561:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15596:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15607:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15592:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15592:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15616:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15571:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15571:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15561:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15212:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15223:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15235:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15243:6:10",
														"type": ""
													}
												],
												"src": "15167:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15790:946:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15839:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15839:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15811:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15820:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15807:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15832:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15803:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15803:33:10"
															},
															"nodeType": "YulIf",
															"src": "15800:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "15930:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15945:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16009:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16005:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15984:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16057:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16072:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16137:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16112:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16185:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16200:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16265:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16261:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16240:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16230:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16313:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16328:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16342:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16332:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16358:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16393:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16404:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16389:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16389:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16413:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16368:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16368:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16358:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16441:288:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16456:47:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16487:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16498:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16483:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16483:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16470:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16470:33:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16460:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16550:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16552:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16552:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16552:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16522:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16530:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16519:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16519:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "16516:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16647:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16691:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16702:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16687:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16687:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16711:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16657:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16657:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16647:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15728:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15739:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15751:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15759:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15767:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15775:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15783:6:10",
														"type": ""
													}
												],
												"src": "15647:1089:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16848:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16870:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16878:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16866:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16882:34:10",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16859:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16859:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16938:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16946:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16934:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16934:15:10"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16951:12:10",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16927:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16927:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16927:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16840:6:10",
														"type": ""
													}
												],
												"src": "16742:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17123:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17133:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17199:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17204:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17140:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17140:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17133:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17305:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "17216:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17216:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17216:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17318:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17329:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17334:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17325:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17318:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17111:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17119:3:10",
														"type": ""
													}
												],
												"src": "16977:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17520:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17530:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17542:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17553:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17538:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17538:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17530:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17577:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17588:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17573:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17596:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17602:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17592:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17592:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17566:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17566:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17622:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17756:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17630:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17630:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17622:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17500:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17515:4:10",
														"type": ""
													}
												],
												"src": "17349:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17802:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17819:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17822:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17812:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17812:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17812:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17916:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17919:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17909:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17909:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17940:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17943:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17933:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17933:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17933:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17774:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18011:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18021:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18035:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18041:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18031:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18031:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18021:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18052:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18082:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18088:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18078:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18078:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18056:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18129:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18143:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18157:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18165:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18153:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18153:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18143:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18109:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18102:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18102:26:10"
															},
															"nodeType": "YulIf",
															"src": "18099:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18232:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18246:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18246:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18246:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18196:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18219:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18227:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18216:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18216:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18193:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18193:38:10"
															},
															"nodeType": "YulIf",
															"src": "18190:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17995:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18004:6:10",
														"type": ""
													}
												],
												"src": "17960:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18392:127:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18414:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18422:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18410:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18410:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18426:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18403:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18403:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18403:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18482:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18490:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18478:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18478:15:10"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18495:16:10",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18471:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18471:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18471:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18384:6:10",
														"type": ""
													}
												],
												"src": "18286:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18671:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18681:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18747:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18752:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18688:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18688:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18681:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18853:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																	"nodeType": "YulIdentifier",
																	"src": "18764:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18764:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18764:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18866:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18877:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18882:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18873:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18873:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18866:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18659:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18667:3:10",
														"type": ""
													}
												],
												"src": "18525:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19068:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19078:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19090:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19101:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19086:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19086:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19078:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19136:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19121:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19144:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19150:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19140:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19114:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19114:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19170:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19304:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19178:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19178:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19170:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19048:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19063:4:10",
														"type": ""
													}
												],
												"src": "18897:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19428:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19450:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19458:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19446:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19446:14:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19462:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19439:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19439:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19439:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19518:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19526:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19514:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19514:15:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19531:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19507:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19507:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19507:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19420:6:10",
														"type": ""
													}
												],
												"src": "19322:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19702:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19712:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19778:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19783:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19719:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19719:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19712:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19884:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19795:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19795:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19795:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19897:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19908:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19913:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19904:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19904:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19897:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19690:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19698:3:10",
														"type": ""
													}
												],
												"src": "19556:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20099:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20109:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20121:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20117:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20109:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20156:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20167:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20152:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20175:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20171:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20145:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20145:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20201:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20335:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20209:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20209:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20201:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20079:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20094:4:10",
														"type": ""
													}
												],
												"src": "19928:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20381:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20398:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20401:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20391:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20391:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20391:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20495:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20498:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20488:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20488:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20519:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20522:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20512:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20512:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20512:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20353:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20567:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20584:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20587:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20577:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20577:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20577:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20681:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20684:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20674:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20674:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20705:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20708:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20698:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20698:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20698:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20539:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20768:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20778:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20805:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20787:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20787:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20778:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20901:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20903:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20903:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20903:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20826:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20833:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20823:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20823:77:10"
															},
															"nodeType": "YulIf",
															"src": "20820:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20932:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20943:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20950:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20939:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20932:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20754:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20764:3:10",
														"type": ""
													}
												],
												"src": "20725:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21070:121:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21092:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21100:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21088:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21104:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21081:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21081:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21081:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21160:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21168:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21156:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21156:15:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21173:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21149:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21149:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21149:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21062:6:10",
														"type": ""
													}
												],
												"src": "20964:227:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21343:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21353:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21419:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21424:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21360:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21360:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21353:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21525:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "21436:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21436:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21436:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21538:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21549:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21554:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21545:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21545:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21538:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21331:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21339:3:10",
														"type": ""
													}
												],
												"src": "21197:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21740:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21750:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21762:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21773:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21758:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21758:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21750:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21797:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21808:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21793:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21816:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21822:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21812:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21786:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21786:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21842:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21976:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21850:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21850:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21842:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21720:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21735:4:10",
														"type": ""
													}
												],
												"src": "21569:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22100:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22122:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22130:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22118:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22118:14:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22134:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22111:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22111:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22190:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22198:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22186:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22203:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22179:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22179:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22179:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22092:6:10",
														"type": ""
													}
												],
												"src": "21994:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22370:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22380:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22446:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22451:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22387:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22387:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22380:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22552:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "22463:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22463:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22463:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22565:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22576:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22581:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22572:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22572:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22565:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22358:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22366:3:10",
														"type": ""
													}
												],
												"src": "22224:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22767:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22777:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22789:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22785:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22785:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22824:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22835:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22820:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22820:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22843:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22849:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22839:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22839:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22813:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22813:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22813:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22869:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23003:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22877:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22877:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22869:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22747:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22762:4:10",
														"type": ""
													}
												],
												"src": "22596:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23127:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23149:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23157:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23145:14:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23161:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23138:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23138:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23217:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23225:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23213:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23213:15:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23230:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23206:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23206:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23206:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23119:6:10",
														"type": ""
													}
												],
												"src": "23021:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23402:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23412:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23478:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23483:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23419:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23419:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23412:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23584:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "23495:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23495:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23495:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23597:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23608:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23613:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23604:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23604:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23597:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23390:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23398:3:10",
														"type": ""
													}
												],
												"src": "23256:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23799:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23809:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23821:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23832:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23817:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23817:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23809:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23856:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23867:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23852:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23852:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23875:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23871:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23845:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23845:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23901:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24035:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23909:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23909:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23901:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23779:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23794:4:10",
														"type": ""
													}
												],
												"src": "23628:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24097:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24107:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24130:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24112:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24112:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24107:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24141:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24164:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24146:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24146:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24141:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24175:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24186:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24189:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24182:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24182:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24175:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24215:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24217:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24217:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24217:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24207:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "24210:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24204:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24204:10:10"
															},
															"nodeType": "YulIf",
															"src": "24201:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24084:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24087:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24093:3:10",
														"type": ""
													}
												],
												"src": "24053:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24476:408:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24486:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24498:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24509:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24494:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24486:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24533:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24544:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24529:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24552:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24558:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24548:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24548:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24522:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24522:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24522:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24578:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24680:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24689:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24586:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24586:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24578:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24715:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24726:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24711:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24711:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24735:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24731:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24704:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24704:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24761:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24863:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24872:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24769:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24769:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24761:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24440:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24452:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24460:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24471:4:10",
														"type": ""
													}
												],
												"src": "24250:634:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24996:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25018:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25026:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25014:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25014:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25030:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25007:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25007:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25007:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25086:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25094:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25082:15:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25099:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25075:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25075:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25075:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24988:6:10",
														"type": ""
													}
												],
												"src": "24890:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25270:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25280:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25346:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25351:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25287:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25287:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25280:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25452:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "25363:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25363:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25363:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25465:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25476:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25481:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25472:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25472:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25465:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25258:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25266:3:10",
														"type": ""
													}
												],
												"src": "25124:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25667:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25677:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25689:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25700:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25685:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25685:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25677:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25724:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25735:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25720:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25720:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25743:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25749:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25739:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25739:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25713:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25713:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25769:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25903:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25777:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25777:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25769:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25647:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25662:4:10",
														"type": ""
													}
												],
												"src": "25496:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26047:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26057:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26069:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26080:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26065:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26065:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26057:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26137:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26150:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26146:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26093:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26093:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26093:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26218:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26231:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26242:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26227:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26227:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26174:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26174:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26174:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26011:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26023:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26031:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26042:4:10",
														"type": ""
													}
												],
												"src": "25921:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "26346:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26334:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26334:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26334:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26319:3:10",
														"type": ""
													}
												],
												"src": "26259:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26441:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26452:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26468:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26462:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26462:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26452:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26424:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26434:6:10",
														"type": ""
													}
												],
												"src": "26383:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26582:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26599:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26604:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26592:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26592:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26620:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26639:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26644:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26635:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26635:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26620:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26554:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26559:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26570:11:10",
														"type": ""
													}
												],
												"src": "26487:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26751:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26761:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26807:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26775:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26775:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26765:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26822:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26887:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26892:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26829:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26829:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26822:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26947:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26954:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26943:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26943:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26961:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26966:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26908:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26908:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26908:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26982:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26993:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27020:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26998:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26998:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26989:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26989:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26982:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26732:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26739:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26747:3:10",
														"type": ""
													}
												],
												"src": "26661:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27368:725:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27378:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27390:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27401:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27386:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27386:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27378:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27459:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27472:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27483:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27468:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27468:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27415:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27415:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27415:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27540:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27553:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27564:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27549:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27496:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27496:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27496:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27600:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27585:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27609:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27615:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27605:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27605:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27578:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27578:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27578:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27635:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27737:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27746:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27643:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27643:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27635:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27772:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27783:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27768:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27792:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27798:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27788:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27761:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27761:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27818:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27920:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27929:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27826:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27826:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27818:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27966:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27951:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27976:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27982:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27972:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27972:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27944:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27944:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27944:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28002:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "28072:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28081:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28010:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28010:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28002:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27308:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "27320:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27328:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27336:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27344:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27352:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27363:4:10",
														"type": ""
													}
												],
												"src": "27040:1053:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28161:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28171:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28186:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28180:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28180:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28171:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28228:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "28202:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28202:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28202:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28139:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28147:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28155:5:10",
														"type": ""
													}
												],
												"src": "28099:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28322:273:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28368:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28370:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28370:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28370:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28343:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28352:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28339:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28339:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28364:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28335:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28335:32:10"
															},
															"nodeType": "YulIf",
															"src": "28332:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "28461:127:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28476:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28490:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "28480:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28505:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28550:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28561:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28546:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28546:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28570:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "28515:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28515:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "28505:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28292:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28303:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28315:6:10",
														"type": ""
													}
												],
												"src": "28246:349:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28654:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28664:36:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28689:3:10",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28694:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "28685:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28685:15:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "28664:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28635:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "28645:8:10",
														"type": ""
													}
												],
												"src": "28601:106:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28752:144:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28789:101:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28818:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28824:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "28803:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28803:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28803:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28839:41:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "28877:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "28871:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "28871:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "28846:24:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28846:34:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "28839:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "28768:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28768:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28786:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28765:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28765:23:10"
															},
															"nodeType": "YulIf",
															"src": "28762:128:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "28748:3:10",
														"type": ""
													}
												],
												"src": "28713:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28945:668:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28985:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "28987:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "28961:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28961:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28979:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "28958:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28958:26:10"
															},
															"nodeType": "YulIf",
															"src": "28955:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29004:32:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "29016:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29016:20:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "29008:4:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29060:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29066:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "29073:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29073:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29091:1:10",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29069:24:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "29045:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29045:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29045:49:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29104:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29124:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29118:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29118:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "29108:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29255:29:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29269:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29160:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29168:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "29157:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29157:30:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29208:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29216:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29204:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29204:17:10"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "29223:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29223:16:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "29201:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29201:39:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "29141:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29141:113:10"
															},
															"nodeType": "YulIf",
															"src": "29138:146:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29294:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29309:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29315:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29305:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29305:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "29298:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29331:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "29351:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29345:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29345:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29335:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29398:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29400:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29370:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29378:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29367:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29367:30:10"
															},
															"nodeType": "YulIf",
															"src": "29364:43:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29417:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "29436:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29441:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29432:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29432:14:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29448:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29428:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29428:27:10"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "29421:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29512:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29514:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29470:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "29479:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "29489:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29489:16:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29507:1:10",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "29485:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29485:24:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29475:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29475:35:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29467:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29467:44:10"
															},
															"nodeType": "YulIf",
															"src": "29464:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29551:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29561:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29573:4:10",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "29579:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29569:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29569:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29557:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "29531:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29531:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29531:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29597:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "29604:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "29597:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "28941:3:10",
														"type": ""
													}
												],
												"src": "28902:711:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29725:133:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29747:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29755:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29743:14:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29759:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29736:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29736:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29736:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29815:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29823:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29811:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29811:15:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29828:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29804:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29804:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29804:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29717:6:10",
														"type": ""
													}
												],
												"src": "29619:239:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30010:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30020:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30086:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30091:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30027:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30027:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30020:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30192:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																	"nodeType": "YulIdentifier",
																	"src": "30103:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30103:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30103:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30205:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30216:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30221:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30212:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30212:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30205:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29998:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30006:3:10",
														"type": ""
													}
												],
												"src": "29864:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30407:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30417:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30429:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30440:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30425:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30425:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30417:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30464:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30475:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30460:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30460:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30483:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30489:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30479:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30453:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30453:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30453:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30509:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30643:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30517:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30517:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30509:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30387:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30402:4:10",
														"type": ""
													}
												],
												"src": "30236:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30767:121:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30789:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30797:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30785:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30785:14:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30801:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30778:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30778:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30778:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30857:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30865:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30853:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30853:15:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30870:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30846:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30846:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30846:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30759:6:10",
														"type": ""
													}
												],
												"src": "30661:227:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31040:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31050:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31116:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31121:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31057:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31057:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31050:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31222:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "31133:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31133:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31133:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31235:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31246:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31251:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31242:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31235:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31028:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31036:3:10",
														"type": ""
													}
												],
												"src": "30894:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31437:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31447:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31459:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31470:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31455:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31455:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31447:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31494:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31505:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31490:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31490:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31513:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31519:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31509:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31483:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31483:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31483:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31539:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31673:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31547:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31547:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31539:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31417:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31432:4:10",
														"type": ""
													}
												],
												"src": "31266:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31919:523:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31929:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31941:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31952:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31937:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31929:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32010:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32023:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32034:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32019:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31966:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31966:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31966:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "32091:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32104:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32115:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32100:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32100:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32047:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32047:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32047:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "32173:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32197:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32182:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32129:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32129:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32129:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "32255:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32268:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32279:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32264:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32264:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32211:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32211:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32211:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32304:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32315:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32300:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32300:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32325:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32331:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32321:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32293:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32293:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32293:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32351:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "32421:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32430:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32359:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32359:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32351:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31859:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "31871:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "31879:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "31887:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31895:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31903:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31914:4:10",
														"type": ""
													}
												],
												"src": "31691:751:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non-ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1EF JUMPI PUSH2 0x92 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1988 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x39E JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3AE JUMPI POP PUSH2 0x3AD DUP3 PUSH2 0x758 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3C4 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F0 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x412 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x420 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x451 PUSH2 0x7C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x496 DUP6 PUSH2 0x491 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST JUMPDEST PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x7CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x57B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH2 0x5C8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BB JUMPI PUSH2 0x5BA PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5F1 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x581 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x615 PUSH2 0x60E PUSH2 0x7C2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x7C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x705 JUMPI POP PUSH2 0x704 DUP6 PUSH2 0x6FF PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST JUMPDEST PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x751 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC57 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP1 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x874 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x887 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x897 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA48 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8B8 JUMPI PUSH2 0x8B7 PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8D7 JUMPI PUSH2 0x8D6 PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96F SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA41 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP PUSH2 0x89A JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xABF SWAP3 SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xAD5 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xAE3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF02 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBD SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD0 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCDD DUP6 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCEA DUP6 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xEC3 SWAP3 SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xED9 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xEE7 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1153 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF21 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132A JUMP JUMPDEST ISZERO PUSH2 0x10D1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF67 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFA3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1048 JUMPI PUSH2 0xFAF PUSH2 0x22D6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x100B JUMPI POP PUSH2 0xFC3 PUSH2 0x22F8 JUMP JUMPDEST DUP1 PUSH2 0xFCE JUMPI POP PUSH2 0x100D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP1 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1126 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x113E JUMPI PUSH2 0x113D PUSH2 0x1E39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1172 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132A JUMP JUMPDEST ISZERO PUSH2 0x1322 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1299 JUMPI PUSH2 0x1200 PUSH2 0x22D6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x125C JUMPI POP PUSH2 0x1214 PUSH2 0x22F8 JUMP JUMPDEST DUP1 PUSH2 0x121F JUMPI POP PUSH2 0x125E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1290 SWAP1 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP3 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1381 JUMP JUMPDEST DUP2 EQ PUSH2 0x13A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B9 DUP2 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x13BF JUMP JUMPDEST DUP2 EQ PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13EF DUP2 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140C JUMPI PUSH2 0x140B PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x13BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1459 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1494 DUP2 PUSH2 0x145F JUMP JUMPDEST DUP2 EQ PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B1 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP5 DUP3 DUP6 ADD PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x14E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP5 DUP3 DUP6 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1581 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A9 DUP3 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x15B3 DUP2 DUP6 PUSH2 0x1552 JUMP JUMPDEST SWAP4 POP PUSH2 0x15C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x15CC DUP2 PUSH2 0x158D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 DUP5 PUSH2 0x159E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1636 DUP3 PUSH2 0x158D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1668 PUSH2 0x134D JUMP JUMPDEST SWAP1 POP PUSH2 0x1674 DUP3 DUP3 PUSH2 0x162D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16BD PUSH2 0x16B8 DUP5 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x16A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1709 JUMPI DUP1 PUSH2 0x16F5 DUP9 DUP3 PUSH2 0x13E0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1738 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH2 0x176A DUP3 PUSH2 0x158D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1799 PUSH2 0x1794 DUP5 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST PUSH2 0x17C0 DUP5 DUP3 DUP6 PUSH2 0x1777 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17DD JUMPI PUSH2 0x17DC PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1786 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1812 JUMPI PUSH2 0x1811 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1820 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1831 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x185E DUP9 DUP3 DUP10 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187E PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x188B DUP9 DUP3 DUP10 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AC JUMPI PUSH2 0x18AB PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x18B8 DUP9 DUP3 DUP10 ADD PUSH2 0x17C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18E0 JUMPI PUSH2 0x18DF PUSH2 0x15FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1904 PUSH2 0x18FF DUP5 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1927 JUMPI PUSH2 0x1926 PUSH2 0x16A5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1950 JUMPI DUP1 PUSH2 0x193C DUP9 DUP3 PUSH2 0x13AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1929 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x196F JUMPI PUSH2 0x196E PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x197F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BD JUMPI PUSH2 0x19BC PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x19C9 DUP6 DUP3 DUP7 ADD PUSH2 0x195A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP6 DUP3 DUP7 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x13BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A47 DUP4 DUP4 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6B DUP3 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x1A75 DUP2 DUP6 PUSH2 0x1A0B JUMP JUMPDEST SWAP4 POP PUSH2 0x1A80 DUP4 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AB1 JUMPI DUP2 MLOAD PUSH2 0x1A98 DUP9 DUP3 PUSH2 0x1A3B JUMP JUMPDEST SWAP8 POP PUSH2 0x1AA3 DUP4 PUSH2 0x1A53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A84 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD8 DUP2 DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE9 DUP2 PUSH2 0x14E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B06 DUP2 PUSH2 0x1AE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B22 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B31 DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B42 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B82 DUP6 DUP3 DUP7 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BA8 JUMPI PUSH2 0x1BA7 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB6 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1BC7 DUP9 DUP3 DUP10 ADD PUSH2 0x13AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BD8 DUP9 DUP3 DUP10 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BE9 DUP9 DUP3 DUP10 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C0A JUMPI PUSH2 0x1C09 PUSH2 0x135C JUMP JUMPDEST JUMPDEST PUSH2 0x1C16 DUP9 DUP3 DUP10 ADD PUSH2 0x17C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7F PUSH1 0x2A DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8A DUP3 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CAE DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1CB5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D71 PUSH1 0x2E DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7C DUP3 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA0 DUP2 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 PUSH1 0x29 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0E DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E32 DUP2 PUSH2 0x1DF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EA2 DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1E68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3B PUSH1 0x28 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F46 DUP3 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6A DUP2 PUSH2 0x1F2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCD PUSH1 0x25 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD8 DUP3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFC DUP2 PUSH2 0x1FC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205F PUSH1 0x2A DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x206A DUP3 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x208E DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A0 DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP4 PUSH2 0x13BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1E68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E3 DUP2 DUP6 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x20F7 DUP2 DUP5 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215C PUSH1 0x29 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x2167 DUP3 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x218B DUP2 PUSH2 0x214F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x21B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21C4 DUP2 PUSH2 0x1381 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F1 DUP3 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x21FB DUP2 DUP6 PUSH2 0x21D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x220B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x158D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2234 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x2241 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2253 DUP2 DUP7 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 DUP6 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x227B DUP2 DUP5 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2296 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B2 JUMPI PUSH2 0x22B1 PUSH2 0x1357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C0 DUP5 DUP3 DUP6 ADD PUSH2 0x2287 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x22F5 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22F2 PUSH1 0x0 MLOAD PUSH2 0x22C9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2385 JUMPI PUSH2 0x230A PUSH2 0x134D JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2332 JUMPI POP POP PUSH2 0x2385 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2350 JUMPI POP POP POP POP PUSH2 0x2385 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x236D JUMPI POP POP POP POP POP PUSH2 0x2385 JUMP JUMPDEST PUSH2 0x237C DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x162D JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E4 PUSH1 0x34 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x23EF DUP3 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2413 DUP2 PUSH2 0x23D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2476 PUSH1 0x28 DUP4 PUSH2 0x1552 JUMP JUMPDEST SWAP2 POP PUSH2 0x2481 DUP3 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24A5 DUP2 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24C1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x24CE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x24DB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x24E8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1435 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24FA DUP2 DUP5 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP MSTORE 0xAE 0xD4 0x4B 0xB6 0xB3 0xBD PUSH14 0x2EB5715B1A4FDD139AAFBC74F82E SLT MULMOD SSTORE 0x5C 0x2A PUSH9 0x474B8564736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "565:17736:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1253:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1974:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4179:438;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2626:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3223:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10049:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3456:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3696:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2230:230;2316:7;2363:1;2344:21;;:7;:21;;;2336:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2430:9;:13;2440:2;2430:13;;;;;;;;;;;:22;2444:7;2430:22;;;;;;;;;;;;;;;;2423:29;;2230:230;;;;:::o;1253:310::-;1355:4;1407:26;1392:41;;;:11;:41;;;;:110;;;;1465:37;1450:52;;;:11;:52;;;;1392:110;:163;;;;1519:36;1543:11;1519:23;:36::i;:::-;1392:163;1372:183;;1253:310;;;:::o;1974:105::-;2034:13;2067:4;2060:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1974:105;;;:::o;4179:438::-;4420:12;:10;:12::i;:::-;4412:20;;:4;:20;;;:60;;;;4436:36;4453:4;4459:12;:10;:12::i;:::-;4436:16;:36::i;:::-;4412:60;4390:156;;;;;;;;;;;;:::i;:::-;;;;;;;;;4557:52;4580:4;4586:2;4590:3;4595:7;4604:4;4557:22;:52::i;:::-;4179:438;;;;;:::o;2626:524::-;2782:16;2843:3;:10;2824:8;:15;:29;2816:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2912:30;2959:8;:15;2945:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2912:63;;2993:9;2988:122;3012:8;:15;3008:1;:19;2988:122;;;3068:30;3078:8;3087:1;3078:11;;;;;;;;:::i;:::-;;;;;;;;3091:3;3095:1;3091:6;;;;;;;;:::i;:::-;;;;;;;;3068:9;:30::i;:::-;3049:13;3063:1;3049:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;3029:3;;;;:::i;:::-;;;2988:122;;;;3129:13;3122:20;;;2626:524;;;;:::o;3223:155::-;3318:52;3337:12;:10;:12::i;:::-;3351:8;3361;3318:18;:52::i;:::-;3223:155;;:::o;10049:101::-;10110:7;10137:2;10130:9;;10049:101;;;:::o;3456:168::-;3555:4;3579:18;:27;3598:7;3579:27;;;;;;;;;;;;;;;:37;3607:8;3579:37;;;;;;;;;;;;;;;;;;;;;;;;;3572:44;;3456:168;;;;:::o;3696:406::-;3912:12;:10;:12::i;:::-;3904:20;;:4;:20;;;:60;;;;3928:36;3945:4;3951:12;:10;:12::i;:::-;3928:16;:36::i;:::-;3904:60;3882:156;;;;;;;;;;;;:::i;:::-;;;;;;;;;4049:45;4067:4;4073:2;4077;4081:6;4089:4;4049:17;:45::i;:::-;3696:406;;;;;:::o;854:157:3:-;939:4;978:25;963:40;;;:11;:40;;;;956:47;;854:157;;;:::o;656:98:1:-;709:7;736:10;729:17;;656:98;:::o;6413:1146:2:-;6640:7;:14;6626:3;:10;:28;6618:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6732:1;6718:16;;:2;:16;;;6710:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6789:16;6808:12;:10;:12::i;:::-;6789:31;;6833:60;6854:8;6864:4;6870:2;6874:3;6879:7;6888:4;6833:20;:60::i;:::-;6911:9;6906:421;6930:3;:10;6926:1;:14;6906:421;;;6962:10;6975:3;6979:1;6975:6;;;;;;;;:::i;:::-;;;;;;;;6962:19;;6996:14;7013:7;7021:1;7013:10;;;;;;;;:::i;:::-;;;;;;;;6996:27;;7040:19;7062:9;:13;7072:2;7062:13;;;;;;;;;;;:19;7076:4;7062:19;;;;;;;;;;;;;;;;7040:41;;7119:6;7104:11;:21;;7096:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7252:6;7238:11;:20;7216:9;:13;7226:2;7216:13;;;;;;;;;;;:19;7230:4;7216:19;;;;;;;;;;;;;;;:42;;;;7309:6;7288:9;:13;7298:2;7288:13;;;;;;;;;;;:17;7302:2;7288:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6947:380;;;6942:3;;;;:::i;:::-;;;6906:421;;;;7374:2;7344:47;;7368:4;7344:47;;7358:8;7344:47;;;7378:3;7383:7;7344:47;;;;;;;:::i;:::-;;;;;;;;7404:59;7424:8;7434:4;7440:2;7444:3;7449:7;7458:4;7404:19;:59::i;:::-;7476:75;7512:8;7522:4;7528:2;7532:3;7537:7;7546:4;7476:35;:75::i;:::-;6607:952;6413:1146;;;;;:::o;13834:331::-;13989:8;13980:17;;:5;:17;;;13972:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;14092:8;14054:18;:25;14073:5;14054:25;;;;;;;;;;;;;;;:35;14080:8;14054:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;14138:8;14116:41;;14131:5;14116:41;;;14148:8;14116:41;;;;;;:::i;:::-;;;;;;;;13834:331;;;:::o;5081:974::-;5283:1;5269:16;;:2;:16;;;5261:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5340:16;5359:12;:10;:12::i;:::-;5340:31;;5382:20;5405:21;5423:2;5405:17;:21::i;:::-;5382:44;;5437:24;5464:25;5482:6;5464:17;:25::i;:::-;5437:52;;5502:60;5523:8;5533:4;5539:2;5543:3;5548:7;5557:4;5502:20;:60::i;:::-;5575:19;5597:9;:13;5607:2;5597:13;;;;;;;;;;;:19;5611:4;5597:19;;;;;;;;;;;;;;;;5575:41;;5650:6;5635:11;:21;;5627:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5775:6;5761:11;:20;5739:9;:13;5749:2;5739:13;;;;;;;;;;;:19;5753:4;5739:19;;;;;;;;;;;;;;;:42;;;;5824:6;5803:9;:13;5813:2;5803:13;;;;;;;;;;;:17;5817:2;5803:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5879:2;5848:46;;5873:4;5848:46;;5863:8;5848:46;;;5883:2;5887:6;5848:46;;;;;;;:::i;:::-;;;;;;;;5907:59;5927:8;5937:4;5943:2;5947:3;5952:7;5961:4;5907:19;:59::i;:::-;5979:68;6010:8;6020:4;6026:2;6030;6034:6;6042:4;5979:30;:68::i;:::-;5250:805;;;;5081:974;;;;;:::o;15123:221::-;;;;;;;:::o;16299:220::-;;;;;;;:::o;17279:813::-;17519:15;:2;:13;;;:15::i;:::-;17515:570;;;17572:2;17555:43;;;17599:8;17609:4;17615:3;17620:7;17629:4;17555:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17551:523;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17947:6;17940:14;;;;;;;;;;;:::i;:::-;;;;;;;;17551:523;;;17996:62;;;;;;;;;;:::i;:::-;;;;;;;;17551:523;17728:48;;;17716:60;;;:8;:60;;;;17712:159;;17801:50;;;;;;;;;;:::i;:::-;;;;;;;;17712:159;17635:251;17515:570;17279:813;;;;;;:::o;18100:198::-;18166:16;18195:22;18234:1;18220:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18195:41;;18258:7;18247:5;18253:1;18247:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;18285:5;18278:12;;;18100:198;;;:::o;16527:744::-;16742:15;:2;:13;;;:15::i;:::-;16738:526;;;16795:2;16778:38;;;16817:8;16827:4;16833:2;16837:6;16845:4;16778:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16774:479;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17126:6;17119:14;;;;;;;;;;;:::i;:::-;;;;;;;;16774:479;;;17175:62;;;;;;;;;;:::i;:::-;;;;;;;;16774:479;16912:43;;;16900:55;;;:8;:55;;;;16896:154;;16980:50;;;;;;;;;;:::i;:::-;;;;;;;;16896:154;16851:214;16738:526;16527:744;;;;;;:::o;1210:326:0:-;1270:4;1527:1;1505:7;:19;;;:23;1498:30;;1210:326;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:116::-;14502:21;14517:5;14502:21;:::i;:::-;14495:5;14492:32;14482:60;;14538:1;14535;14528:12;14482:60;14432:116;:::o;14554:133::-;14597:5;14635:6;14622:20;14613:29;;14651:30;14675:5;14651:30;:::i;:::-;14554:133;;;;:::o;14693:468::-;14758:6;14766;14815:2;14803:9;14794:7;14790:23;14786:32;14783:119;;;14821:79;;:::i;:::-;14783:119;14941:1;14966:53;15011:7;15002:6;14991:9;14987:22;14966:53;:::i;:::-;14956:63;;14912:117;15068:2;15094:50;15136:7;15127:6;15116:9;15112:22;15094:50;:::i;:::-;15084:60;;15039:115;14693:468;;;;;:::o;15167:474::-;15235:6;15243;15292:2;15280:9;15271:7;15267:23;15263:32;15260:119;;;15298:79;;:::i;:::-;15260:119;15418:1;15443:53;15488:7;15479:6;15468:9;15464:22;15443:53;:::i;:::-;15433:63;;15389:117;15545:2;15571:53;15616:7;15607:6;15596:9;15592:22;15571:53;:::i;:::-;15561:63;;15516:118;15167:474;;;;;:::o;15647:1089::-;15751:6;15759;15767;15775;15783;15832:3;15820:9;15811:7;15807:23;15803:33;15800:120;;;15839:79;;:::i;:::-;15800:120;15959:1;15984:53;16029:7;16020:6;16009:9;16005:22;15984:53;:::i;:::-;15974:63;;15930:117;16086:2;16112:53;16157:7;16148:6;16137:9;16133:22;16112:53;:::i;:::-;16102:63;;16057:118;16214:2;16240:53;16285:7;16276:6;16265:9;16261:22;16240:53;:::i;:::-;16230:63;;16185:118;16342:2;16368:53;16413:7;16404:6;16393:9;16389:22;16368:53;:::i;:::-;16358:63;;16313:118;16498:3;16487:9;16483:19;16470:33;16530:18;16522:6;16519:30;16516:117;;;16552:79;;:::i;:::-;16516:117;16657:62;16711:7;16702:6;16691:9;16687:22;16657:62;:::i;:::-;16647:72;;16441:288;15647:1089;;;;;;;;:::o;16742:229::-;16882:34;16878:1;16870:6;16866:14;16859:58;16951:12;16946:2;16938:6;16934:15;16927:37;16742:229;:::o;16977:366::-;17119:3;17140:67;17204:2;17199:3;17140:67;:::i;:::-;17133:74;;17216:93;17305:3;17216:93;:::i;:::-;17334:2;17329:3;17325:12;17318:19;;16977:366;;;:::o;17349:419::-;17515:4;17553:2;17542:9;17538:18;17530:26;;17602:9;17596:4;17592:20;17588:1;17577:9;17573:17;17566:47;17630:131;17756:4;17630:131;:::i;:::-;17622:139;;17349:419;;;:::o;17774:180::-;17822:77;17819:1;17812:88;17919:4;17916:1;17909:15;17943:4;17940:1;17933:15;17960:320;18004:6;18041:1;18035:4;18031:12;18021:22;;18088:1;18082:4;18078:12;18109:18;18099:81;;18165:4;18157:6;18153:17;18143:27;;18099:81;18227:2;18219:6;18216:14;18196:18;18193:38;18190:84;;18246:18;;:::i;:::-;18190:84;18011:269;17960:320;;;:::o;18286:233::-;18426:34;18422:1;18414:6;18410:14;18403:58;18495:16;18490:2;18482:6;18478:15;18471:41;18286:233;:::o;18525:366::-;18667:3;18688:67;18752:2;18747:3;18688:67;:::i;:::-;18681:74;;18764:93;18853:3;18764:93;:::i;:::-;18882:2;18877:3;18873:12;18866:19;;18525:366;;;:::o;18897:419::-;19063:4;19101:2;19090:9;19086:18;19078:26;;19150:9;19144:4;19140:20;19136:1;19125:9;19121:17;19114:47;19178:131;19304:4;19178:131;:::i;:::-;19170:139;;18897:419;;;:::o;19322:228::-;19462:34;19458:1;19450:6;19446:14;19439:58;19531:11;19526:2;19518:6;19514:15;19507:36;19322:228;:::o;19556:366::-;19698:3;19719:67;19783:2;19778:3;19719:67;:::i;:::-;19712:74;;19795:93;19884:3;19795:93;:::i;:::-;19913:2;19908:3;19904:12;19897:19;;19556:366;;;:::o;19928:419::-;20094:4;20132:2;20121:9;20117:18;20109:26;;20181:9;20175:4;20171:20;20167:1;20156:9;20152:17;20145:47;20209:131;20335:4;20209:131;:::i;:::-;20201:139;;19928:419;;;:::o;20353:180::-;20401:77;20398:1;20391:88;20498:4;20495:1;20488:15;20522:4;20519:1;20512:15;20539:180;20587:77;20584:1;20577:88;20684:4;20681:1;20674:15;20708:4;20705:1;20698:15;20725:233;20764:3;20787:24;20805:5;20787:24;:::i;:::-;20778:33;;20833:66;20826:5;20823:77;20820:103;;20903:18;;:::i;:::-;20820:103;20950:1;20943:5;20939:13;20932:20;;20725:233;;;:::o;20964:227::-;21104:34;21100:1;21092:6;21088:14;21081:58;21173:10;21168:2;21160:6;21156:15;21149:35;20964:227;:::o;21197:366::-;21339:3;21360:67;21424:2;21419:3;21360:67;:::i;:::-;21353:74;;21436:93;21525:3;21436:93;:::i;:::-;21554:2;21549:3;21545:12;21538:19;;21197:366;;;:::o;21569:419::-;21735:4;21773:2;21762:9;21758:18;21750:26;;21822:9;21816:4;21812:20;21808:1;21797:9;21793:17;21786:47;21850:131;21976:4;21850:131;:::i;:::-;21842:139;;21569:419;;;:::o;21994:224::-;22134:34;22130:1;22122:6;22118:14;22111:58;22203:7;22198:2;22190:6;22186:15;22179:32;21994:224;:::o;22224:366::-;22366:3;22387:67;22451:2;22446:3;22387:67;:::i;:::-;22380:74;;22463:93;22552:3;22463:93;:::i;:::-;22581:2;22576:3;22572:12;22565:19;;22224:366;;;:::o;22596:419::-;22762:4;22800:2;22789:9;22785:18;22777:26;;22849:9;22843:4;22839:20;22835:1;22824:9;22820:17;22813:47;22877:131;23003:4;22877:131;:::i;:::-;22869:139;;22596:419;;;:::o;23021:229::-;23161:34;23157:1;23149:6;23145:14;23138:58;23230:12;23225:2;23217:6;23213:15;23206:37;23021:229;:::o;23256:366::-;23398:3;23419:67;23483:2;23478:3;23419:67;:::i;:::-;23412:74;;23495:93;23584:3;23495:93;:::i;:::-;23613:2;23608:3;23604:12;23597:19;;23256:366;;;:::o;23628:419::-;23794:4;23832:2;23821:9;23817:18;23809:26;;23881:9;23875:4;23871:20;23867:1;23856:9;23852:17;23845:47;23909:131;24035:4;23909:131;:::i;:::-;23901:139;;23628:419;;;:::o;24053:191::-;24093:3;24112:20;24130:1;24112:20;:::i;:::-;24107:25;;24146:20;24164:1;24146:20;:::i;:::-;24141:25;;24189:1;24186;24182:9;24175:16;;24210:3;24207:1;24204:10;24201:36;;;24217:18;;:::i;:::-;24201:36;24053:191;;;;:::o;24250:634::-;24471:4;24509:2;24498:9;24494:18;24486:26;;24558:9;24552:4;24548:20;24544:1;24533:9;24529:17;24522:47;24586:108;24689:4;24680:6;24586:108;:::i;:::-;24578:116;;24741:9;24735:4;24731:20;24726:2;24715:9;24711:18;24704:48;24769:108;24872:4;24863:6;24769:108;:::i;:::-;24761:116;;24250:634;;;;;:::o;24890:228::-;25030:34;25026:1;25018:6;25014:14;25007:58;25099:11;25094:2;25086:6;25082:15;25075:36;24890:228;:::o;25124:366::-;25266:3;25287:67;25351:2;25346:3;25287:67;:::i;:::-;25280:74;;25363:93;25452:3;25363:93;:::i;:::-;25481:2;25476:3;25472:12;25465:19;;25124:366;;;:::o;25496:419::-;25662:4;25700:2;25689:9;25685:18;25677:26;;25749:9;25743:4;25739:20;25735:1;25724:9;25720:17;25713:47;25777:131;25903:4;25777:131;:::i;:::-;25769:139;;25496:419;;;:::o;25921:332::-;26042:4;26080:2;26069:9;26065:18;26057:26;;26093:71;26161:1;26150:9;26146:17;26137:6;26093:71;:::i;:::-;26174:72;26242:2;26231:9;26227:18;26218:6;26174:72;:::i;:::-;25921:332;;;;;:::o;26259:118::-;26346:24;26364:5;26346:24;:::i;:::-;26341:3;26334:37;26259:118;;:::o;26383:98::-;26434:6;26468:5;26462:12;26452:22;;26383:98;;;:::o;26487:168::-;26570:11;26604:6;26599:3;26592:19;26644:4;26639:3;26635:14;26620:29;;26487:168;;;;:::o;26661:373::-;26747:3;26775:38;26807:5;26775:38;:::i;:::-;26829:70;26892:6;26887:3;26829:70;:::i;:::-;26822:77;;26908:65;26966:6;26961:3;26954:4;26947:5;26943:16;26908:65;:::i;:::-;26998:29;27020:6;26998:29;:::i;:::-;26993:3;26989:39;26982:46;;26751:283;26661:373;;;;:::o;27040:1053::-;27363:4;27401:3;27390:9;27386:19;27378:27;;27415:71;27483:1;27472:9;27468:17;27459:6;27415:71;:::i;:::-;27496:72;27564:2;27553:9;27549:18;27540:6;27496:72;:::i;:::-;27615:9;27609:4;27605:20;27600:2;27589:9;27585:18;27578:48;27643:108;27746:4;27737:6;27643:108;:::i;:::-;27635:116;;27798:9;27792:4;27788:20;27783:2;27772:9;27768:18;27761:48;27826:108;27929:4;27920:6;27826:108;:::i;:::-;27818:116;;27982:9;27976:4;27972:20;27966:3;27955:9;27951:19;27944:49;28010:76;28081:4;28072:6;28010:76;:::i;:::-;28002:84;;27040:1053;;;;;;;;:::o;28099:141::-;28155:5;28186:6;28180:13;28171:22;;28202:32;28228:5;28202:32;:::i;:::-;28099:141;;;;:::o;28246:349::-;28315:6;28364:2;28352:9;28343:7;28339:23;28335:32;28332:119;;;28370:79;;:::i;:::-;28332:119;28490:1;28515:63;28570:7;28561:6;28550:9;28546:22;28515:63;:::i;:::-;28505:73;;28461:127;28246:349;;;;:::o;28601:106::-;28645:8;28694:5;28689:3;28685:15;28664:36;;28601:106;;;:::o;28713:183::-;28748:3;28786:1;28768:16;28765:23;28762:128;;;28824:1;28821;28818;28803:23;28846:34;28877:1;28871:8;28846:34;:::i;:::-;28839:41;;28762:128;28713:183;:::o;28902:711::-;28941:3;28979:4;28961:16;28958:26;28987:5;28955:39;29016:20;;:::i;:::-;29091:1;29073:16;29069:24;29066:1;29060:4;29045:49;29124:4;29118:11;29223:16;29216:4;29208:6;29204:17;29201:39;29168:18;29160:6;29157:30;29141:113;29138:146;;;29269:5;;;;29138:146;29315:6;29309:4;29305:17;29351:3;29345:10;29378:18;29370:6;29367:30;29364:43;;;29400:5;;;;;;29364:43;29448:6;29441:4;29436:3;29432:14;29428:27;29507:1;29489:16;29485:24;29479:4;29475:35;29470:3;29467:44;29464:57;;;29514:5;;;;;;;29464:57;29531;29579:6;29573:4;29569:17;29561:6;29557:30;29551:4;29531:57;:::i;:::-;29604:3;29597:10;;28945:668;;;;;28902:711;;:::o;29619:239::-;29759:34;29755:1;29747:6;29743:14;29736:58;29828:22;29823:2;29815:6;29811:15;29804:47;29619:239;:::o;29864:366::-;30006:3;30027:67;30091:2;30086:3;30027:67;:::i;:::-;30020:74;;30103:93;30192:3;30103:93;:::i;:::-;30221:2;30216:3;30212:12;30205:19;;29864:366;;;:::o;30236:419::-;30402:4;30440:2;30429:9;30425:18;30417:26;;30489:9;30483:4;30479:20;30475:1;30464:9;30460:17;30453:47;30517:131;30643:4;30517:131;:::i;:::-;30509:139;;30236:419;;;:::o;30661:227::-;30801:34;30797:1;30789:6;30785:14;30778:58;30870:10;30865:2;30857:6;30853:15;30846:35;30661:227;:::o;30894:366::-;31036:3;31057:67;31121:2;31116:3;31057:67;:::i;:::-;31050:74;;31133:93;31222:3;31133:93;:::i;:::-;31251:2;31246:3;31242:12;31235:19;;30894:366;;;:::o;31266:419::-;31432:4;31470:2;31459:9;31455:18;31447:26;;31519:9;31513:4;31509:20;31505:1;31494:9;31490:17;31483:47;31547:131;31673:4;31547:131;:::i;:::-;31539:139;;31266:419;;;:::o;31691:751::-;31914:4;31952:3;31941:9;31937:19;31929:27;;31966:71;32034:1;32023:9;32019:17;32010:6;31966:71;:::i;:::-;32047:72;32115:2;32104:9;32100:18;32091:6;32047:72;:::i;:::-;32129;32197:2;32186:9;32182:18;32173:6;32129:72;:::i;:::-;32211;32279:2;32268:9;32264:18;32255:6;32211:72;:::i;:::-;32331:9;32325:4;32321:20;32315:3;32304:9;32300:19;32293:49;32359:76;32430:4;32421:6;32359:76;:::i;:::-;32351:84;;31691:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1906400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"totalSupply(uint256)": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1117,
									"end": 1181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1168,
									"end": 1172,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1173,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1160,
									"end": 1173,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1173,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1160,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1117,
									"end": 1181,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8403,
									"end": 8491,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8403,
									"end": 8491,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8477,
									"end": 8483,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8474,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8470,
									"end": 8483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8470,
									"end": 8483,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8403,
									"end": 8491,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8403,
									"end": 8491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2763,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2806,
									"end": 2808,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2803,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2792,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2804,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 2809,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2812,
									"end": 2891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2953,
									"end": 2954,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2951,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2938,
									"end": 2955,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 2956,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2975,
									"end": 2981,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2972,
									"end": 3002,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3005,
									"end": 3084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3176,
									"end": 3183,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3167,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3156,
									"end": 3165,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3152,
									"end": 3174,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3110,
									"end": 3184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2903,
									"end": 3194,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3259,
									"end": 3265,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3298,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3287,
									"end": 3299,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3437,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3438,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3461,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3454,
									"end": 3455,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3447,
									"end": 3462,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3481,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3478,
									"end": 3479,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3486,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3548,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3573,
									"end": 3577,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3569,
									"end": 3581,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3620,
									"end": 3624,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3647,
									"end": 3665,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 3695,
									"end": 3701,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3691,
									"end": 3708,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3765,
									"end": 3767,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3757,
									"end": 3763,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3754,
									"end": 3768,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3734,
									"end": 3752,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3731,
									"end": 3769,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3784,
									"end": 3802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3873,
									"end": 3877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3896,
									"end": 3899,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3919,
									"end": 3922,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3916,
									"end": 3917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 3923,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3953,
									"end": 3957,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3940,
									"end": 3958,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4008,
									"end": 4014,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4055,
									"end": 4057,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4043,
									"end": 4048,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4039,
									"end": 4053,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4035,
									"end": 4058,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4114,
									"end": 4122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4164,
									"end": 4169,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4162,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4154,
									"end": 4170,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4290,
									"end": 4300,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4286,
									"end": 4304,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4355,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4344,
									"end": 4353,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4325,
									"end": 4422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4473,
									"end": 4481,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4471,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4443,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4511,
									"end": 4520,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4504,
									"end": 4509,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4500,
									"end": 4521,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4562,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4569,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4543,
									"end": 4548,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4570,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4619,
									"end": 4626,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4648,
									"end": 4653,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 4696,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4714,
									"end": 4719,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4781,
									"end": 4790,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4859,
									"end": 4864,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4841,
									"end": 4865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4832,
									"end": 4866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4814,
									"end": 4867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4922,
									"end": 4925,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5101,
									"end": 5108,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5070,
									"end": 5109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5204,
									"end": 5220,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5180,
									"end": 5221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5172,
									"end": 5178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5165,
									"end": 5169,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5159,
									"end": 5170,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 5131,
									"end": 5222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5118,
									"end": 5223,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5280,
									"end": 5283,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5391,
									"end": 5423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5482,
									"end": 5488,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5432,
									"end": 5497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5367,
									"end": 5503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5584,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5590,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5677,
									"end": 5678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5675,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5640,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5602,
									"end": 5615,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5804,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5797,
									"end": 5800,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5794,
									"end": 5805,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5868,
									"end": 5873,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 5836,
									"end": 5874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5938,
									"end": 5948,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5920,
									"end": 5949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5910,
									"end": 5918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5906,
									"end": 5950,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6103,
									"end": 6105,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6091,
									"end": 6101,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6088,
									"end": 6106,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6132,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6221,
									"end": 6224,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 6203,
									"end": 6225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6193,
									"end": 6201,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6176,
									"end": 6187,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6147,
									"end": 6227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6304,
									"end": 6312,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6348,
									"end": 6352,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6344,
									"end": 6360,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6417,
									"end": 6423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 6498,
									"end": 6499,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6494,
									"end": 6500,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6486,
									"end": 6491,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6483,
									"end": 6484,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 6479,
									"end": 6492,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6450,
									"end": 6501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6446,
									"end": 6502,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6525,
									"end": 6529,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6521,
									"end": 6536,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6424,
									"end": 6542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6623,
									"end": 6627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6794,
									"end": 6797,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6788,
									"end": 6792,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 6769,
									"end": 6798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6831,
									"end": 6834,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6828,
									"end": 6829,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6824,
									"end": 6835,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6818,
									"end": 6822,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6815,
									"end": 6836,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 6997,
									"end": 7000,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 6964,
									"end": 7001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7084,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7058,
									"end": 7064,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7055,
									"end": 7085,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 7088,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7158,
									"end": 7169,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 7132,
									"end": 7170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7277,
									"end": 7283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7269,
									"end": 7275,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7217,
									"end": 7284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7311,
									"end": 7312,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7367,
									"end": 7369,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7359,
									"end": 7365,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 7370,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7384,
									"end": 7385,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8058,
									"end": 8064,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8107,
									"end": 8116,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8102,
									"end": 8105,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8098,
									"end": 8117,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8092,
									"end": 8118,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8218,
									"end": 8224,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8211,
									"end": 8216,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 8158,
									"end": 8225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8145,
									"end": 8226,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8014,
									"end": 8236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7431,
									"end": 7435,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7427,
									"end": 7436,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7425,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7415,
									"end": 7437,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 7497,
									"end": 7501,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 7465,
									"end": 7502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7524,
									"end": 7525,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7552,
									"end": 7559,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7549,
									"end": 7550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7560,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7631,
									"end": 7640,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7626,
									"end": 7629,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7622,
									"end": 7641,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7616,
									"end": 7642,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7608,
									"end": 7614,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7601,
									"end": 7643,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7682,
									"end": 7683,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7674,
									"end": 7680,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7670,
									"end": 7684,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7729,
									"end": 7731,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7718,
									"end": 7727,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7714,
									"end": 7732,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7575,
									"end": 7579,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7580,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7774,
									"end": 7780,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7765,
									"end": 7772,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7762,
									"end": 7781,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7832,
									"end": 7841,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7827,
									"end": 7830,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7823,
									"end": 7842,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7817,
									"end": 7843,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 7917,
									"end": 7921,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7905,
									"end": 7922,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7894,
									"end": 7903,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 7875,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 7873,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7860,
									"end": 7924,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7782,
									"end": 7938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7984,
									"end": 7985,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7980,
									"end": 7981,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7972,
									"end": 7978,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7968,
									"end": 7982,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7964,
									"end": 7986,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 7962,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7951,
									"end": 7987,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 18301,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204252aed44bb6b3bd6d2eb5715b1a4fdd139aafbc74f82e1209555c2a68474b8564736f6c63430008110033",
									".code": [
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "BD85B039"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 18301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2230,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2230,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2230,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1253,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1253,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1253,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1974,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1974,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4179,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4179,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2626,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2626,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3223,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 10049,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10049,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 10049,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3456,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3456,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3456,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3696,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3696,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2351,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2336,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2336,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1392,
											"end": 1502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1392,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1392,
											"end": 1555,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1543,
											"end": 1554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1519,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1555,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1392,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2060,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2060,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4420,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4420,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4432,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4420,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4453,
											"end": 4457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4459,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4459,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4459,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4436,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4472,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4436,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4390,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4390,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4580,
											"end": 4584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4593,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4595,
											"end": 4602,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4608,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4557,
											"end": 4609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2832,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2816,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2816,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2967,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2945,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3020,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3027,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3078,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3091,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3068,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3098,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3068,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3049,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3029,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 3150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3337,
											"end": 3349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3318,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3370,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3318,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10110,
											"end": 10117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3615,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3579,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3912,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3912,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3912,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3924,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3904,
											"end": 3924,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3908,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3924,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3904,
											"end": 3924,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3924,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3904,
											"end": 3964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3945,
											"end": 3949,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3951,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3951,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 3963,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3951,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3928,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3928,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3904,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3882,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3882,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4075,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4079,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4093,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4049,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4094,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4049,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6640,
											"end": 6647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6654,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6618,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6618,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6734,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6718,
											"end": 6720,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6718,
											"end": 6734,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6718,
											"end": 6734,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6710,
											"end": 6776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6710,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6808,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6820,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6808,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6854,
											"end": 6862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6868,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 6877,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6879,
											"end": 6886,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 6892,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6833,
											"end": 6893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6893,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6833,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6933,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6940,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6962,
											"end": 6972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6975,
											"end": 6981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6962,
											"end": 6981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6962,
											"end": 6981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7020,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7022,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7013,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7013,
											"end": 7023,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7040,
											"end": 7059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7080,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7040,
											"end": 7081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7040,
											"end": 7081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7119,
											"end": 7125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7096,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7096,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7238,
											"end": 7249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7238,
											"end": 7258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7226,
											"end": 7228,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7258,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7301,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7304,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7288,
											"end": 7315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7288,
											"end": 7315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 7327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 7327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 7327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6942,
											"end": 6945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7376,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 7344,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7391,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7404,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 7424,
											"end": 7432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7434,
											"end": 7438,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7442,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7447,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7456,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7462,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7404,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 7404,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7404,
											"end": 7463,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 7404,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7512,
											"end": 7520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7530,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7535,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7537,
											"end": 7544,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7546,
											"end": 7550,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7476,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7551,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7476,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 7559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 14165,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 13834,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13989,
											"end": 13997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13980,
											"end": 13997,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 13997,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13980,
											"end": 13985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13980,
											"end": 13997,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 13997,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13980,
											"end": 13997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 13972,
											"end": 14043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 13972,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14092,
											"end": 14100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14072,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14054,
											"end": 14079,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14088,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14138,
											"end": 14146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14131,
											"end": 14136,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14148,
											"end": 14156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14116,
											"end": 14157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14116,
											"end": 14157,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 14165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 14165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 14165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 14165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5269,
											"end": 5271,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5269,
											"end": 5285,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5261,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5261,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5356,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5359,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5359,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5423,
											"end": 5425,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5405,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5405,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5405,
											"end": 5426,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5405,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5482,
											"end": 5488,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5464,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5502,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5523,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5533,
											"end": 5537,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5546,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5555,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5502,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5502,
											"end": 5562,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5502,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5609,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5615,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5635,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5635,
											"end": 5656,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5635,
											"end": 5656,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5627,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5627,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5775,
											"end": 5781,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5761,
											"end": 5772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5749,
											"end": 5751,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5752,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5758,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5781,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5830,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5803,
											"end": 5830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5877,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5871,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5887,
											"end": 5893,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5848,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5894,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5907,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5927,
											"end": 5935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5937,
											"end": 5941,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5959,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5907,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5907,
											"end": 5966,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5907,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6010,
											"end": 6018,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6024,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6046,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5979,
											"end": 6047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 6047,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5979,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 6055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15123,
											"end": 15344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16299,
											"end": 16519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17519,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 17519,
											"end": 17521,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17519,
											"end": 17532,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17519,
											"end": 17532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17519,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 17519,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17519,
											"end": 17534,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 17519,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17515,
											"end": 18085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17515,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 17515,
											"end": 18085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17572,
											"end": 17574,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17598,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17599,
											"end": 17607,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17609,
											"end": 17613,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17615,
											"end": 17618,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17620,
											"end": 17627,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17629,
											"end": 17633,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 17555,
											"end": 17634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 17555,
											"end": 17634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 17555,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 17551,
											"end": 18074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 17551,
											"end": 18074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17947,
											"end": 17953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 17940,
											"end": 17954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 17954,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 17996,
											"end": 18058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17996,
											"end": 18058,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 17551,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17728,
											"end": 17776,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17728,
											"end": 17776,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17728,
											"end": 17776,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17716,
											"end": 17776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17712,
											"end": 17871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 17712,
											"end": 17871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 17801,
											"end": 17851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17801,
											"end": 17851,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17712,
											"end": 17871,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 17712,
											"end": 17871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17635,
											"end": 17886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17515,
											"end": 18085,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 17515,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17279,
											"end": 18092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18100,
											"end": 18298,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 18100,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18166,
											"end": 18182,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18195,
											"end": 18217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18234,
											"end": 18235,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 18220,
											"end": 18236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18220,
											"end": 18236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18195,
											"end": 18236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18195,
											"end": 18236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18258,
											"end": 18265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18253,
											"end": 18254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 18247,
											"end": 18255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18285,
											"end": 18290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18278,
											"end": 18290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18278,
											"end": 18290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18278,
											"end": 18290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18100,
											"end": 18298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18100,
											"end": 18298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18100,
											"end": 18298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18100,
											"end": 18298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16742,
											"end": 16757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16742,
											"end": 16744,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16742,
											"end": 16755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16742,
											"end": 16755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16742,
											"end": 16755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 16742,
											"end": 16757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16742,
											"end": 16757,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16742,
											"end": 16757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16738,
											"end": 17264,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16738,
											"end": 17264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 16738,
											"end": 17264,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16795,
											"end": 16797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16778,
											"end": 16816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16816,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16817,
											"end": 16825,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16827,
											"end": 16831,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16833,
											"end": 16835,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16837,
											"end": 16843,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16845,
											"end": 16849,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16778,
											"end": 16850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16778,
											"end": 16850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16778,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 16774,
											"end": 17253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 16774,
											"end": 17253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17126,
											"end": 17132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 17119,
											"end": 17133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17119,
											"end": 17133,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 17175,
											"end": 17237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17175,
											"end": 17237,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16774,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16912,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16912,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16912,
											"end": 16955,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16900,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16896,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 16896,
											"end": 17050,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 16980,
											"end": 17030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16980,
											"end": 17030,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16896,
											"end": 17050,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 16896,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16851,
											"end": 17065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16738,
											"end": 17264,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 16738,
											"end": 17264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16527,
											"end": 17271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5138,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 5282,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5420,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5423,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5547,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5576,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5865,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 6215,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6199,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6315,
											"end": 6336,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6352,
											"end": 6368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 6464,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6603,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6700,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6765,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6566,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6908,
											"end": 6935,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 6939,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7081,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 7181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7298,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7483,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7521,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7736,
											"end": 7763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7893,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 8048,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8138,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8471,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8731,
											"end": 8737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8745,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8784,
											"end": 8793,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8775,
											"end": 8782,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8767,
											"end": 8800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 8803,
											"end": 8882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8993,
											"end": 9000,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 8948,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8938,
											"end": 9001,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8938,
											"end": 9001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8894,
											"end": 9011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9121,
											"end": 9128,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9097,
											"end": 9119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 9076,
											"end": 9129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9129,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9206,
											"end": 9208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9191,
											"end": 9209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9210,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9256,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9259,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 9434,
											"end": 9441,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9364,
											"end": 9442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9442,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9519,
											"end": 9521,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9523,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9542,
											"end": 9548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9539,
											"end": 9569,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9572,
											"end": 9651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9747,
											"end": 9754,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9723,
											"end": 9745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9677,
											"end": 9755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9667,
											"end": 9755,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9667,
											"end": 9755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9821,
											"end": 9830,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9804,
											"end": 9837,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9856,
											"end": 9862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9886,
											"end": 9965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 10045,
											"end": 10052,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10034,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9991,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 10053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 10053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9775,
											"end": 10063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10153,
											"end": 10157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10235,
											"end": 10241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10232,
											"end": 10262,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 10265,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10307,
											"end": 10313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10320,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10369,
											"end": 10373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10365,
											"end": 10380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10506,
											"end": 10511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10604,
											"end": 10610,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 10547,
											"end": 10611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10531,
											"end": 10612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10522,
											"end": 10612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10522,
											"end": 10612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10647,
											"end": 10668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10695,
											"end": 10699,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10688,
											"end": 10693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10677,
											"end": 10700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10677,
											"end": 10700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10748,
											"end": 10752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10746,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10753,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10780,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10781,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10796,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10920,
											"end": 10935,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11063,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 11032,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11020,
											"end": 11070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11097,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11090,
											"end": 11104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11083,
											"end": 11104,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11083,
											"end": 11104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10970,
											"end": 11114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 10958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11248,
											"end": 11254,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11244,
											"end": 11261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 11271,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11388,
											"end": 11394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11375,
											"end": 11395,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 11503,
											"end": 11506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11476,
											"end": 11493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 11413,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11637,
											"end": 11643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11694,
											"end": 11696,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11691,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11673,
											"end": 11680,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11697,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 11700,
											"end": 11779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11851,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11870,
											"end": 11876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11867,
											"end": 11897,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 11900,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12055,
											"end": 12064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 12005,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12083,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11791,
											"end": 12093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12162,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12145,
											"end": 12163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12132,
											"end": 12164,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 12191,
											"end": 12209,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12183,
											"end": 12189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12210,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12213,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 12388,
											"end": 12395,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12368,
											"end": 12377,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 12318,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12103,
											"end": 12406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12514,
											"end": 12526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12672,
											"end": 12678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12667,
											"end": 12670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12660,
											"end": 12679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12712,
											"end": 12716,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12811,
											"end": 12822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12811,
											"end": 12822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12844,
											"end": 12847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12840,
											"end": 12854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 12962,
											"end": 12967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 12944,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12939,
											"end": 12942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 12969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 13113,
											"end": 13116,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 13071,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13149,
											"end": 13153,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13144,
											"end": 13147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13434,
											"end": 13437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 13511,
											"end": 13516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 13463,
											"end": 13517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 13533,
											"end": 13619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 13693,
											"end": 13698,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 13643,
											"end": 13699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13722,
											"end": 13729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13753,
											"end": 13754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13757,
											"end": 13770,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13925,
											"end": 13928,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 13866,
											"end": 13929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13859,
											"end": 13929,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 13859,
											"end": 13929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 13952,
											"end": 14012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13942,
											"end": 14012,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13942,
											"end": 14012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13798,
											"end": 14022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13785,
											"end": 13786,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13742,
											"end": 13756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14038,
											"end": 14041,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14236,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14223,
											"end": 14232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14277,
											"end": 14281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14293,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14269,
											"end": 14270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14254,
											"end": 14271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14247,
											"end": 14294,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 14414,
											"end": 14418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14411,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 14311,
											"end": 14419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14303,
											"end": 14419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14303,
											"end": 14419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 14517,
											"end": 14522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 14502,
											"end": 14523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14492,
											"end": 14524,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14535,
											"end": 14536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14528,
											"end": 14540,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14597,
											"end": 14602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14635,
											"end": 14641,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14622,
											"end": 14642,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14675,
											"end": 14680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 14651,
											"end": 14681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14758,
											"end": 14764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14817,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14794,
											"end": 14801,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14818,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 14821,
											"end": 14900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 14942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 15011,
											"end": 15018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15000,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 15009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 14966,
											"end": 15019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14956,
											"end": 15019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14956,
											"end": 15019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14912,
											"end": 15029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15070,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15136,
											"end": 15143,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15125,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15112,
											"end": 15134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 15094,
											"end": 15144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15039,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15292,
											"end": 15294,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15280,
											"end": 15289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15271,
											"end": 15278,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15267,
											"end": 15290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15298,
											"end": 15377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 15488,
											"end": 15495,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15479,
											"end": 15485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 15477,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15464,
											"end": 15486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 15443,
											"end": 15496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15496,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15545,
											"end": 15547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15607,
											"end": 15613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15592,
											"end": 15614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 15571,
											"end": 15624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15751,
											"end": 15757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15759,
											"end": 15765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15783,
											"end": 15789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15835,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 15820,
											"end": 15829,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15811,
											"end": 15818,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15807,
											"end": 15830,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15839,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15959,
											"end": 15960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16029,
											"end": 16036,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16009,
											"end": 16018,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16005,
											"end": 16027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 15984,
											"end": 16037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16037,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 16047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16157,
											"end": 16164,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16137,
											"end": 16146,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 16112,
											"end": 16165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16165,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16214,
											"end": 16216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 16285,
											"end": 16292,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16265,
											"end": 16274,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 16240,
											"end": 16293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16293,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16185,
											"end": 16303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16413,
											"end": 16420,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16404,
											"end": 16410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16393,
											"end": 16402,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 16368,
											"end": 16421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16358,
											"end": 16421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16358,
											"end": 16421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16313,
											"end": 16431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16498,
											"end": 16501,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16483,
											"end": 16502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16503,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16522,
											"end": 16528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16519,
											"end": 16549,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 16552,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 16711,
											"end": 16718,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16702,
											"end": 16708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16691,
											"end": 16700,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 16657,
											"end": 16719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16441,
											"end": 16729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16971,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 16742,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16882,
											"end": 16916,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 16878,
											"end": 16879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16870,
											"end": 16876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16866,
											"end": 16880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16859,
											"end": 16917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16951,
											"end": 16963,
											"name": "PUSH",
											"source": 10,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 16946,
											"end": 16948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16938,
											"end": 16944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 16949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16927,
											"end": 16964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16977,
											"end": 17343,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 16977,
											"end": 17343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17119,
											"end": 17122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17140,
											"end": 17207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 17204,
											"end": 17206,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 17199,
											"end": 17202,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 17140,
											"end": 17207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17207,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 17140,
											"end": 17207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17133,
											"end": 17207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17133,
											"end": 17207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17216,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 17305,
											"end": 17308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17216,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 17216,
											"end": 17309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17216,
											"end": 17309,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 17216,
											"end": 17309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17336,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17329,
											"end": 17332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17325,
											"end": 17337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17318,
											"end": 17337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17318,
											"end": 17337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16977,
											"end": 17343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16977,
											"end": 17343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16977,
											"end": 17343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16977,
											"end": 17343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17768,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 17349,
											"end": 17768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17515,
											"end": 17519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17553,
											"end": 17555,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17542,
											"end": 17551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17538,
											"end": 17556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17530,
											"end": 17556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17530,
											"end": 17556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17602,
											"end": 17611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17596,
											"end": 17600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17592,
											"end": 17612,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17588,
											"end": 17589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17577,
											"end": 17586,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17630,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 17756,
											"end": 17760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17630,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 17630,
											"end": 17761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17630,
											"end": 17761,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 17630,
											"end": 17761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17622,
											"end": 17761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17622,
											"end": 17761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17768,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17774,
											"end": 17954,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 17774,
											"end": 17954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17822,
											"end": 17899,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17819,
											"end": 17820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17812,
											"end": 17900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17919,
											"end": 17923,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 17916,
											"end": 17917,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17909,
											"end": 17924,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17943,
											"end": 17947,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17940,
											"end": 17941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17933,
											"end": 17948,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18280,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 17960,
											"end": 18280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18004,
											"end": 18010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18041,
											"end": 18042,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 18035,
											"end": 18039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18031,
											"end": 18043,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18088,
											"end": 18089,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 18082,
											"end": 18086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18078,
											"end": 18090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18109,
											"end": 18127,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18099,
											"end": 18180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 18099,
											"end": 18180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18165,
											"end": 18169,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 18157,
											"end": 18163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18153,
											"end": 18170,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18143,
											"end": 18170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18143,
											"end": 18170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18099,
											"end": 18180,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 18099,
											"end": 18180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18227,
											"end": 18229,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18219,
											"end": 18225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18216,
											"end": 18230,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18196,
											"end": 18214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18193,
											"end": 18231,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 18190,
											"end": 18274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18246,
											"end": 18264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 18246,
											"end": 18264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 18246,
											"end": 18264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18246,
											"end": 18264,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 18246,
											"end": 18264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18274,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 18190,
											"end": 18274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18011,
											"end": 18280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 18280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18519,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 18286,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18426,
											"end": 18460,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 18422,
											"end": 18423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18414,
											"end": 18420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18410,
											"end": 18424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18403,
											"end": 18461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18495,
											"end": 18511,
											"name": "PUSH",
											"source": 10,
											"value": "6572206F7220617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 18490,
											"end": 18492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18482,
											"end": 18488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18478,
											"end": 18493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18471,
											"end": 18512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18525,
											"end": 18891,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 18525,
											"end": 18891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18667,
											"end": 18670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18688,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 18752,
											"end": 18754,
											"name": "PUSH",
											"source": 10,
											"value": "2E"
										},
										{
											"begin": 18747,
											"end": 18750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 18688,
											"end": 18755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18755,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 18688,
											"end": 18755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18681,
											"end": 18755,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18681,
											"end": 18755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18764,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 18853,
											"end": 18856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18764,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 18764,
											"end": 18857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18764,
											"end": 18857,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 18764,
											"end": 18857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18882,
											"end": 18884,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18877,
											"end": 18880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 18885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18866,
											"end": 18885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18866,
											"end": 18885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18525,
											"end": 18891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18525,
											"end": 18891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18525,
											"end": 18891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18525,
											"end": 18891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 19316,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 18897,
											"end": 19316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19063,
											"end": 19067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19090,
											"end": 19099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19086,
											"end": 19104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19078,
											"end": 19104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19078,
											"end": 19104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19150,
											"end": 19159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19144,
											"end": 19148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19140,
											"end": 19160,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19136,
											"end": 19137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19125,
											"end": 19134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19121,
											"end": 19138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19114,
											"end": 19161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19178,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 19304,
											"end": 19308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19178,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 19178,
											"end": 19309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19178,
											"end": 19309,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 19178,
											"end": 19309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 19316,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 19316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 19316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 19316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19550,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 19322,
											"end": 19550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19462,
											"end": 19496,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19458,
											"end": 19459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19450,
											"end": 19456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19446,
											"end": 19460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19439,
											"end": 19497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19531,
											"end": 19542,
											"name": "PUSH",
											"source": 10,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19526,
											"end": 19528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19518,
											"end": 19524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19514,
											"end": 19529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19507,
											"end": 19543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19922,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 19556,
											"end": 19922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19698,
											"end": 19701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19719,
											"end": 19786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 19783,
											"end": 19785,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 19778,
											"end": 19781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 19719,
											"end": 19786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19786,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 19719,
											"end": 19786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19712,
											"end": 19786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19712,
											"end": 19786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19795,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 19884,
											"end": 19887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19795,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 19795,
											"end": 19888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19795,
											"end": 19888,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 19795,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19913,
											"end": 19915,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19908,
											"end": 19911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19904,
											"end": 19916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19897,
											"end": 19916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 20347,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 19928,
											"end": 20347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20132,
											"end": 20134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20121,
											"end": 20130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20117,
											"end": 20135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20109,
											"end": 20135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20109,
											"end": 20135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20181,
											"end": 20190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20175,
											"end": 20179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20171,
											"end": 20191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20167,
											"end": 20168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20156,
											"end": 20165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20152,
											"end": 20169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20145,
											"end": 20192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20209,
											"end": 20340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 20335,
											"end": 20339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20209,
											"end": 20340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 20209,
											"end": 20340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20209,
											"end": 20340,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 20209,
											"end": 20340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20201,
											"end": 20340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20201,
											"end": 20340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 20347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 20347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 20347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 20347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20353,
											"end": 20533,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 20353,
											"end": 20533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20401,
											"end": 20478,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20398,
											"end": 20399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20391,
											"end": 20479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20498,
											"end": 20502,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 20495,
											"end": 20496,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20488,
											"end": 20503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20522,
											"end": 20526,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20519,
											"end": 20520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20512,
											"end": 20527,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20539,
											"end": 20719,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 20539,
											"end": 20719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20664,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20584,
											"end": 20585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20577,
											"end": 20665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20684,
											"end": 20688,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 20681,
											"end": 20682,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20674,
											"end": 20689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20712,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20705,
											"end": 20706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20698,
											"end": 20713,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20725,
											"end": 20958,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 20725,
											"end": 20958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20764,
											"end": 20767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20787,
											"end": 20811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 20805,
											"end": 20810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 20787,
											"end": 20811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20811,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 20787,
											"end": 20811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20778,
											"end": 20811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20778,
											"end": 20811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20833,
											"end": 20899,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20826,
											"end": 20831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20823,
											"end": 20900,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20820,
											"end": 20923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 20820,
											"end": 20923,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20903,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 20903,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 20903,
											"end": 20921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20903,
											"end": 20921,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 20903,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20820,
											"end": 20923,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 20820,
											"end": 20923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20950,
											"end": 20951,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20943,
											"end": 20948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20939,
											"end": 20952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20932,
											"end": 20952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20932,
											"end": 20952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20725,
											"end": 20958,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20725,
											"end": 20958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20725,
											"end": 20958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20725,
											"end": 20958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21191,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 20964,
											"end": 21191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21104,
											"end": 21138,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 21100,
											"end": 21101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21092,
											"end": 21098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21088,
											"end": 21102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21081,
											"end": 21139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21173,
											"end": 21183,
											"name": "PUSH",
											"source": 10,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21168,
											"end": 21170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21160,
											"end": 21166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21156,
											"end": 21171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21149,
											"end": 21184,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 21191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21563,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 21197,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21339,
											"end": 21342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21360,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 21424,
											"end": 21426,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 21419,
											"end": 21422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21360,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 21360,
											"end": 21427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21360,
											"end": 21427,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 21360,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21436,
											"end": 21529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 21525,
											"end": 21528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21436,
											"end": 21529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 21436,
											"end": 21529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21436,
											"end": 21529,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 21436,
											"end": 21529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21554,
											"end": 21556,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21549,
											"end": 21552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21545,
											"end": 21557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21538,
											"end": 21557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21569,
											"end": 21988,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 21569,
											"end": 21988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21735,
											"end": 21739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21773,
											"end": 21775,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21762,
											"end": 21771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21750,
											"end": 21776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21750,
											"end": 21776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21822,
											"end": 21831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21816,
											"end": 21820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21812,
											"end": 21832,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21808,
											"end": 21809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21797,
											"end": 21806,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21793,
											"end": 21810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21786,
											"end": 21833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21850,
											"end": 21981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 21976,
											"end": 21980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21850,
											"end": 21981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 21850,
											"end": 21981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21850,
											"end": 21981,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 21850,
											"end": 21981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21842,
											"end": 21981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21842,
											"end": 21981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21569,
											"end": 21988,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21569,
											"end": 21988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21569,
											"end": 21988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21569,
											"end": 21988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21994,
											"end": 22218,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 21994,
											"end": 22218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22134,
											"end": 22168,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 22130,
											"end": 22131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22122,
											"end": 22128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22118,
											"end": 22132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22111,
											"end": 22169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22203,
											"end": 22210,
											"name": "PUSH",
											"source": 10,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22198,
											"end": 22200,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22190,
											"end": 22196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22186,
											"end": 22201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22179,
											"end": 22211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21994,
											"end": 22218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21994,
											"end": 22218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22590,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 22224,
											"end": 22590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22366,
											"end": 22369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22387,
											"end": 22454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 22451,
											"end": 22453,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 22446,
											"end": 22449,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22387,
											"end": 22454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 22387,
											"end": 22454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22387,
											"end": 22454,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 22387,
											"end": 22454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22380,
											"end": 22454,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22380,
											"end": 22454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22463,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 22552,
											"end": 22555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22463,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 22463,
											"end": 22556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22463,
											"end": 22556,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 22463,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22581,
											"end": 22583,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22576,
											"end": 22579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22572,
											"end": 22584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22565,
											"end": 22584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22565,
											"end": 22584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22590,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22596,
											"end": 23015,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 22596,
											"end": 23015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22762,
											"end": 22766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22800,
											"end": 22802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22789,
											"end": 22798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22785,
											"end": 22803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22777,
											"end": 22803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22777,
											"end": 22803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22849,
											"end": 22858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22843,
											"end": 22847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22839,
											"end": 22859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22835,
											"end": 22836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22824,
											"end": 22833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22820,
											"end": 22837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22813,
											"end": 22860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22877,
											"end": 23008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 23003,
											"end": 23007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22877,
											"end": 23008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 22877,
											"end": 23008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22877,
											"end": 23008,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 22877,
											"end": 23008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22869,
											"end": 23008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22869,
											"end": 23008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22596,
											"end": 23015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22596,
											"end": 23015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22596,
											"end": 23015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22596,
											"end": 23015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23250,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 23021,
											"end": 23250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23161,
											"end": 23195,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 23157,
											"end": 23158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23149,
											"end": 23155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23145,
											"end": 23159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23138,
											"end": 23196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23230,
											"end": 23242,
											"name": "PUSH",
											"source": 10,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 23225,
											"end": 23227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23217,
											"end": 23223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23213,
											"end": 23228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23206,
											"end": 23243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23256,
											"end": 23622,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 23256,
											"end": 23622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23398,
											"end": 23401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23419,
											"end": 23486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 23483,
											"end": 23485,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 23478,
											"end": 23481,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23419,
											"end": 23486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 23419,
											"end": 23486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23419,
											"end": 23486,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 23419,
											"end": 23486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23412,
											"end": 23486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23412,
											"end": 23486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 23495,
											"end": 23588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23588,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 23495,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23613,
											"end": 23615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23608,
											"end": 23611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23604,
											"end": 23616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23597,
											"end": 23616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23597,
											"end": 23616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23256,
											"end": 23622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23256,
											"end": 23622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23256,
											"end": 23622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23256,
											"end": 23622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 24047,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 23628,
											"end": 24047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23794,
											"end": 23798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23832,
											"end": 23834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23821,
											"end": 23830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23817,
											"end": 23835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23809,
											"end": 23835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23809,
											"end": 23835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23881,
											"end": 23890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23875,
											"end": 23879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23871,
											"end": 23891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23867,
											"end": 23868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23856,
											"end": 23865,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23852,
											"end": 23869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23845,
											"end": 23892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23909,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 24035,
											"end": 24039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23909,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 23909,
											"end": 24040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23909,
											"end": 24040,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 23909,
											"end": 24040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23901,
											"end": 24040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23901,
											"end": 24040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 24047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 24047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 24047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 24047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24053,
											"end": 24244,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 24053,
											"end": 24244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24093,
											"end": 24096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24112,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 24130,
											"end": 24131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24112,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 24112,
											"end": 24132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24112,
											"end": 24132,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 24112,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24107,
											"end": 24132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24107,
											"end": 24132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24146,
											"end": 24166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 24164,
											"end": 24165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24146,
											"end": 24166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 24146,
											"end": 24166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24146,
											"end": 24166,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 24146,
											"end": 24166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24141,
											"end": 24166,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24141,
											"end": 24166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24189,
											"end": 24190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24186,
											"end": 24187,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24182,
											"end": 24191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24175,
											"end": 24191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24175,
											"end": 24191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24210,
											"end": 24213,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24207,
											"end": 24208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24204,
											"end": 24214,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24201,
											"end": 24237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24201,
											"end": 24237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 24201,
											"end": 24237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24217,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 24217,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 24217,
											"end": 24235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24217,
											"end": 24235,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 24217,
											"end": 24235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24201,
											"end": 24237,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 24201,
											"end": 24237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24053,
											"end": 24244,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24053,
											"end": 24244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24053,
											"end": 24244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24053,
											"end": 24244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24053,
											"end": 24244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24471,
											"end": 24475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24509,
											"end": 24511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24494,
											"end": 24512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24486,
											"end": 24512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24486,
											"end": 24512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24558,
											"end": 24567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24548,
											"end": 24568,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24544,
											"end": 24545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24533,
											"end": 24542,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24529,
											"end": 24546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24522,
											"end": 24569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24586,
											"end": 24694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 24689,
											"end": 24693,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24680,
											"end": 24686,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24586,
											"end": 24694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 24586,
											"end": 24694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24586,
											"end": 24694,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 24586,
											"end": 24694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24578,
											"end": 24694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24578,
											"end": 24694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24741,
											"end": 24750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24735,
											"end": 24739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24731,
											"end": 24751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24726,
											"end": 24728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24715,
											"end": 24724,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24711,
											"end": 24729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24704,
											"end": 24752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24769,
											"end": 24877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 24872,
											"end": 24876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24863,
											"end": 24869,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24769,
											"end": 24877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 24769,
											"end": 24877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24769,
											"end": 24877,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 24769,
											"end": 24877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24761,
											"end": 24877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24761,
											"end": 24877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24250,
											"end": 24884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24890,
											"end": 25118,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 24890,
											"end": 25118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25030,
											"end": 25064,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 25026,
											"end": 25027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25018,
											"end": 25024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25014,
											"end": 25028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25007,
											"end": 25065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25099,
											"end": 25110,
											"name": "PUSH",
											"source": 10,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25094,
											"end": 25096,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25086,
											"end": 25092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25082,
											"end": 25097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25075,
											"end": 25111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24890,
											"end": 25118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24890,
											"end": 25118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25490,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 25124,
											"end": 25490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25266,
											"end": 25269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25287,
											"end": 25354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 25351,
											"end": 25353,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 25346,
											"end": 25349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25287,
											"end": 25354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 25287,
											"end": 25354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25287,
											"end": 25354,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 25287,
											"end": 25354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25280,
											"end": 25354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25280,
											"end": 25354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25363,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 25452,
											"end": 25455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25363,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 25363,
											"end": 25456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25363,
											"end": 25456,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 25363,
											"end": 25456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25481,
											"end": 25483,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25476,
											"end": 25479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25472,
											"end": 25484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25465,
											"end": 25484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25465,
											"end": 25484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25496,
											"end": 25915,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 25496,
											"end": 25915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25662,
											"end": 25666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25700,
											"end": 25702,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25689,
											"end": 25698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25685,
											"end": 25703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25677,
											"end": 25703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25677,
											"end": 25703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25749,
											"end": 25758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25743,
											"end": 25747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25739,
											"end": 25759,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25735,
											"end": 25736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25724,
											"end": 25733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25720,
											"end": 25737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25713,
											"end": 25760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25777,
											"end": 25908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 25903,
											"end": 25907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25777,
											"end": 25908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 25777,
											"end": 25908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25777,
											"end": 25908,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 25777,
											"end": 25908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25769,
											"end": 25908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25769,
											"end": 25908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25496,
											"end": 25915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25496,
											"end": 25915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25496,
											"end": 25915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25496,
											"end": 25915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26042,
											"end": 26046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26080,
											"end": 26082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 26069,
											"end": 26078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26065,
											"end": 26083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26057,
											"end": 26083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26057,
											"end": 26083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 26161,
											"end": 26162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26150,
											"end": 26159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26146,
											"end": 26163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26137,
											"end": 26143,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 26093,
											"end": 26164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26164,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 26093,
											"end": 26164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26174,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 26242,
											"end": 26244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26231,
											"end": 26240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26227,
											"end": 26245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26218,
											"end": 26224,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26174,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 26174,
											"end": 26246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26174,
											"end": 26246,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 26174,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25921,
											"end": 26253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26259,
											"end": 26377,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 26259,
											"end": 26377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26346,
											"end": 26370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 26364,
											"end": 26369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26346,
											"end": 26370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 26346,
											"end": 26370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26346,
											"end": 26370,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 26346,
											"end": 26370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26341,
											"end": 26344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26334,
											"end": 26371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26259,
											"end": 26377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26259,
											"end": 26377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26259,
											"end": 26377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26383,
											"end": 26481,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 26383,
											"end": 26481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26434,
											"end": 26440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26468,
											"end": 26473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26462,
											"end": 26474,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26452,
											"end": 26474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26452,
											"end": 26474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26383,
											"end": 26481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26383,
											"end": 26481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26383,
											"end": 26481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26383,
											"end": 26481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26655,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 26487,
											"end": 26655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26570,
											"end": 26581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26604,
											"end": 26610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26599,
											"end": 26602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26592,
											"end": 26611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26644,
											"end": 26648,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26639,
											"end": 26642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26635,
											"end": 26649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26620,
											"end": 26649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26620,
											"end": 26649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26655,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26655,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 27034,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 26661,
											"end": 27034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26747,
											"end": 26750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26775,
											"end": 26813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 26807,
											"end": 26812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26775,
											"end": 26813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 26775,
											"end": 26813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26775,
											"end": 26813,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 26775,
											"end": 26813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26829,
											"end": 26899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 26892,
											"end": 26898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26887,
											"end": 26890,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26829,
											"end": 26899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 26829,
											"end": 26899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26829,
											"end": 26899,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 26829,
											"end": 26899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26822,
											"end": 26899,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26822,
											"end": 26899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26908,
											"end": 26973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 26966,
											"end": 26972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26961,
											"end": 26964,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26954,
											"end": 26958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26947,
											"end": 26952,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 26943,
											"end": 26959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26908,
											"end": 26973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 26908,
											"end": 26973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26908,
											"end": 26973,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 26908,
											"end": 26973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26998,
											"end": 27027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 27020,
											"end": 27026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26998,
											"end": 27027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 26998,
											"end": 27027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26998,
											"end": 27027,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 26998,
											"end": 27027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26993,
											"end": 26996,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26989,
											"end": 27028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26982,
											"end": 27028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26982,
											"end": 27028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26751,
											"end": 27034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 27034,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 27034,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 27034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 27034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26661,
											"end": 27034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27363,
											"end": 27367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27401,
											"end": 27404,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 27390,
											"end": 27399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27386,
											"end": 27405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27378,
											"end": 27405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27378,
											"end": 27405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27415,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 27483,
											"end": 27484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27472,
											"end": 27481,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27468,
											"end": 27485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27459,
											"end": 27465,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 27415,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 27415,
											"end": 27486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27415,
											"end": 27486,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 27415,
											"end": 27486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27496,
											"end": 27568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 27564,
											"end": 27566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27553,
											"end": 27562,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27549,
											"end": 27567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27540,
											"end": 27546,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 27496,
											"end": 27568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 27496,
											"end": 27568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27496,
											"end": 27568,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 27496,
											"end": 27568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27615,
											"end": 27624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27609,
											"end": 27613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27605,
											"end": 27625,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27600,
											"end": 27602,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 27589,
											"end": 27598,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27585,
											"end": 27603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27578,
											"end": 27626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27643,
											"end": 27751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 27746,
											"end": 27750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27737,
											"end": 27743,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 27643,
											"end": 27751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 27643,
											"end": 27751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27643,
											"end": 27751,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 27643,
											"end": 27751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27635,
											"end": 27751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27635,
											"end": 27751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27798,
											"end": 27807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27792,
											"end": 27796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27788,
											"end": 27808,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27783,
											"end": 27785,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 27772,
											"end": 27781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27768,
											"end": 27786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27761,
											"end": 27809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27826,
											"end": 27934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 27929,
											"end": 27933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27920,
											"end": 27926,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27826,
											"end": 27934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 27826,
											"end": 27934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27826,
											"end": 27934,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 27826,
											"end": 27934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 27934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 27934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27982,
											"end": 27991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27976,
											"end": 27980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27972,
											"end": 27992,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27966,
											"end": 27969,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 27955,
											"end": 27964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27951,
											"end": 27970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27944,
											"end": 27993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28010,
											"end": 28086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 28081,
											"end": 28085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28072,
											"end": 28078,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28010,
											"end": 28086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 28010,
											"end": 28086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28010,
											"end": 28086,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 28010,
											"end": 28086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28002,
											"end": 28086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28002,
											"end": 28086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27040,
											"end": 28093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28240,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 28099,
											"end": 28240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28155,
											"end": 28160,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28186,
											"end": 28192,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28180,
											"end": 28193,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 28171,
											"end": 28193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28171,
											"end": 28193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28202,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 28228,
											"end": 28233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28202,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 28202,
											"end": 28234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28202,
											"end": 28234,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 28202,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28240,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28595,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 28246,
											"end": 28595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28315,
											"end": 28321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28364,
											"end": 28366,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28352,
											"end": 28361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28343,
											"end": 28350,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28339,
											"end": 28362,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28335,
											"end": 28367,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 28332,
											"end": 28451,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 28332,
											"end": 28451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 28332,
											"end": 28451,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28370,
											"end": 28449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 28370,
											"end": 28449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 28370,
											"end": 28449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28370,
											"end": 28449,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 28370,
											"end": 28449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28332,
											"end": 28451,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 28332,
											"end": 28451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28490,
											"end": 28491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28515,
											"end": 28578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 28570,
											"end": 28577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28561,
											"end": 28567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28550,
											"end": 28559,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28546,
											"end": 28568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28515,
											"end": 28578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 28515,
											"end": 28578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28515,
											"end": 28578,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 28515,
											"end": 28578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28505,
											"end": 28578,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28505,
											"end": 28578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28461,
											"end": 28588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28595,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28601,
											"end": 28707,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 28601,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28645,
											"end": 28653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28694,
											"end": 28699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28689,
											"end": 28692,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 28685,
											"end": 28700,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 28664,
											"end": 28700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28664,
											"end": 28700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28601,
											"end": 28707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28601,
											"end": 28707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28601,
											"end": 28707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28601,
											"end": 28707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28713,
											"end": 28896,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 28713,
											"end": 28896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28748,
											"end": 28751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28786,
											"end": 28787,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 28768,
											"end": 28784,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 28765,
											"end": 28788,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 28762,
											"end": 28890,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 28762,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 28762,
											"end": 28890,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28824,
											"end": 28825,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 28821,
											"end": 28822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28818,
											"end": 28819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 28803,
											"end": 28826,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 28846,
											"end": 28880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 28877,
											"end": 28878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28871,
											"end": 28879,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 28846,
											"end": 28880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 28846,
											"end": 28880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28846,
											"end": 28880,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 28846,
											"end": 28880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28839,
											"end": 28880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28839,
											"end": 28880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28762,
											"end": 28890,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 28762,
											"end": 28890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28713,
											"end": 28896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28713,
											"end": 28896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28902,
											"end": 29613,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 28902,
											"end": 29613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28941,
											"end": 28944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28979,
											"end": 28983,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 28961,
											"end": 28977,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 28958,
											"end": 28984,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 28987,
											"end": 28992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 28955,
											"end": 28994,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29016,
											"end": 29036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 29016,
											"end": 29036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 29016,
											"end": 29036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29016,
											"end": 29036,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 29016,
											"end": 29036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29091,
											"end": 29092,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 29073,
											"end": 29089,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 29069,
											"end": 29093,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29066,
											"end": 29067,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 29060,
											"end": 29064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29045,
											"end": 29094,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 29124,
											"end": 29128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29118,
											"end": 29129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 29223,
											"end": 29239,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 29216,
											"end": 29220,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 29208,
											"end": 29214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29204,
											"end": 29221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29201,
											"end": 29240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 29168,
											"end": 29186,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29160,
											"end": 29166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29157,
											"end": 29187,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 29141,
											"end": 29254,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 29138,
											"end": 29284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29138,
											"end": 29284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 29138,
											"end": 29284,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29269,
											"end": 29274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29269,
											"end": 29274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29269,
											"end": 29274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 29269,
											"end": 29274,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29138,
											"end": 29284,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 29138,
											"end": 29284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29315,
											"end": 29321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29309,
											"end": 29313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29305,
											"end": 29322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29351,
											"end": 29354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29345,
											"end": 29355,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 29378,
											"end": 29396,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29370,
											"end": 29376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29367,
											"end": 29397,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 29364,
											"end": 29407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29364,
											"end": 29407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 29364,
											"end": 29407,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29400,
											"end": 29405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29400,
											"end": 29405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29400,
											"end": 29405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29400,
											"end": 29405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29400,
											"end": 29405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 29400,
											"end": 29405,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29364,
											"end": 29407,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 29364,
											"end": 29407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29448,
											"end": 29454,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29441,
											"end": 29445,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29436,
											"end": 29439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29432,
											"end": 29446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29428,
											"end": 29455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29507,
											"end": 29508,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 29489,
											"end": 29505,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 29485,
											"end": 29509,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29479,
											"end": 29483,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29475,
											"end": 29510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29470,
											"end": 29473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29467,
											"end": 29511,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 29464,
											"end": 29521,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29464,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 29464,
											"end": 29521,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29464,
											"end": 29521,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 29464,
											"end": 29521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29531,
											"end": 29588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 29579,
											"end": 29585,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29573,
											"end": 29577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29569,
											"end": 29586,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29561,
											"end": 29567,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29557,
											"end": 29587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29551,
											"end": 29555,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 29531,
											"end": 29588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 29531,
											"end": 29588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29531,
											"end": 29588,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 29531,
											"end": 29588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29604,
											"end": 29607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29597,
											"end": 29607,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 29597,
											"end": 29607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28945,
											"end": 29613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28945,
											"end": 29613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28945,
											"end": 29613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28945,
											"end": 29613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28945,
											"end": 29613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28902,
											"end": 29613,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 28902,
											"end": 29613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28902,
											"end": 29613,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28902,
											"end": 29613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29619,
											"end": 29858,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 29619,
											"end": 29858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29759,
											"end": 29793,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 29755,
											"end": 29756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29747,
											"end": 29753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29743,
											"end": 29757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29736,
											"end": 29794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29828,
											"end": 29850,
											"name": "PUSH",
											"source": 10,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 29823,
											"end": 29825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29815,
											"end": 29821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29804,
											"end": 29851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29619,
											"end": 29858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29619,
											"end": 29858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29864,
											"end": 30230,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 29864,
											"end": 30230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30006,
											"end": 30009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30027,
											"end": 30094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 30091,
											"end": 30093,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 30086,
											"end": 30089,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30027,
											"end": 30094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 30027,
											"end": 30094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30027,
											"end": 30094,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 30027,
											"end": 30094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30020,
											"end": 30094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30020,
											"end": 30094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30103,
											"end": 30196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 30192,
											"end": 30195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30103,
											"end": 30196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 30103,
											"end": 30196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30103,
											"end": 30196,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 30103,
											"end": 30196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30221,
											"end": 30223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 30216,
											"end": 30219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30212,
											"end": 30224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30205,
											"end": 30224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30205,
											"end": 30224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29864,
											"end": 30230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29864,
											"end": 30230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29864,
											"end": 30230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29864,
											"end": 30230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30236,
											"end": 30655,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 30236,
											"end": 30655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30402,
											"end": 30406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30440,
											"end": 30442,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30429,
											"end": 30438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30425,
											"end": 30443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30417,
											"end": 30443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30417,
											"end": 30443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30489,
											"end": 30498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30483,
											"end": 30487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30479,
											"end": 30499,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30475,
											"end": 30476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30464,
											"end": 30473,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30460,
											"end": 30477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30453,
											"end": 30500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30517,
											"end": 30648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 30643,
											"end": 30647,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30517,
											"end": 30648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 30517,
											"end": 30648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30517,
											"end": 30648,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 30517,
											"end": 30648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30509,
											"end": 30648,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30509,
											"end": 30648,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30236,
											"end": 30655,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30236,
											"end": 30655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30236,
											"end": 30655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30236,
											"end": 30655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30661,
											"end": 30888,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 30661,
											"end": 30888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30801,
											"end": 30835,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 30797,
											"end": 30798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30789,
											"end": 30795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30785,
											"end": 30799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30778,
											"end": 30836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30870,
											"end": 30880,
											"name": "PUSH",
											"source": 10,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30865,
											"end": 30867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30857,
											"end": 30863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30853,
											"end": 30868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30846,
											"end": 30881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30661,
											"end": 30888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30661,
											"end": 30888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30894,
											"end": 31260,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 30894,
											"end": 31260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31036,
											"end": 31039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31057,
											"end": 31124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 31121,
											"end": 31123,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 31116,
											"end": 31119,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31057,
											"end": 31124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 31057,
											"end": 31124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31057,
											"end": 31124,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 31057,
											"end": 31124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31050,
											"end": 31124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31050,
											"end": 31124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31133,
											"end": 31226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 31222,
											"end": 31225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31133,
											"end": 31226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 31133,
											"end": 31226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31133,
											"end": 31226,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 31133,
											"end": 31226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31251,
											"end": 31253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31246,
											"end": 31249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31242,
											"end": 31254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31235,
											"end": 31254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31235,
											"end": 31254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30894,
											"end": 31260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30894,
											"end": 31260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30894,
											"end": 31260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30894,
											"end": 31260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31266,
											"end": 31685,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 31266,
											"end": 31685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31432,
											"end": 31436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31470,
											"end": 31472,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31459,
											"end": 31468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31455,
											"end": 31473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31447,
											"end": 31473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31447,
											"end": 31473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31519,
											"end": 31528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31513,
											"end": 31517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 31505,
											"end": 31506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31494,
											"end": 31503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31490,
											"end": 31507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31483,
											"end": 31530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31547,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 31673,
											"end": 31677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31547,
											"end": 31678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 31547,
											"end": 31678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31547,
											"end": 31678,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 31547,
											"end": 31678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31539,
											"end": 31678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31539,
											"end": 31678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31266,
											"end": 31685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31266,
											"end": 31685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31266,
											"end": 31685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31266,
											"end": 31685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31914,
											"end": 31918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31952,
											"end": 31955,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 31941,
											"end": 31950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31937,
											"end": 31956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31929,
											"end": 31956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31929,
											"end": 31956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31966,
											"end": 32037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 32034,
											"end": 32035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32023,
											"end": 32032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32019,
											"end": 32036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32010,
											"end": 32016,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 31966,
											"end": 32037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 31966,
											"end": 32037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31966,
											"end": 32037,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 31966,
											"end": 32037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32047,
											"end": 32119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 32115,
											"end": 32117,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 32104,
											"end": 32113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32100,
											"end": 32118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32091,
											"end": 32097,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 32047,
											"end": 32119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 32047,
											"end": 32119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32047,
											"end": 32119,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 32047,
											"end": 32119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32129,
											"end": 32201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 32197,
											"end": 32199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 32186,
											"end": 32195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32182,
											"end": 32200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32173,
											"end": 32179,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 32129,
											"end": 32201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 32129,
											"end": 32201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32129,
											"end": 32201,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 32129,
											"end": 32201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32211,
											"end": 32283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 32279,
											"end": 32281,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 32268,
											"end": 32277,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32264,
											"end": 32282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32255,
											"end": 32261,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 32211,
											"end": 32283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 32211,
											"end": 32283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32211,
											"end": 32283,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 32211,
											"end": 32283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32331,
											"end": 32340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32325,
											"end": 32329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32321,
											"end": 32341,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 32315,
											"end": 32318,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 32304,
											"end": 32313,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32300,
											"end": 32319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32293,
											"end": 32342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 32359,
											"end": 32435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 32430,
											"end": 32434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32421,
											"end": 32427,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 32359,
											"end": 32435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 32359,
											"end": 32435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32359,
											"end": 32435,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 32359,
											"end": 32435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32351,
											"end": 32435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32351,
											"end": 32435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31691,
											"end": 32442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"creators\":{\"details\":\"Creates `amount` tokens of token type `id`, and assigns them to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol\":{\"keccak256\":\"0xe715d1167fccf3435838655706265fdbae6708bc791675e537e2a80db443b483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e503677dccd9bcdac57e3a1a84a810399944cb580726aa238c76246f559109cd\",\"dweb:/ipfs/QmbyXx2FFz14Z1ro4XtXFUXejfeAE4hTAocsmxxQJXacVm\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol\":{\"keccak256\":\"0xe2710470fccbc1eb4837fc83dea0e1498a0271b7f09dc5d705ab1ccd2562451c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://004c9a7564bee5a5e700e4fa636c18be0743fe1970a1fd38125b126303f81e62\",\"dweb:/ipfs/QmUAqtN6BzwpEByAEk21iJ3Az4jXjNqxzgp2HHMEvWbyzq\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":{\"keccak256\":\"0x847fd3fb0bb6946e86e0da7060f08df5961ec874b4f93de2438b835b92edfd08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b85ed4a7ffd8067845fc390c896e4f49f78d4de1be291b76eda465f941e4e0c\",\"dweb:/ipfs/QmbvCXfbTtEq4C1hpVjHGWCUVC5KdZHTCADWDwLYrYJZ88\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol\":{\"keccak256\":\"0x44339d29cad1612f7a3431a3d8d651dbdda5b11b8f9178b33760d90bbe69bf98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd79dfe826c2a9f88f87cff2ab4040da2949af0ebd1cd3e7b9f422114edeaad9\",\"dweb:/ipfs/QmXeJfSewwknFaWd6N6sSqmnWkSgoUF7XSzLL7Z2AeX6Cn\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol\":{\"keccak256\":\"0x7c4f0a4ac8f386426355562d97f5677688f96ac90cb68755f1b4222ff26b4624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://009a749be6427f0c6db19cdb90069287ce6a7113e415d62802cfaa5fb44ec1cb\",\"dweb:/ipfs/Qmb7V2taAkTRD7T3EEbKDtWm2YTqG6VNDJNsi9AzCTKERt\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol\":{\"keccak256\":\"0xff2aad701b11071de262a011dbf94f207f858d27e7c970ff5e64354f0d712a35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc7bc96c48869e39fd36d32d0aa154a67247ccbd2b9d1bf30e2672865dc5667a\",\"dweb:/ipfs/QmXFJoNT2hTD64SwBPKKFiM5RvUAKLuWk6VsbcGhL2zCwR\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x36908d39ba8e1287b70c7c1b59e9c63196b08521652cb3bd6bddff49dab40a80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://754807b9c2e6599f98c8b95e759b11c4ad29b6160d7c075bba62484dbbca7671\",\"dweb:/ipfs/QmWGgEbTd4gE6DtWHSCxm4wpZyAxe3g3QiXXuXuzXGugBi\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol\":{\"keccak256\":\"0x22a0c50cbc69aa19cb1d9ee08f73b227e2c5d3a14b9dbb53de819a916ddd3e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac979f9a2c42aedb3b66da2cb7d7d579224a2129c54f6515256835839158b7b9\",\"dweb:/ipfs/QmUxV7xaoM1tjEXgUCSR46x43aN9XtaNSv4ijURpTbSiHv\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 913,
								"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
								"label": "creators",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 916,
								"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
								"label": "_tokenOwners",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(UintToAddressMap)2076_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Bytes32Set)2950_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Bytes32Set",
								"members": [
									{
										"astId": 2949,
										"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2756_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Bytes32ToBytes32Map)1639_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.Bytes32ToBytes32Map",
								"members": [
									{
										"astId": 1634,
										"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
										"label": "_keys",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32Set)2950_storage"
									},
									{
										"astId": 1638,
										"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
										"label": "_values",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_bytes32,t_bytes32)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)2756_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2751,
										"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2755,
										"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintToAddressMap)2076_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.UintToAddressMap",
								"members": [
									{
										"astId": 2075,
										"contract": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol:ERC1155",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)1639_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol\":{\"keccak256\":\"0x847fd3fb0bb6946e86e0da7060f08df5961ec874b4f93de2438b835b92edfd08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b85ed4a7ffd8067845fc390c896e4f49f78d4de1be291b76eda465f941e4e0c\",\"dweb:/ipfs/QmbvCXfbTtEq4C1hpVjHGWCUVC5KdZHTCADWDwLYrYJZ88\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol": {
				"EnumerableMap": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol\":1668:17953  library EnumerableMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol\":1668:17953  library EnumerableMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f6097c58d1535f78644f04ebcfbdbbf0d5a2b8e40aad3e70c05ff8b07846c9c264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f6097c58d1535f78644f04ebcfbdbbf0d5a2b8e40aad3e70c05ff8b07846c9c264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 MULMOD PUSH29 0x58D1535F78644F04EBCFBDBBF0D5A2B8E40AAD3E70C05FF8B07846C9C2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1668:16285:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f6097c58d1535f78644f04ebcfbdbbf0d5a2b8e40aad3e70c05ff8b07846c9c264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 MULMOD PUSH29 0x58D1535F78644F04EBCFBDBBF0D5A2B8E40AAD3E70C05FF8B07846C9C2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1668:16285:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"at(struct EnumerableMap.AddressToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address,string memory)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,string memory)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256,string memory)": "infinite",
								"length(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"remove(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"remove(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"set(struct EnumerableMap.AddressToUintMap storage pointer,address,uint256)": "infinite",
								"set(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32)": "infinite",
								"set(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256)": "infinite",
								"set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)": "infinite",
								"set(struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256)": "infinite",
								"tryGet(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"tryGet(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 17953,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6097c58d1535f78644f04ebcfbdbbf0d5a2b8e40aad3e70c05ff8b07846c9c264736f6c63430008110033",
									".code": [
										{
											"begin": 1668,
											"end": 17953,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 17953,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol\":{\"keccak256\":\"0x44339d29cad1612f7a3431a3d8d651dbdda5b11b8f9178b33760d90bbe69bf98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd79dfe826c2a9f88f87cff2ab4040da2949af0ebd1cd3e7b9f422114edeaad9\",\"dweb:/ipfs/QmXeJfSewwknFaWd6N6sSqmnWkSgoUF7XSzLL7Z2AeX6Cn\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol\":{\"keccak256\":\"0x7c4f0a4ac8f386426355562d97f5677688f96ac90cb68755f1b4222ff26b4624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://009a749be6427f0c6db19cdb90069287ce6a7113e415d62802cfaa5fb44ec1cb\",\"dweb:/ipfs/Qmb7V2taAkTRD7T3EEbKDtWm2YTqG6VNDJNsi9AzCTKERt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol\":1361:13328  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol\":1361:13328  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208384971689090e30342877f9bbc3b1b58e84146af6c870ec186a7a6268ab4bb664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208384971689090e30342877f9bbc3b1b58e84146af6c870ec186a7a6268ab4bb664736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP5 SWAP8 AND DUP10 MULMOD 0xE ADDRESS CALLVALUE 0x28 PUSH24 0xF9BBC3B1B58E84146AF6C870EC186A7A6268AB4BB664736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "1361:11967:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208384971689090e30342877f9bbc3b1b58e84146af6c870ec186a7a6268ab4bb664736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP5 SWAP8 AND DUP10 MULMOD 0xE ADDRESS CALLVALUE 0x28 PUSH24 0xF9BBC3B1B58E84146AF6C870EC186A7A6268AB4BB664736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "1361:11967:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1361,
									"end": 13328,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208384971689090e30342877f9bbc3b1b58e84146af6c870ec186a7a6268ab4bb664736f6c63430008110033",
									".code": [
										{
											"begin": 1361,
											"end": 13328,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 13328,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol",
								"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol\":{\"keccak256\":\"0x7c4f0a4ac8f386426355562d97f5677688f96ac90cb68755f1b4222ff26b4624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://009a749be6427f0c6db19cdb90069287ce6a7113e415d62802cfaa5fb44ec1cb\",\"dweb:/ipfs/Qmb7V2taAkTRD7T3EEbKDtWm2YTqG6VNDJNsi9AzCTKERt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol\":{\"keccak256\":\"0xff2aad701b11071de262a011dbf94f207f858d27e7c970ff5e64354f0d712a35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc7bc96c48869e39fd36d32d0aa154a67247ccbd2b9d1bf30e2672865dc5667a\",\"dweb:/ipfs/QmXFJoNT2hTD64SwBPKKFiM5RvUAKLuWk6VsbcGhL2zCwR\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol\":{\"keccak256\":\"0xff2aad701b11071de262a011dbf94f207f858d27e7c970ff5e64354f0d712a35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc7bc96c48869e39fd36d32d0aa154a67247ccbd2b9d1bf30e2672865dc5667a\",\"dweb:/ipfs/QmXFJoNT2hTD64SwBPKKFiM5RvUAKLuWk6VsbcGhL2zCwR\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x36908d39ba8e1287b70c7c1b59e9c63196b08521652cb3bd6bddff49dab40a80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://754807b9c2e6599f98c8b95e759b11c4ad29b6160d7c075bba62484dbbca7671\",\"dweb:/ipfs/QmWGgEbTd4gE6DtWHSCxm4wpZyAxe3g3QiXXuXuzXGugBi\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol\":{\"keccak256\":\"0x22a0c50cbc69aa19cb1d9ee08f73b227e2c5d3a14b9dbb53de819a916ddd3e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac979f9a2c42aedb3b66da2cb7d7d579224a2129c54f6515256835839158b7b9\",\"dweb:/ipfs/QmUxV7xaoM1tjEXgUCSR46x43aN9XtaNSv4ijURpTbSiHv\"]},\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol",
					"exportedSymbols": {
						"Address": [
							329
						]
					},
					"id": 330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Address",
							"nameLocation": "210:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1276:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1513:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1518:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1505:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1527:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1505:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1498:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1219:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1270:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:6:0"
									},
									"scope": 329,
									"src": "1210:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2542:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2569:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2561:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2561:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2575:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2561:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2586:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2553:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2645:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2640:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2658:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2668:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2658:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2680:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2658:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2702:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1544:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2480:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2506:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2490:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:0"
									},
									"scope": 329,
									"src": "2471:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3639:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3687:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3696:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "3657:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 67,
												"nodeType": "Return",
												"src": "3650:79:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2796:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3559:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3588:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3625:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:14:0"
									},
									"scope": 329,
									"src": "3550:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "4118:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4158:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4166:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4172:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "4175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4136:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4136:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "4129:59:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3745:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3976:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4007:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3999:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3988:97:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4104:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4103:14:0"
									},
									"scope": 329,
									"src": "3967:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4718:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4766:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4779:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4736:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4736:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4729:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4204:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4580:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4620:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4612:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4650:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4637:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4637:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4673:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4665:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:84:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4704:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:14:0"
									},
									"scope": 329,
									"src": "4571:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "5271:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5298:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5290:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5290:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5290:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5304:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5290:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5315:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5290:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5322:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5282:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5282:81:0"
											},
											{
												"assignments": [
													135,
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5380:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5375:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5402:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5389:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 136,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5389:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 138,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5416:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5423:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5416:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5435:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5416:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5416:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5374:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5492:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "5500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5509:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5521:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 145,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5465:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5465:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 151,
												"nodeType": "Return",
												"src": "5458:76:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4839:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5096:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5166:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5153:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5219:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5205:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5205:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5117:121:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5257:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5257:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5256:14:0"
									},
									"scope": 329,
									"src": "5087:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "5827:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5872:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5878:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															199
														],
														"referencedDeclaration": 199,
														"src": "5845:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5845:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "5838:80:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "5550:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5736:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5784:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5771:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5754:35:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5813:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:0"
									},
									"scope": 329,
									"src": "5727:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6280:171:0",
										"statements": [
											{
												"assignments": [
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6297:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6292:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6319:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6306:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6333:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6340:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6333:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6291:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 194,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6430:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6374:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6374:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 197,
												"nodeType": "Return",
												"src": "6367:76:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5934:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6127:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6164:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6156:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6194:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6181:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6181:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6223:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6209:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6145:97:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6266:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6266:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:14:0"
									},
									"scope": 329,
									"src": "6118:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6735:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6782:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6788:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 209,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															245
														],
														"referencedDeclaration": 245,
														"src": "6753:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6753:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "6746:84:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6459:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6647:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6676:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6697:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6684:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:35:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6721:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6721:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6720:14:0"
									},
									"scope": 329,
									"src": "6638:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "7191:173:0",
										"statements": [
											{
												"assignments": [
													229,
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7208:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7203:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7203:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7230:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7217:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 230,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7244:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7251:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7244:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7244:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7202:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 240,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7331:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7343:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7287:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7287:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "7280:76:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6846:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7041:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7080:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7072:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7110:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7097:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7097:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7139:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7125:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7125:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7061:97:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7177:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7177:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:14:0"
									},
									"scope": 329,
									"src": "7032:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7859:445:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "8237:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "8260:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 278,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "8272:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8252:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "8252:33:0"
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "7870:427:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "7883:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 260,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7902:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7913:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7902:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7923:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7902:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "7898:290:0",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "7926:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 266,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 248,
																							"src": "8131:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 265,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "8120:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8120:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8140:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 264,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8112:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8112:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "8112:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 273,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8209:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 274,
															"nodeType": "Return",
															"src": "8202:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7372:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7669:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7714:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7706:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7736:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7731:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7731:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7767:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7754:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7754:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7802:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7788:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7788:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7695:126:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7845:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7844:14:0"
									},
									"scope": 329,
									"src": "7660:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8697:141:0",
										"statements": [
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "8712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "8771:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "8794:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 302,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "8806:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 300,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8786:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "8786:33:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "8708:123:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "8721:44:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "8743:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 295,
															"id": 298,
															"nodeType": "Return",
															"src": "8736:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8312:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8542:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8569:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8605:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8592:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8640:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8626:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8626:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8558:101:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8683:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8682:14:0"
									},
									"scope": 329,
									"src": "8533:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "8929:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "9007:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9018:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9007:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9027:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9007:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "9344:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9366:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9359:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9359:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "9359:20:0"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "9003:388:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "9030:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9191:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9210:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9239:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9233:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9233:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9214:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9279:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9283:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9275:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9275:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9296:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9268:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9268:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9268:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9239:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9283:10:0",
																	"valueSize": 1
																}
															],
															"id": 319,
															"nodeType": "InlineAssembly",
															"src": "9182:145:0"
														}
													]
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8855:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8876:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8863:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8863:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8902:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8888:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8862:53:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8929:0:0"
									},
									"scope": 329,
									"src": "8846:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 330,
							"src": "202:9199:0",
							"usedErrors": []
						}
					],
					"src": "104:9297:0"
				},
				"id": 0
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol",
					"exportedSymbols": {
						"Context": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 332,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "718:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 337,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 336,
												"id": 339,
												"nodeType": "Return",
												"src": "729:17:1"
											}
										]
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 351,
									"src": "656:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "829:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 346,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 345,
												"id": 348,
												"nodeType": "Return",
												"src": "840:15:1"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "813:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:1"
									},
									"scope": 351,
									"src": "762:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "623:243:1",
							"usedErrors": []
						}
					],
					"src": "89:777:1"
				},
				"id": 1
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Context": [
							351
						],
						"ERC1155": [
							1599
						],
						"ERC165": [
							1623
						],
						"EnumerableMap": [
							2745
						],
						"EnumerableSet": [
							3358
						],
						"IERC1155": [
							3480
						],
						"IERC1155MetadataURI": [
							3495
						],
						"IERC1155Receiver": [
							3536
						],
						"IERC165": [
							3548
						]
					},
					"id": 1600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 3481,
							"src": "139:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 3537,
							"src": "165:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol",
							"file": "./IERC1155MetadataURI.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 3496,
							"src": "199:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol",
							"file": "./EnumerableMap.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 2746,
							"src": "236:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/Address.sol",
							"file": "./Address.sol",
							"id": 358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 330,
							"src": "267:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/Context.sol",
							"file": "./Context.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 352,
							"src": "292:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 1624,
							"src": "317:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Context",
										"nameLocations": [
											"585:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 351,
										"src": "585:7:2"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "585:7:2"
								},
								{
									"baseName": {
										"id": 364,
										"name": "ERC165",
										"nameLocations": [
											"594:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1623,
										"src": "594:6:2"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "594:6:2"
								},
								{
									"baseName": {
										"id": 366,
										"name": "IERC1155",
										"nameLocations": [
											"602:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3480,
										"src": "602:8:2"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "602:8:2"
								},
								{
									"baseName": {
										"id": 368,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"612:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3495,
										"src": "612:19:2"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "612:19:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 361,
								"nodeType": "StructuredDocumentation",
								"src": "343:220:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1599,
							"linearizedBaseContracts": [
								1599,
								3495,
								3480,
								1623,
								3548,
								351
							],
							"name": "ERC1155",
							"nameLocation": "574:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 372,
									"libraryName": {
										"id": 370,
										"name": "Address",
										"nameLocations": [
											"645:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 329,
										"src": "645:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "639:26:2",
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "657:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "779:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "723:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "731:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "723:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 376,
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "742:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "901:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "848:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 383,
										"keyType": {
											"id": 379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "856:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "848:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 382,
											"keyType": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "875:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "867:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 381,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1058:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "1043:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 385,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1043:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1149:32:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "1168:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1160:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1160:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1160:13:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1071:40:2",
										"text": " @dev See {_setURI}."
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1143:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1129:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1129:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:20:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:0:2"
									},
									"scope": 1599,
									"src": "1117:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1622,
										3547
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1361:202:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1392:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 410,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3480,
																			"src": "1412:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$3480_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$3480_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 409,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1407:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1407:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$3480",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1422:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1407:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1392:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1450:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3495,
																			"src": "1470:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$3495_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$3495_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 415,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1465:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1465:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$3495",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1491:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1465:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1450:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1392:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1543:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 421,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1519:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1599_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1525:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1622,
															"src": "1519:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1392:163:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "1372:183:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1189:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1262:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 402,
												"name": "ERC165",
												"nameLocations": [
													"1329:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1623,
												"src": "1329:6:2"
											},
											{
												"id": 403,
												"name": "IERC165",
												"nameLocations": [
													"1337:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3548,
												"src": "1337:7:2"
											}
										],
										"src": "1320:25:2"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1287:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1280:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:20:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1355:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1355:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:6:2"
									},
									"scope": 1599,
									"src": "1253:310:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3494
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2049:30:2",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2067:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2060:11:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1571:397:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1983:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2016:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1987:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:9:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2034:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2034:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:15:2"
									},
									"scope": 1599,
									"src": "1974:105:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3418
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2325:135:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2344:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2363:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2355:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2355:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2355:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2344:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2336:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2336:76:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 461,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2430:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 463,
														"indexExpression": {
															"id": 462,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2440:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2430:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2444:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2430:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 466,
												"nodeType": "Return",
												"src": "2423:29:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2087:137:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2239:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2298:8:2"
									},
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2257:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2249:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2274:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2266:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:29:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:9:2"
									},
									"scope": 1599,
									"src": "2230:230:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3431
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2805:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 483,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "2824:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2833:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2824:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 485,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2843:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2847:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2843:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2824:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2855:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2816:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2816:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2816:83:2"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2929:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2912:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 493,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2912:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ArrayTypeName",
															"src": "2912:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "2959:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2968:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2959:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2945:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 496,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 497,
															"nodeType": "ArrayTypeName",
															"src": "2949:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2912:63:2"
											},
											{
												"body": {
													"id": 527,
													"nodeType": "Block",
													"src": "3034:76:2",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3049:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "3063:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3049:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 518,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 472,
																				"src": "3078:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 520,
																			"indexExpression": {
																				"id": 519,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3087:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3078:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 521,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "3091:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 523,
																			"indexExpression": {
																				"id": 522,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3095:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3091:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 517,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3068:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3068:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3049:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "3049:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3008:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 508,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3012:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3021:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3012:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3008:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"initializationExpression": {
													"assignments": [
														504
													],
													"declarations": [
														{
															"constant": false,
															"id": 504,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3001:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 528,
															"src": "2993:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 503,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2993:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 506,
													"initialValue": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3005:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2993:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3029:3:2",
														"subExpression": {
															"id": 511,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3031:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ExpressionStatement",
													"src": "3029:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2988:122:2"
											},
											{
												"expression": {
													"id": 529,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3129:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 481,
												"id": 530,
												"nodeType": "Return",
												"src": "3122:20:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2468:152:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2635:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2755:8:2"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2667:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2650:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2650:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 471,
													"nodeType": "ArrayTypeName",
													"src": "2650:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2694:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2677:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 473,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2677:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 474,
													"nodeType": "ArrayTypeName",
													"src": "2677:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:49:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2782:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2782:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "2782:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:18:2"
									},
									"scope": 1599,
									"src": "2626:524:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3439
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3307:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 542,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "3337:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3337:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3351:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3361:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 541,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "3318:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3318:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3318:52:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3158:59:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3232:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3258:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3250:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3250:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3273:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3268:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3249:33:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:0:2"
									},
									"scope": 1599,
									"src": "3223:155:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3449
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3561:63:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 560,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3579:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3579:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 564,
													"indexExpression": {
														"id": 563,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3607:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3579:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 559,
												"id": 565,
												"nodeType": "Return",
												"src": "3572:44:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3392:58:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3465:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3537:8:2"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3490:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3482:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3507:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3499:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:35:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3555:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3555:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:6:2"
									},
									"scope": 1599,
									"src": "3456:168:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3463
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3871:231:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "3904:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 584,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "3912:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3912:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3904:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "3945:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 589,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "3951:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3951:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3928:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3928:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3904:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3979:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3882:156:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "3882:156:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4067:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4073:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4077:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4081:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4089:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "4049:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "4049:45:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3632:58:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3705:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3862:8:2"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3740:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3732:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3763:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3755:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3784:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3776:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3805:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3797:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3835:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3822:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3822:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:125:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3871:0:2"
									},
									"scope": 1599,
									"src": "3696:406:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3479
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4379:238:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "4412:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 624,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "4420:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4420:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4412:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4453:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 629,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "4459:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4459:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "4436:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4436:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4412:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4487:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4390:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4390:156:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4390:156:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4580:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4586:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4590:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "4595:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4604:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "4557:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4557:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "4557:52:2"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "4110:63:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4188:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4370:8:2"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4228:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4220:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4251:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4243:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4281:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4264:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4264:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "4264:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4312:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4295:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4295:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ArrayTypeName",
													"src": "4295:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4343:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4330:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4330:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4209:145:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:2"
									},
									"scope": 1599,
									"src": "4179:438:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "5250:805:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5269:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5283:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5275:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5275:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5275:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5269:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5287:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5261:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5261:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5261:66:2"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5348:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "5340:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5340:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5359:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5359:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5340:31:2"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5399:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "5382:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 676,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5382:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"nodeType": "ArrayTypeName",
															"src": "5382:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 682,
												"initialValue": {
													"arguments": [
														{
															"id": 680,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5423:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "5405:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5382:44:2"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5454:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "5437:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 685,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5437:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 686,
															"nodeType": "ArrayTypeName",
															"src": "5437:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [
														{
															"id": 689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5482:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "5464:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5464:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5437:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5523:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5533:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5539:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "5543:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 697,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "5548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 698,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5557:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 692,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "5502:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5502:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5502:60:2"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5583:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "5575:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5575:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 703,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5597:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 705,
														"indexExpression": {
															"id": 704,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5607:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5597:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 707,
													"indexExpression": {
														"id": 706,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5611:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5597:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5575:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 710,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "5635:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 711,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "5650:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5635:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5658:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5627:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5627:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "5627:76:2"
											},
											{
												"id": 726,
												"nodeType": "UncheckedBlock",
												"src": "5714:79:2",
												"statements": [
													{
														"expression": {
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 716,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "5739:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 719,
																	"indexExpression": {
																		"id": 717,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5749:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5739:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 720,
																"indexExpression": {
																	"id": 718,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "5753:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5739:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 721,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "5761:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 722,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5775:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5761:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5739:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 725,
														"nodeType": "ExpressionStatement",
														"src": "5739:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 727,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "5803:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 730,
															"indexExpression": {
																"id": 728,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5813:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5803:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 731,
														"indexExpression": {
															"id": 729,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5817:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5803:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 732,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "5824:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5803:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "5803:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 736,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5863:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5873:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5879:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5883:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5887:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "5848:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5848:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "EmitStatement",
												"src": "5843:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5927:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5937:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5943:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "5947:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 748,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "5952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 749,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5961:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 743,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "5907:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5907:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "5907:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 753,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "6010:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "6020:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6026:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "6030:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 757,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "6034:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 758,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "6042:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 752,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5979:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5979:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "5979:68:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4625:450:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5090:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5126:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5118:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5149:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5141:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5170:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5162:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5221:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5208:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5208:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5107:125:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5250:0:2"
									},
									"scope": 1599,
									"src": "5081:974:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "6607:952:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 779,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "6626:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6630:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6626:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 781,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "6640:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6648:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6640:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6626:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6656:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6618:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "6618:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "6718:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6732:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6724:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6724:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6724:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6718:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6736:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6710:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6710:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "6710:66:2"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6797:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "6789:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 797,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6789:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 799,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "6808:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6808:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6789:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6854:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6864:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "6870:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "6874:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 807,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "6879:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 808,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6888:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 802,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "6833:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6833:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "6833:60:2"
											},
											{
												"body": {
													"id": 868,
													"nodeType": "Block",
													"src": "6947:380:2",
													"statements": [
														{
															"assignments": [
																823
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 823,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6970:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 868,
																	"src": "6962:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 822,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6962:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 827,
															"initialValue": {
																"baseExpression": {
																	"id": 824,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "6975:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 826,
																"indexExpression": {
																	"id": 825,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "6979:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6975:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6962:19:2"
														},
														{
															"assignments": [
																829
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 829,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7004:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 868,
																	"src": "6996:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6996:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 833,
															"initialValue": {
																"baseExpression": {
																	"id": 830,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "7013:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 832,
																"indexExpression": {
																	"id": 831,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "7021:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7013:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6996:27:2"
														},
														{
															"assignments": [
																835
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 835,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7048:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 868,
																	"src": "7040:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 841,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 836,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "7062:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 838,
																	"indexExpression": {
																		"id": 837,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "7072:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7062:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "7076:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7062:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7040:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 843,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "7104:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 844,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "7119:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7104:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7127:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 842,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7096:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7096:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "7096:76:2"
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "7187:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 849,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "7216:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 852,
																				"indexExpression": {
																					"id": 850,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "7226:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7216:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 853,
																			"indexExpression": {
																				"id": 851,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7230:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7216:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 854,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 835,
																				"src": "7238:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 855,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "7252:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7238:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7216:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "7216:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 860,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "7288:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 863,
																		"indexExpression": {
																			"id": 861,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "7298:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7288:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 864,
																	"indexExpression": {
																		"id": 862,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "7302:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7288:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 865,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "7309:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7288:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "7288:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "6926:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 816,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "6930:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6934:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6930:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6926:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"initializationExpression": {
													"assignments": [
														812
													],
													"declarations": [
														{
															"constant": false,
															"id": 812,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6919:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 869,
															"src": "6911:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 811,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6911:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 814,
													"initialValue": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6911:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6942:3:2",
														"subExpression": {
															"id": 819,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "6944:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 821,
													"nodeType": "ExpressionStatement",
													"src": "6942:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6906:421:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 871,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "7358:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7368:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7374:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7378:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 875,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "7383:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 870,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3392,
														"src": "7344:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7344:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "EmitStatement",
												"src": "7339:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 879,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "7424:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7434:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7440:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7444:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 883,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "7449:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 884,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7458:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 878,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "7404:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7404:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "7404:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "7512:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7522:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7528:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7532:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 892,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "7537:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 893,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7546:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 887,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "7476:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7476:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "7476:75:2"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "6063:344:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6422:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6463:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "6455:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6486:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "6478:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6516:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "6499:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 768,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6499:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 769,
													"nodeType": "ArrayTypeName",
													"src": "6499:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6547:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "6530:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 771,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6530:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 772,
													"nodeType": "ArrayTypeName",
													"src": "6530:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6578:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "6565:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6565:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6444:145:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6607:0:2"
									},
									"scope": 1599,
									"src": "6413:1146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "8459:32:2",
										"statements": [
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 903,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "8470:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "8477:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8470:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "8470:13:2"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "7567:830:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8412:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8434:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "8420:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8420:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8419:22:2"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8459:0:2"
									},
									"scope": 1599,
									"src": "8403:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "8499:372:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 913,
									"mutability": "mutable",
									"name": "creators",
									"nameLocation": "8913:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "8877:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 912,
										"keyType": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8885:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8877:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 911,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8896:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 916,
									"mutability": "mutable",
									"name": "_tokenOwners",
									"nameLocation": "8967:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "8928:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage",
										"typeString": "struct EnumerableMap.UintToAddressMap"
									},
									"typeName": {
										"id": 915,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 914,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"8928:13:2",
												"8942:16:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2076,
											"src": "8928:30:2"
										},
										"referencedDeclaration": 2076,
										"src": "8928:30:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "9283:756:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "9302:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9316:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9308:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9308:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9308:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9302:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9320:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9294:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "9294:62:2"
											},
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9455:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "9447:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 937,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9447:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 939,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9466:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9466:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9447:31:2"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9506:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "9489:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 944,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9489:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 945,
															"nodeType": "ArrayTypeName",
															"src": "9489:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"arguments": [
														{
															"id": 948,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "9530:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 947,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "9512:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9512:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9489:44:2"
											},
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9561:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "9544:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 953,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9544:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 954,
															"nodeType": "ArrayTypeName",
															"src": "9544:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "9589:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "9571:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9571:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9544:52:2"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 960,
															"name": "creators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "9608:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 962,
														"indexExpression": {
															"id": 961,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "9617:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9608:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 963,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9623:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9627:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9623:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9608:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "9608:25:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "9713:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9731:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9723:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9723:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9723:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "9735:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9739:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 975,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "9744:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 976,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "9753:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 967,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "9692:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9692:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "9692:66:2"
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 979,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "9771:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 982,
															"indexExpression": {
																"id": 980,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "9781:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9771:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 983,
														"indexExpression": {
															"id": 981,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "9785:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9771:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 984,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "9792:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9771:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "9771:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 988,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "9829:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9847:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9839:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 989,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9839:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9839:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "9851:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "9855:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "9859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "9814:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9814:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "EmitStatement",
												"src": "9809:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 999,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "9899:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9917:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9909:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9909:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9909:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "9921:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9925:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "9930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "9939:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "9879:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9879:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "9879:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "9988:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10006:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9998:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9998:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9998:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "10010:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10014:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1018,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "10018:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1019,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "10026:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1010,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "9957:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "9957:74:2"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9165:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9189:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "9181:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9181:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9210:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "9202:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "9223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9261:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "9248:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9248:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:102:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9283:0:2"
									},
									"scope": 1599,
									"src": "9156:883:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "10119:31:2",
										"statements": [
											{
												"expression": {
													"id": 1030,
													"name": "id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "10137:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1031,
												"nodeType": "Return",
												"src": "10130:9:2"
											}
										]
									},
									"functionSelector": "bd85b039",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "10058:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10075:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10070:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10070:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10069:9:2"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10110:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10109:9:2"
									},
									"scope": 1599,
									"src": "10049:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "10712:654:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "10731:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10745:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10737:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10737:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10737:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10731:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10749:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10723:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10723:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "10723:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1058,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "10804:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10808:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10804:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1060,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "10818:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10826:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10818:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10804:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10834:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10796:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10796:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "10796:81:2"
											},
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10898:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "10890:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1066,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10890:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1068,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "10909:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10909:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10890:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1072,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10955:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10973:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10965:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1073,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10965:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10965:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "10977:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "10981:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1079,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "10986:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1080,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "10995:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1071,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "10934:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10934:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "10934:66:2"
											},
											{
												"body": {
													"id": 1106,
													"nodeType": "Block",
													"src": "11054:62:2",
													"statements": [
														{
															"expression": {
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1094,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "11069:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1099,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1095,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "11079:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1097,
																			"indexExpression": {
																				"id": 1096,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1084,
																				"src": "11083:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11079:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11069:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1100,
																	"indexExpression": {
																		"id": 1098,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "11087:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11069:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1101,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "11094:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1103,
																	"indexExpression": {
																		"id": 1102,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "11102:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11094:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11069:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1105,
															"nodeType": "ExpressionStatement",
															"src": "11069:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "11033:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1088,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11037:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11041:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11037:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11033:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1107,
												"initializationExpression": {
													"assignments": [
														1084
													],
													"declarations": [
														{
															"constant": false,
															"id": 1084,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11026:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1107,
															"src": "11018:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1083,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11018:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1086,
													"initialValue": {
														"hexValue": "30",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11030:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11018:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11049:3:2",
														"subExpression": {
															"id": 1091,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "11049:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1093,
													"nodeType": "ExpressionStatement",
													"src": "11049:3:2"
												},
												"nodeType": "ForStatement",
												"src": "11013:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1109,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "11147:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11157:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11157:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11157:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "11169:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11173:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1116,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1108,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3392,
														"src": "11133:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11133:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "11128:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "11219:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11237:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11229:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11229:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11229:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "11241:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11245:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1127,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "11250:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "11259:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1119,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "11199:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11199:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "11199:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "11313:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11331:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11323:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1133,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11323:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11323:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "11335:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11339:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1139,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "11344:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "11353:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1131,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "11277:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11277:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "11277:81:2"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "10158:389:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "10562:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10591:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "10583:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "10604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "10604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10652:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "10635:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1040,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10635:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1041,
													"nodeType": "ArrayTypeName",
													"src": "10635:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "10670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10572:122:2"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10712:0:2"
									},
									"scope": 1599,
									"src": "10553:813:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "11772:700:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "11791:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11807:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11799:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1156,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11799:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11799:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11791:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11811:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11783:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11783:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "11783:66:2"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11870:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "11862:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1164,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11862:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1166,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "11881:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11881:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11862:31:2"
											},
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11921:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "11904:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1171,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11904:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1172,
															"nodeType": "ArrayTypeName",
															"src": "11904:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1177,
												"initialValue": {
													"arguments": [
														{
															"id": 1175,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "11945:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "11927:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11927:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11904:44:2"
											},
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11976:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "11959:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1180,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11959:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1181,
															"nodeType": "ArrayTypeName",
															"src": "11959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"arguments": [
														{
															"id": 1184,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "12004:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "11986:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11986:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11959:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "12045:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "12055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12069:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12061:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12061:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12061:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "12073:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1195,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "12078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12087:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1187,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "12024:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12024:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "12024:66:2"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12111:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "12103:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12103:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1201,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "12125:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1203,
														"indexExpression": {
															"id": 1202,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "12135:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12125:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1205,
													"indexExpression": {
														"id": 1204,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "12139:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12125:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12103:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1208,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "12163:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "12178:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12163:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12186:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12155:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12155:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "12155:70:2"
											},
											{
												"id": 1224,
												"nodeType": "UncheckedBlock",
												"src": "12236:79:2",
												"statements": [
													{
														"expression": {
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1214,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "12261:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1217,
																	"indexExpression": {
																		"id": 1215,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "12271:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12261:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1218,
																"indexExpression": {
																	"id": 1216,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "12275:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12261:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1219,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "12283:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1220,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "12297:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12283:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12261:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1223,
														"nodeType": "ExpressionStatement",
														"src": "12261:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "12347:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "12357:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12371:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12363:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12363:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "12375:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1233,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "12379:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1225,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "12332:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12332:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "EmitStatement",
												"src": "12327:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "12419:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "12429:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12443:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1239,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12435:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12435:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "12447:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1244,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "12452:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12461:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1236,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "12399:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12399:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "12399:65:2"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "11374:284:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11673:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11697:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "11689:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11720:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "11712:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11712:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11741:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "11733:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11678:76:2"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11772:0:2"
									},
									"scope": 1599,
									"src": "11664:808:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "12855:836:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1262,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "12874:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12890:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12882:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1263,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12882:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12882:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12874:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12894:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12866:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12866:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "12866:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1272,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "12951:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12955:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12951:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1274,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "12965:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12973:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12965:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12951:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12981:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12943:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12943:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "12943:81:2"
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "13045:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "13037:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1280,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13037:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1282,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "13056:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13056:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13037:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "13102:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "13112:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13126:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13118:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13118:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "13130:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1293,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "13135:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13144:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1285,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "13081:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13081:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "13081:66:2"
											},
											{
												"body": {
													"id": 1346,
													"nodeType": "Block",
													"src": "13201:332:2",
													"statements": [
														{
															"assignments": [
																1309
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1309,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "13224:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1346,
																	"src": "13216:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1308,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13216:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1313,
															"initialValue": {
																"baseExpression": {
																	"id": 1310,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "13229:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1312,
																"indexExpression": {
																	"id": 1311,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "13233:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13229:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13216:19:2"
														},
														{
															"assignments": [
																1315
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1315,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "13258:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1346,
																	"src": "13250:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13250:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1319,
															"initialValue": {
																"baseExpression": {
																	"id": 1316,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "13267:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1318,
																"indexExpression": {
																	"id": 1317,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "13275:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13267:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13250:27:2"
														},
														{
															"assignments": [
																1321
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1321,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "13302:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1346,
																	"src": "13294:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1320,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13294:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1327,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1322,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "13316:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1324,
																	"indexExpression": {
																		"id": 1323,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "13326:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13316:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1326,
																"indexExpression": {
																	"id": 1325,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "13330:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13316:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13294:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1329,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "13358:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1330,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "13373:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13358:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13381:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1328,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13350:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13350:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1334,
															"nodeType": "ExpressionStatement",
															"src": "13350:70:2"
														},
														{
															"id": 1345,
															"nodeType": "UncheckedBlock",
															"src": "13435:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1335,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "13464:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1338,
																				"indexExpression": {
																					"id": 1336,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1309,
																					"src": "13474:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13464:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1339,
																			"indexExpression": {
																				"id": 1337,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "13478:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "13464:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1340,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "13486:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1341,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "13500:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13486:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13464:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "13464:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "13180:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1302,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "13184:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13188:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13184:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13180:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"initializationExpression": {
													"assignments": [
														1298
													],
													"declarations": [
														{
															"constant": false,
															"id": 1298,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13173:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1347,
															"src": "13165:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1297,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1300,
													"initialValue": {
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13177:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13165:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13196:3:2",
														"subExpression": {
															"id": 1305,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "13196:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1307,
													"nodeType": "ExpressionStatement",
													"src": "13196:3:2"
												},
												"nodeType": "ForStatement",
												"src": "13160:373:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1349,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "13564:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "13574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13588:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13580:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13580:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13580:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "13592:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1356,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "13597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1348,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3392,
														"src": "13550:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13550:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "13545:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1360,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "13638:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "13648:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13662:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13654:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1362,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13654:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13654:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1366,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "13666:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1367,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "13671:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13680:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1359,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "13618:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13618:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "13618:65:2"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "12480:236:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12731:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12760:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "12752:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12792:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "12775:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12775:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "12775:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12823:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "12806:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "12806:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12741:96:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12855:0:2"
									},
									"scope": 1599,
									"src": "12722:969:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "13961:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "13980:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1384,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "13989:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13980:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13999:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13972:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13972:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "13972:71:2"
											},
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1389,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "14054:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1392,
															"indexExpression": {
																"id": 1390,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "14073:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14054:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1393,
														"indexExpression": {
															"id": 1391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "14080:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14054:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1394,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "14092:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14054:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "14054:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1398,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "14131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1399,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "14138:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "14148:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1397,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3401,
														"src": "14116:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14116:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "EmitStatement",
												"src": "14111:46:2"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "13699:129:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13843:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13880:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "13872:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13872:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13904:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "13896:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13896:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13928:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "13923:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13923:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13861:82:2"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13961:0:2"
									},
									"scope": 1599,
									"src": "13834:331:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "15342:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "14173:944:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15132:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15171:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "15163:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15163:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15198:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "15190:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15190:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15221:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "15213:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15213:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15251:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "15234:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15234:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1413,
													"nodeType": "ArrayTypeName",
													"src": "15234:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "15265:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1415,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15265:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1416,
													"nodeType": "ArrayTypeName",
													"src": "15265:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15313:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "15300:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15300:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15152:172:2"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15342:0:2"
									},
									"scope": 1599,
									"src": "15123:221:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "16517:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "15352:941:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16308:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16346:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "16338:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16373:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "16365:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16365:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16396:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "16388:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16426:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "16409:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1431,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1432,
													"nodeType": "ArrayTypeName",
													"src": "16409:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16457:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "16440:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1434,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16440:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1435,
													"nodeType": "ArrayTypeName",
													"src": "16440:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16488:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "16475:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16475:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16327:172:2"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16517:0:2"
									},
									"scope": 1599,
									"src": "16299:220:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "16727:544:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1457,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "16742:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16745:10:2",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "16742:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16742:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "16738:526:2",
												"trueBody": {
													"id": 1502,
													"nodeType": "Block",
													"src": "16759:505:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1484,
																		"nodeType": "Block",
																		"src": "16877:188:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1477,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1473,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1471,
																						"src": "16900:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1474,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3536,
																								"src": "16912:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3536_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1475,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "16929:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3517,
																							"src": "16912:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1476,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "16947:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16912:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16900:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1483,
																				"nodeType": "IfStatement",
																				"src": "16896:154:2",
																				"trueBody": {
																					"id": 1482,
																					"nodeType": "Block",
																					"src": "16957:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1479,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16987:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1478,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16980:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1480,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16980:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1481,
																							"nodeType": "ExpressionStatement",
																							"src": "16980:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1485,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1472,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1471,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16867:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1485,
																				"src": "16860:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1470,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16860:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16859:17:2"
																	},
																	"src": "16851:214:2"
																},
																{
																	"block": {
																		"id": 1493,
																		"nodeType": "Block",
																		"src": "17100:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1490,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1487,
																							"src": "17126:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1489,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17119:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1491,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17119:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1492,
																				"nodeType": "ExpressionStatement",
																				"src": "17119:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1494,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1488,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1487,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17092:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1494,
																				"src": "17078:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1486,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17078:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17077:22:2"
																	},
																	"src": "17066:83:2"
																},
																{
																	"block": {
																		"id": 1499,
																		"nodeType": "Block",
																		"src": "17156:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1496,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17182:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1495,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17175:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17175:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1498,
																				"nodeType": "ExpressionStatement",
																				"src": "17175:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1500,
																	"nodeType": "TryCatchClause",
																	"src": "17150:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1464,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "16817:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1465,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "16827:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1466,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "16833:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1467,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "16837:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1468,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "16845:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1461,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1448,
																				"src": "16795:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1460,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3536,
																			"src": "16778:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3536_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16778:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$3536",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16799:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3517,
																	"src": "16778:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16778:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1501,
															"nodeType": "TryStatement",
															"src": "16774:479:2"
														}
													]
												}
											}
										]
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "16536:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16585:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "16577:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16577:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16612:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "16604:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16604:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16635:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "16627:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16656:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "16648:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16677:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "16669:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16707:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "16694:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16694:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16566:152:2"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16727:0:2"
									},
									"scope": 1599,
									"src": "16527:744:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "17504:588:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "17519:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17522:10:2",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "17519:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17519:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "17515:570:2",
												"trueBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "17536:549:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1549,
																		"nodeType": "Block",
																		"src": "17693:193:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1542,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1538,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1536,
																						"src": "17716:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1539,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3536,
																								"src": "17728:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3536_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1540,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17745:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3535,
																							"src": "17728:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17768:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17728:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17716:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1548,
																				"nodeType": "IfStatement",
																				"src": "17712:159:2",
																				"trueBody": {
																					"id": 1547,
																					"nodeType": "Block",
																					"src": "17778:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1544,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17808:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1543,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17801:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1545,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17801:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1546,
																							"nodeType": "ExpressionStatement",
																							"src": "17801:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1550,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1537,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1536,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "17669:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1550,
																				"src": "17662:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1535,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17662:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17643:49:2"
																	},
																	"src": "17635:251:2"
																},
																{
																	"block": {
																		"id": 1558,
																		"nodeType": "Block",
																		"src": "17921:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1555,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1552,
																							"src": "17947:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1554,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17940:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17940:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1557,
																				"nodeType": "ExpressionStatement",
																				"src": "17940:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1559,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1553,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1552,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17913:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1559,
																				"src": "17899:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1551,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17899:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17898:22:2"
																	},
																	"src": "17887:83:2"
																},
																{
																	"block": {
																		"id": 1564,
																		"nodeType": "Block",
																		"src": "17977:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1561,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "18003:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1560,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17996:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17996:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1563,
																				"nodeType": "ExpressionStatement",
																				"src": "17996:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1565,
																	"nodeType": "TryCatchClause",
																	"src": "17971:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1529,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "17599:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "17609:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1531,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "17615:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1532,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "17620:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1533,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "17629:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1526,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "17572:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1525,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3536,
																			"src": "17555:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$3536_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17555:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$3536",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17576:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3535,
																	"src": "17555:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17555:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1566,
															"nodeType": "TryStatement",
															"src": "17551:523:2"
														}
													]
												}
											}
										]
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "17288:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17342:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "17334:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17334:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17369:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "17361:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17392:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "17384:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "17422:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "17405:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1512,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17405:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1513,
													"nodeType": "ArrayTypeName",
													"src": "17405:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "17453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "17436:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1515,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17436:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1516,
													"nodeType": "ArrayTypeName",
													"src": "17436:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17484:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "17471:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17471:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17323:172:2"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17504:0:2"
									},
									"scope": 1599,
									"src": "17279:813:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "18184:114:2",
										"statements": [
											{
												"assignments": [
													1582
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "18212:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "18195:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1580,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18195:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1581,
															"nodeType": "ArrayTypeName",
															"src": "18195:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18234:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18220:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1583,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1584,
															"nodeType": "ArrayTypeName",
															"src": "18224:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18220:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18195:41:2"
											},
											{
												"expression": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1589,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "18247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1591,
														"indexExpression": {
															"hexValue": "30",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18253:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18247:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1592,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "18258:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18247:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "18247:18:2"
											},
											{
												"expression": {
													"id": 1595,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1582,
													"src": "18285:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1596,
												"nodeType": "Return",
												"src": "18278:12:2"
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "18109:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "18135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "18127:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18127:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18126:17:2"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "18166:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1574,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18166:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1575,
													"nodeType": "ArrayTypeName",
													"src": "18166:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18165:18:2"
									},
									"scope": 1599,
									"src": "18100:198:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1600,
							"src": "565:17736:2",
							"usedErrors": []
						}
					],
					"src": "112:18189:2"
				},
				"id": 2
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1623
						],
						"IERC165": [
							3548
						]
					},
					"id": 1624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1624,
							"sourceUnit": 3549,
							"src": "129:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1604,
										"name": "IERC165",
										"nameLocations": [
											"775:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3548,
										"src": "775:7:3"
									},
									"id": 1605,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1623,
							"linearizedBaseContracts": [
								1623,
								3548
							],
							"name": "ERC165",
							"nameLocation": "765:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										3547
									],
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "945:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1614,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "963:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1616,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3548,
																	"src": "983:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$3548_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$3548_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1615,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$3548",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "992:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1613,
												"id": 1620,
												"nodeType": "Return",
												"src": "956:47:3"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1610,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:3"
									},
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "881:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:3"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "939:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:3"
									},
									"scope": 1623,
									"src": "854:157:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1624,
							"src": "747:267:3",
							"usedErrors": []
						}
					],
					"src": "102:912:3"
				},
				"id": 3
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableMap.sol",
					"exportedSymbols": {
						"EnumerableMap": [
							2745
						],
						"EnumerableSet": [
							3358
						]
					},
					"id": 2746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "209:23:4"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol",
							"file": "./EnumerableSet.sol",
							"id": 1626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2746,
							"sourceUnit": 3359,
							"src": "236:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableMap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1627,
								"nodeType": "StructuredDocumentation",
								"src": "269:1397:4",
								"text": " @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableMap.\n ===="
							},
							"fullyImplemented": true,
							"id": 2745,
							"linearizedBaseContracts": [
								2745
							],
							"name": "EnumerableMap",
							"nameLocation": "1676:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1631,
									"libraryName": {
										"id": 1628,
										"name": "EnumerableSet",
										"nameLocations": [
											"1703:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3358,
										"src": "1703:13:4"
									},
									"nodeType": "UsingForDirective",
									"src": "1697:49:4",
									"typeName": {
										"id": 1630,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1629,
											"name": "EnumerableSet.Bytes32Set",
											"nameLocations": [
												"1721:13:4",
												"1735:10:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2950,
											"src": "1721:24:4"
										},
										"referencedDeclaration": 2950,
										"src": "1721:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
											"typeString": "struct EnumerableSet.Bytes32Set"
										}
									}
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToBytes32Map",
									"id": 1639,
									"members": [
										{
											"constant": false,
											"id": 1634,
											"mutability": "mutable",
											"name": "_keys",
											"nameLocation": "2312:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "2287:30:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
												"typeString": "struct EnumerableSet.Bytes32Set"
											},
											"typeName": {
												"id": 1633,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1632,
													"name": "EnumerableSet.Bytes32Set",
													"nameLocations": [
														"2287:13:4",
														"2301:10:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2950,
													"src": "2287:24:4"
												},
												"referencedDeclaration": 2950,
												"src": "2287:24:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1638,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "2356:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "2328:35:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
												"typeString": "mapping(bytes32 => bytes32)"
											},
											"typeName": {
												"id": 1637,
												"keyType": {
													"id": 1635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2328:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
													"typeString": "mapping(bytes32 => bytes32)"
												},
												"valueType": {
													"id": 1636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToBytes32Map",
									"nameLocation": "2228:19:4",
									"nodeType": "StructDefinition",
									"scope": 2745,
									"src": "2221:150:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "2739:79:4",
										"statements": [
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1652,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "2750:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2754:7:4",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1638,
															"src": "2750:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1656,
														"indexExpression": {
															"id": 1654,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2762:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2750:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1657,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "2769:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2750:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "2750:24:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1663,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2806:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1660,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "2792:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2796:5:4",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1634,
															"src": "2792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2802:3:4",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2968,
														"src": "2792:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2950_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$2950_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1665,
												"nodeType": "Return",
												"src": "2785:25:4"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "2379:222:4",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "2616:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2658:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2630:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1642,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1641,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"2630:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "2630:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "2630:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2680:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2672:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2702:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2694:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:95:4"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2733:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1649,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2733:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2732:6:4"
									},
									"scope": 2745,
									"src": "2607:211:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "3079:81:4",
										"statements": [
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3090:23:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1678,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "3097:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3101:7:4",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1638,
															"src": "3097:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1681,
														"indexExpression": {
															"id": 1680,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "3109:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3097:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "3090:23:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1687,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "3148:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1684,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "3131:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3135:5:4",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1634,
															"src": "3131:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3141:6:4",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2986,
														"src": "3131:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2950_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$2950_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3131:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1689,
												"nodeType": "Return",
												"src": "3124:28:4"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "2826:161:4",
										"text": " @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "3002:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3037:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3009:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1669,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3009:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "3009:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "3009:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3050:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3042:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1672,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:46:4"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3073:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3073:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3072:6:4"
									},
									"scope": 2745,
									"src": "2993:167:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "3337:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1705,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "3374:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1702,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "3355:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3359:5:4",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1634,
															"src": "3355:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3365:8:4",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3004,
														"src": "3355:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$2950_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$2950_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3355:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1707,
												"nodeType": "Return",
												"src": "3348:30:4"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "3168:70:4",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "3253:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3290:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "3262:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1693,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3262:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "3262:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "3262:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3303:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "3295:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:46:4"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "3331:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3331:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:6:4"
									},
									"scope": 2745,
									"src": "3244:142:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "3562:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 1718,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "3580:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3584:5:4",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1634,
															"src": "3580:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3590:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3019,
														"src": "3580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$2950_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$2950_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3580:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1717,
												"id": 1722,
												"nodeType": "Return",
												"src": "3573:25:4"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "3394:81:4",
										"text": " @dev Returns the number of key-value pairs in the map. O(1)."
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "3490:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3525:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3497:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1711,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3497:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "3497:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "3497:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3496:33:4"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3553:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:9:4"
									},
									"scope": 2745,
									"src": "3481:125:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "4072:93:4",
										"statements": [
											{
												"assignments": [
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "4091:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1752,
														"src": "4083:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1737,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"arguments": [
														{
															"id": 1742,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "4110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1739,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "4097:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4101:5:4",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1634,
															"src": "4097:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4107:2:4",
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3037,
														"src": "4097:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$2950_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$2950_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4097:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4083:33:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1745,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "4135:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"id": 1746,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "4140:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4144:7:4",
																"memberName": "_values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1638,
																"src": "4140:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 1749,
															"indexExpression": {
																"id": 1748,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "4152:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4140:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1750,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4134:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1751,
												"nodeType": "Return",
												"src": "4127:30:4"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "3614:351:4",
										"text": " @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "3980:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4011:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "3983:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1726,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3983:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "3983:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "3983:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "4016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:48:4"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "4054:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "4063:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4053:18:4"
									},
									"scope": 2745,
									"src": "3971:194:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "4412:205:4",
										"statements": [
											{
												"assignments": [
													1767
												],
												"declarations": [
													{
														"constant": false,
														"id": 1767,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4431:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1796,
														"src": "4423:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1766,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4423:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1768,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "4439:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4443:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "4439:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1771,
													"indexExpression": {
														"id": 1770,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "4451:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4439:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4423:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1773,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "4470:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4479:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1774,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4479:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4479:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4470:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "4563:47:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4586:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"id": 1791,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "4592:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1792,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4585:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1765,
															"id": 1793,
															"nodeType": "Return",
															"src": "4578:20:4"
														}
													]
												},
												"id": 1795,
												"nodeType": "IfStatement",
												"src": "4466:144:4",
												"trueBody": {
													"id": 1789,
													"nodeType": "Block",
													"src": "4491:66:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1780,
																				"name": "map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1757,
																				"src": "4523:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				}
																			},
																			{
																				"id": 1781,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "4528:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1779,
																			"name": "contains",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1709,
																				1938,
																				2151,
																				2400,
																				2622
																			],
																			"referencedDeclaration": 1709,
																			"src": "4514:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																				"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																			}
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4514:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4542:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4534:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1783,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4534:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4534:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4513:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1765,
															"id": 1788,
															"nodeType": "Return",
															"src": "4506:39:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "4173:133:4",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "4321:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4356:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4328:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4328:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "4328:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "4328:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4369:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4361:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:46:4"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4397:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4397:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4403:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:15:4"
									},
									"scope": 2745,
									"src": "4312:305:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "4868:160:4",
										"statements": [
											{
												"assignments": [
													1809
												],
												"declarations": [
													{
														"constant": false,
														"id": 1809,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4887:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "4879:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1808,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1814,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1810,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "4895:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4899:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "4895:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1813,
													"indexExpression": {
														"id": 1812,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "4907:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4895:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1816,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "4930:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4939:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4930:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1820,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1801,
																		"src": "4953:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		}
																	},
																	{
																		"id": 1821,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "4958:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1819,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1709,
																		1938,
																		2151,
																		2400,
																		2622
																	],
																	"referencedDeclaration": 1709,
																	"src": "4944:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4944:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4930:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4964:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
																"typeString": "literal_string \"EnumerableMap: nonexistent key\""
															},
															"value": "EnumerableMap: nonexistent key"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
																"typeString": "literal_string \"EnumerableMap: nonexistent key\""
															}
														],
														"id": 1815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4922:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4922:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "4922:75:4"
											},
											{
												"expression": {
													"id": 1827,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1809,
													"src": "5015:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1828,
												"nodeType": "Return",
												"src": "5008:12:4"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "4625:146:4",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "4786:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4818:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "4790:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4790:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "4790:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "4790:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4831:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "4823:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4789:46:4"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "4859:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4858:9:4"
									},
									"scope": 2745,
									"src": "4777:251:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "5471:140:4",
										"statements": [
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5490:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "5482:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1843,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5482:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1845,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "5498:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5502:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "5498:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1848,
													"indexExpression": {
														"id": 1847,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "5510:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5498:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5482:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1851,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "5533:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5542:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5533:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1855,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "5556:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		}
																	},
																	{
																		"id": 1856,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "5561:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1854,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1709,
																		1938,
																		2151,
																		2400,
																		2622
																	],
																	"referencedDeclaration": 1709,
																	"src": "5547:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5533:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1859,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "5567:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5525:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5525:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "5525:55:4"
											},
											{
												"expression": {
													"id": 1862,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1844,
													"src": "5598:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1842,
												"id": 1863,
												"nodeType": "Return",
												"src": "5591:12:4"
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "5036:276:4",
										"text": " @dev Same as {_get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {_tryGet}."
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "5327:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5369:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5341:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1832,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"5341:19:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "5341:19:4"
													},
													"referencedDeclaration": 1639,
													"src": "5341:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5391:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5383:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:108:4"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5462:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5462:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5461:9:4"
									},
									"scope": 2745,
									"src": "5318:293:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToUintMap",
									"id": 1869,
									"members": [
										{
											"constant": false,
											"id": 1868,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5695:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1869,
											"src": "5675:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 1867,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1866,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"5675:19:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1639,
													"src": "5675:19:4"
												},
												"referencedDeclaration": 1639,
												"src": "5675:19:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToUintMap",
									"nameLocation": "5650:13:4",
									"nodeType": "StructDefinition",
									"scope": 2745,
									"src": "5643:66:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "6071:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1883,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "6093:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6097:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1868,
															"src": "6093:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1887,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "6113:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6105:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1885,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6105:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6105:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 1891,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1877,
																	"src": "6127:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6119:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1889,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6119:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6119:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1882,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1896,
															2109,
															2346,
															2586
														],
														"referencedDeclaration": 1667,
														"src": "6089:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6089:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1894,
												"nodeType": "Return",
												"src": "6082:52:4"
											}
										]
									},
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "5717:222:4",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "5954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5990:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "5968:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1872,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1871,
														"name": "UintToUintMap",
														"nameLocations": [
															"5968:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "5968:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "5968:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6012:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "6004:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "6026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5957:89:4"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "6065:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6065:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6064:6:4"
									},
									"scope": 2745,
									"src": "5945:197:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "6388:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1908,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "6413:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6417:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1868,
															"src": "6413:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1912,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "6433:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6425:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1910,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6425:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6425:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1907,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1691,
															1917,
															2130,
															2373,
															2604
														],
														"referencedDeclaration": 1691,
														"src": "6406:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6406:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1915,
												"nodeType": "Return",
												"src": "6399:39:4"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "6150:152:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6317:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6346:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6324:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1898,
														"name": "UintToUintMap",
														"nameLocations": [
															"6324:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "6324:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "6324:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6359:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6351:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:40:4"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6382:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6382:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6381:6:4"
									},
									"scope": 2745,
									"src": "6308:138:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "6617:60:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1929,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "6644:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6648:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1868,
															"src": "6644:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1933,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "6664:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6656:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1931,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6656:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6656:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1928,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1938,
															2151,
															2400,
															2622
														],
														"referencedDeclaration": 1709,
														"src": "6635:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1936,
												"nodeType": "Return",
												"src": "6628:41:4"
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "6454:70:4",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6539:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6570:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6548:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1919,
														"name": "UintToUintMap",
														"nameLocations": [
															"6548:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "6548:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "6548:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6583:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6575:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6547:40:4"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6611:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6611:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6610:6:4"
									},
									"scope": 2745,
									"src": "6530:147:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "6840:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1948,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "6865:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6869:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1868,
															"src": "6865:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 1947,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1953,
															2166,
															2415,
															2637
														],
														"referencedDeclaration": 1724,
														"src": "6858:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1951,
												"nodeType": "Return",
												"src": "6851:25:4"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "6685:74:4",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 1953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6774:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6803:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6781:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1941,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1940,
														"name": "UintToUintMap",
														"nameLocations": [
															"6781:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "6781:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "6781:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6780:27:4"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6831:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:9:4"
									},
									"scope": 2745,
									"src": "6765:119:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "7327:119:4",
										"statements": [
											{
												"assignments": [
													1967,
													1969
												],
												"declarations": [
													{
														"constant": false,
														"id": 1967,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "7347:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1986,
														"src": "7339:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1966,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7339:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1969,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7360:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1986,
														"src": "7352:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1968,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7352:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1971,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "7372:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7376:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1868,
															"src": "7372:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 1973,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "7384:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1970,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1753,
															1987,
															2206,
															2455,
															2668
														],
														"referencedDeclaration": 1753,
														"src": "7369:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7369:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7338:52:4"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1978,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "7417:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7409:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1976,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7409:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7409:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "7431:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7423:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1980,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7423:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7423:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1984,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7408:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1985,
												"nodeType": "Return",
												"src": "7401:37:4"
											}
										]
									},
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "6892:334:4",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7241:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7266:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "7244:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1955,
														"name": "UintToUintMap",
														"nameLocations": [
															"7244:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "7244:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "7244:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7279:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "7271:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7243:42:4"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "7309:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7309:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "7318:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7318:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7308:18:4"
									},
									"scope": 2745,
									"src": "7232:214:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "7687:126:4",
										"statements": [
											{
												"assignments": [
													2001,
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7704:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "7699:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2000,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7699:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7721:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "7713:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2002,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2005,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "7737:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7741:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1868,
															"src": "7737:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2009,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1993,
																	"src": "7757:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7749:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2007,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7749:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7749:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2004,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2021,
															2246,
															2495,
															2699
														],
														"referencedDeclaration": 1797,
														"src": "7730:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7730:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7698:64:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2013,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "7781:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2016,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "7798:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7790:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2014,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7790:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7790:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2018,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7780:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2019,
												"nodeType": "Return",
												"src": "7773:32:4"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "7454:133:4",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "7602:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7631:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "7609:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1989,
														"name": "UintToUintMap",
														"nameLocations": [
															"7609:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "7609:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "7609:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7644:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "7636:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7636:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7608:40:4"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "7672:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7672:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "7678:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:15:4"
									},
									"scope": 2745,
									"src": "7593:220:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "8058:64:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2035,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "8088:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8092:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1868,
																	"src": "8088:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2039,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2027,
																			"src": "8108:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8100:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2037,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8100:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8100:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2034,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1865,
																	2045,
																	2072,
																	2276,
																	2309,
																	2525,
																	2558,
																	2720,
																	2744
																],
																"referencedDeclaration": 1830,
																"src": "8084:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8084:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8076:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8076:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2043,
												"nodeType": "Return",
												"src": "8069:45:4"
											}
										]
									},
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "7821:146:4",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "7982:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8008:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "7986:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2023,
														"name": "UintToUintMap",
														"nameLocations": [
															"7986:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "7986:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "7986:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8021:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "8013:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7985:40:4"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "8049:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8049:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8048:9:4"
									},
									"scope": 2745,
									"src": "7973:149:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "8557:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2061,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "8587:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8591:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1868,
																	"src": "8587:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2065,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "8607:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8599:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2063,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8599:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8599:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2067,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "8613:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2060,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1865,
																	2045,
																	2072,
																	2276,
																	2309,
																	2525,
																	2558,
																	2720,
																	2744
																],
																"referencedDeclaration": 1865,
																"src": "8583:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8583:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2058,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8575:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8575:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2057,
												"id": 2070,
												"nodeType": "Return",
												"src": "8568:59:4"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "8130:274:4",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "8419:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8455:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "8433:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "UintToUintMap",
														"nameLocations": [
															"8433:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1869,
														"src": "8433:13:4"
													},
													"referencedDeclaration": 1869,
													"src": "8433:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1869_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8477:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "8469:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8505:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "8491:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2052,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8491:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8422:102:4"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "8548:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:9:4"
									},
									"scope": 2745,
									"src": "8410:225:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToAddressMap",
									"id": 2076,
									"members": [
										{
											"constant": false,
											"id": 2075,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8725:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2076,
											"src": "8705:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2074,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2073,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"8705:19:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1639,
													"src": "8705:19:4"
												},
												"referencedDeclaration": 1639,
												"src": "8705:19:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToAddressMap",
									"nameLocation": "8677:16:4",
									"nodeType": "StructDefinition",
									"scope": 2745,
									"src": "8670:69:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "9104:89:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2090,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "9126:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9130:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2075,
															"src": "9126:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2094,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9146:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9138:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2092,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9138:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9138:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2102,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2084,
																					"src": "9176:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9168:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2100,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9168:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9168:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9160:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2098,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9160:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9160:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9152:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2096,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9152:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9152:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2089,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1896,
															2109,
															2346,
															2586
														],
														"referencedDeclaration": 1667,
														"src": "9122:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9122:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2088,
												"id": 2107,
												"nodeType": "Return",
												"src": "9115:70:4"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "8747:222:4",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "8984:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9023:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "8998:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2078,
														"name": "UintToAddressMap",
														"nameLocations": [
															"8998:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "8998:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "8998:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9045:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "9037:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9067:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "9059:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9059:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8987:92:4"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "9098:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9098:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9097:6:4"
									},
									"scope": 2745,
									"src": "8975:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "9442:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2121,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "9467:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9471:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2075,
															"src": "9467:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2125,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "9487:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9479:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2123,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9479:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9479:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2120,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1691,
															1917,
															2130,
															2373,
															2604
														],
														"referencedDeclaration": 1691,
														"src": "9460:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9460:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2119,
												"id": 2128,
												"nodeType": "Return",
												"src": "9453:39:4"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "9201:152:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "9368:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9400:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "9375:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2111,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9375:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "9375:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "9375:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9413:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "9405:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9374:43:4"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "9436:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9436:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9435:6:4"
									},
									"scope": 2745,
									"src": "9359:141:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "9674:60:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2142,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "9701:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9705:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2075,
															"src": "9701:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2146,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "9721:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9713:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9713:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9713:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2141,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1938,
															2151,
															2400,
															2622
														],
														"referencedDeclaration": 1709,
														"src": "9692:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9692:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2149,
												"nodeType": "Return",
												"src": "9685:41:4"
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "9508:70:4",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "9593:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9627:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "9602:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2132,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9602:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "9602:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "9602:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9640:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "9632:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9601:43:4"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "9668:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9668:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9667:6:4"
									},
									"scope": 2745,
									"src": "9584:150:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "9900:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2161,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "9925:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9929:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2075,
															"src": "9925:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2160,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1953,
															2166,
															2415,
															2637
														],
														"referencedDeclaration": 1724,
														"src": "9918:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9918:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2159,
												"id": 2164,
												"nodeType": "Return",
												"src": "9911:25:4"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "9742:74:4",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9831:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9863:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "9838:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2153,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9838:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "9838:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "9838:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9837:30:4"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "9891:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9890:9:4"
									},
									"scope": 2745,
									"src": "9822:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "10390:137:4",
										"statements": [
											{
												"assignments": [
													2180,
													2182
												],
												"declarations": [
													{
														"constant": false,
														"id": 2180,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "10410:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "10402:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2179,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10402:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2182,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10423:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "10415:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2181,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10415:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2188,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2184,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "10435:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10439:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2075,
															"src": "10435:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2186,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "10447:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2183,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1753,
															1987,
															2206,
															2455,
															2668
														],
														"referencedDeclaration": 1753,
														"src": "10432:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10432:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:52:4"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2191,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "10480:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10472:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2189,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10472:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10472:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2199,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "10510:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10502:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2197,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10502:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10502:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10494:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2195,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10494:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10494:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10486:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10486:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10486:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2203,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10471:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2204,
												"nodeType": "Return",
												"src": "10464:55:4"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "9952:334:4",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "10301:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10329:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "10304:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2168,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10304:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "10304:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "10304:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10342:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "10334:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10303:45:4"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "10372:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10372:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "10381:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10381:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10371:18:4"
									},
									"scope": 2745,
									"src": "10292:235:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "10771:144:4",
										"statements": [
											{
												"assignments": [
													2220,
													2222
												],
												"declarations": [
													{
														"constant": false,
														"id": 2220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10788:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2245,
														"src": "10783:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10783:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2222,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10805:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2245,
														"src": "10797:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2221,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10797:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2231,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2224,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "10821:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10825:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2075,
															"src": "10821:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2228,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "10841:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2226,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10833:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10833:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2223,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2021,
															2246,
															2495,
															2699
														],
														"referencedDeclaration": 1797,
														"src": "10814:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10814:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10782:64:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2232,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "10865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2239,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2222,
																					"src": "10898:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10890:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2237,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10890:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10890:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10882:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2235,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10882:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10882:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10874:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2233,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10874:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10874:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2243,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10864:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 2218,
												"id": 2244,
												"nodeType": "Return",
												"src": "10857:50:4"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "10535:133:4",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "10683:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10715:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10690:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2208,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10690:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "10690:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "10690:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10728:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10720:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10689:43:4"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10756:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10756:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10762:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10762:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10755:15:4"
									},
									"scope": 2745,
									"src": "10674:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "11163:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2264,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2250,
																						"src": "11209:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2265,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11213:6:4",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2075,
																					"src": "11209:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2268,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2252,
																							"src": "11229:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2267,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11221:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2266,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "11221:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2269,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11221:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2263,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1830,
																					1865,
																					2045,
																					2072,
																					2276,
																					2309,
																					2525,
																					2558,
																					2720,
																					2744
																				],
																				"referencedDeclaration": 1830,
																				"src": "11205:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																				}
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11205:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11197:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2261,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11197:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11197:38:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11189:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2259,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11189:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11189:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11181:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11181:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11181:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2256,
												"id": 2274,
												"nodeType": "Return",
												"src": "11174:63:4"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "10923:146:4",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "11084:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11113:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "11088:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2248,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11088:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "11088:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "11088:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11126:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "11118:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11087:43:4"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "11154:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11153:9:4"
									},
									"scope": 2745,
									"src": "11075:170:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "11683:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2296,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2280,
																						"src": "11729:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2297,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11733:6:4",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2075,
																					"src": "11729:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2300,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2282,
																							"src": "11749:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2299,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11741:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2298,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "11741:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2301,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11741:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2302,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2284,
																					"src": "11755:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2295,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1830,
																					1865,
																					2045,
																					2072,
																					2276,
																					2309,
																					2525,
																					2558,
																					2720,
																					2744
																				],
																				"referencedDeclaration": 1865,
																				"src": "11725:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																				}
																			},
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11725:43:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11717:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2293,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11717:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11717:52:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2291,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11709:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11709:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11701:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2289,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11701:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11701:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2288,
												"id": 2307,
												"nodeType": "Return",
												"src": "11694:77:4"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "11253:274:4",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "11542:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11581:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "11556:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2278,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11556:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2076,
														"src": "11556:16:4"
													},
													"referencedDeclaration": 2076,
													"src": "11556:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2076_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11603:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "11595:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11595:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11631:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "11617:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11617:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11545:105:4"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "11674:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11674:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11673:9:4"
									},
									"scope": 2745,
									"src": "11533:246:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.AddressToUintMap",
									"id": 2313,
									"members": [
										{
											"constant": false,
											"id": 2312,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "11869:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2313,
											"src": "11849:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2311,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2310,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"11849:19:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1639,
													"src": "11849:19:4"
												},
												"referencedDeclaration": 1639,
												"src": "11849:19:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressToUintMap",
									"nameLocation": "11821:16:4",
									"nodeType": "StructDefinition",
									"scope": 2745,
									"src": "11814:69:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "12248:89:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2327,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "12270:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12274:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "12270:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2335,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "12306:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12298:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2333,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12298:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12298:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12290:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2331,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12290:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12290:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12282:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2329,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12282:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12282:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "12322:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12314:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2339,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12314:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12314:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2326,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1896,
															2109,
															2346,
															2586
														],
														"referencedDeclaration": 1667,
														"src": "12266:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12266:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2325,
												"id": 2344,
												"nodeType": "Return",
												"src": "12259:70:4"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "11891:222:4",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "12128:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12167:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "12142:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2315,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12142:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "12142:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "12142:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12189:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "12181:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12181:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12211:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "12203:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12131:92:4"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "12242:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12242:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12241:6:4"
									},
									"scope": 2745,
									"src": "12119:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "12586:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2358,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "12611:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12615:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "12611:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2366,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2352,
																					"src": "12647:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12639:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2364,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12639:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12639:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12631:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2362,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12631:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12631:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12623:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2360,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12623:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12623:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2357,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1691,
															1917,
															2130,
															2373,
															2604
														],
														"referencedDeclaration": 1691,
														"src": "12604:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12604:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2356,
												"id": 2371,
												"nodeType": "Return",
												"src": "12597:57:4"
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "12345:152:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "12512:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12544:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "12519:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2348,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12519:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "12519:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "12519:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12557:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "12549:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12518:43:4"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "12580:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12580:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12579:6:4"
									},
									"scope": 2745,
									"src": "12503:159:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "12836:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2385,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12863:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12867:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "12863:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2393,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2379,
																					"src": "12899:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12891:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2391,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12891:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12891:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12883:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2389,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12883:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12883:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12875:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2387,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12875:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12875:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2384,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1938,
															2151,
															2400,
															2622
														],
														"referencedDeclaration": 1709,
														"src": "12854:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12854:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2383,
												"id": 2398,
												"nodeType": "Return",
												"src": "12847:59:4"
											}
										]
									},
									"documentation": {
										"id": 2374,
										"nodeType": "StructuredDocumentation",
										"src": "12670:70:4",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "12755:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12789:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "12764:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2376,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2375,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12764:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "12764:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "12764:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12802:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "12794:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12763:43:4"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "12830:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12830:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12829:6:4"
									},
									"scope": 2745,
									"src": "12746:168:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "13080:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2410,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "13105:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13109:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "13105:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2409,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1953,
															2166,
															2415,
															2637
														],
														"referencedDeclaration": 1724,
														"src": "13098:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13098:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2408,
												"id": 2413,
												"nodeType": "Return",
												"src": "13091:25:4"
											}
										]
									},
									"documentation": {
										"id": 2401,
										"nodeType": "StructuredDocumentation",
										"src": "12922:74:4",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "13011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13043:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "13018:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2402,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13018:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "13018:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "13018:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13017:30:4"
									},
									"returnParameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "13071:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13071:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13070:9:4"
									},
									"scope": 2745,
									"src": "13002:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "13570:137:4",
										"statements": [
											{
												"assignments": [
													2429,
													2431
												],
												"declarations": [
													{
														"constant": false,
														"id": 2429,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "13590:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 2454,
														"src": "13582:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2428,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13582:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2431,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "13603:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2454,
														"src": "13595:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2430,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13595:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2437,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2433,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "13615:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13619:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "13615:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2435,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "13627:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2432,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1753,
															1987,
															2206,
															2455,
															2668
														],
														"referencedDeclaration": 1753,
														"src": "13612:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13612:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13581:52:4"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2444,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2429,
																					"src": "13676:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13668:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2442,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13668:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13668:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13660:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2440,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "13660:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13660:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13652:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2438,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13652:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13652:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "13692:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13684:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2448,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13684:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13684:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2452,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13651:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 2427,
												"id": 2453,
												"nodeType": "Return",
												"src": "13644:55:4"
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "13132:334:4",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "13481:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13509:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "13484:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2417,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13484:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "13484:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "13484:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13522:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "13514:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13483:45:4"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "13552:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13552:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "13561:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13561:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13551:18:4"
									},
									"scope": 2745,
									"src": "13472:235:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "13951:144:4",
										"statements": [
											{
												"assignments": [
													2469,
													2471
												],
												"declarations": [
													{
														"constant": false,
														"id": 2469,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13968:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2494,
														"src": "13963:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2468,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2471,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "13985:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2494,
														"src": "13977:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2470,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13977:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2486,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2473,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2459,
																"src": "14001:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14005:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2312,
															"src": "14001:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2481,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2461,
																					"src": "14037:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14029:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2479,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "14029:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14029:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14021:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2477,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14021:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14021:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14013:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2475,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "14013:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14013:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2472,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2021,
															2246,
															2495,
															2699
														],
														"referencedDeclaration": 1797,
														"src": "13994:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13994:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13962:82:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2487,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2469,
															"src": "14063:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2471,
																	"src": "14080:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14072:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2488,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14072:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14072:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2492,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14062:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2467,
												"id": 2493,
												"nodeType": "Return",
												"src": "14055:32:4"
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "13715:133:4",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "13863:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13895:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "13870:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2457,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13870:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "13870:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "13870:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13908:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "13900:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13869:43:4"
									},
									"returnParameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "13936:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13936:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "13942:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13942:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13935:15:4"
									},
									"scope": 2745,
									"src": "13854:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "14343:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2509,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2499,
																		"src": "14373:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14377:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2312,
																	"src": "14373:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2517,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2501,
																							"src": "14409:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2516,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14401:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2515,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14401:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14401:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14393:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14393:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14393:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14385:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2511,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "14385:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14385:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2508,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1865,
																	2045,
																	2072,
																	2276,
																	2309,
																	2525,
																	2558,
																	2720,
																	2744
																],
																"referencedDeclaration": 1830,
																"src": "14369:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14369:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14361:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14361:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14361:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2505,
												"id": 2523,
												"nodeType": "Return",
												"src": "14354:63:4"
											}
										]
									},
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "14103:146:4",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "14264:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14293:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "14268:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2497,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14268:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "14268:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "14268:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14306:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "14298:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14298:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14267:43:4"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "14334:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14334:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14333:9:4"
									},
									"scope": 2745,
									"src": "14255:170:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "14863:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2541,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2529,
																		"src": "14893:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14897:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2312,
																	"src": "14893:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2549,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2531,
																							"src": "14929:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2548,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14921:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2547,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14921:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14921:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14913:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2545,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14913:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14913:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14905:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2543,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "14905:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14905:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2553,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "14937:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2540,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1865,
																	2045,
																	2072,
																	2276,
																	2309,
																	2525,
																	2558,
																	2720,
																	2744
																],
																"referencedDeclaration": 1865,
																"src": "14889:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14889:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14881:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14881:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14881:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2537,
												"id": 2556,
												"nodeType": "Return",
												"src": "14874:77:4"
											}
										]
									},
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "14433:274:4",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "14722:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14761:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "14736:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2527,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14736:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2313,
														"src": "14736:16:4"
													},
													"referencedDeclaration": 2313,
													"src": "14736:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2313_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14783:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "14775:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14811:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "14797:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14797:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14725:105:4"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "14854:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14853:9:4"
									},
									"scope": 2745,
									"src": "14713:246:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToUintMap",
									"id": 2562,
									"members": [
										{
											"constant": false,
											"id": 2561,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "15049:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "15029:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2560,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2559,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"15029:19:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1639,
													"src": "15029:19:4"
												},
												"referencedDeclaration": 1639,
												"src": "15029:19:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToUintMap",
									"nameLocation": "15001:16:4",
									"nodeType": "StructDefinition",
									"scope": 2745,
									"src": "14994:69:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2585,
										"nodeType": "Block",
										"src": "15428:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2576,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "15450:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15454:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "15450:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2578,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2568,
															"src": "15462:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "15475:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15467:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2579,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "15467:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15467:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2575,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1667,
															1896,
															2109,
															2346,
															2586
														],
														"referencedDeclaration": 1667,
														"src": "15446:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15446:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2574,
												"id": 2584,
												"nodeType": "Return",
												"src": "15439:43:4"
											}
										]
									},
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "15071:222:4",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "15308:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15347:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "15322:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2564,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"15322:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "15322:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "15322:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15369:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "15361:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15391:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "15383:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15311:92:4"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "15422:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15422:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15421:6:4"
									},
									"scope": 2745,
									"src": "15299:191:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "15739:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2598,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "15764:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15768:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "15764:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2600,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "15776:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2597,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1691,
															1917,
															2130,
															2373,
															2604
														],
														"referencedDeclaration": 1691,
														"src": "15757:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15757:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2596,
												"id": 2602,
												"nodeType": "Return",
												"src": "15750:30:4"
											}
										]
									},
									"documentation": {
										"id": 2587,
										"nodeType": "StructuredDocumentation",
										"src": "15498:152:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "15665:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15697:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "15672:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2588,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"15672:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "15672:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "15672:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15710:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "15702:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15702:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15671:43:4"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "15733:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15733:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15732:6:4"
									},
									"scope": 2745,
									"src": "15656:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "15962:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2616,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2608,
																"src": "15989:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2617,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15993:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "15989:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2618,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2610,
															"src": "16001:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2615,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709,
															1938,
															2151,
															2400,
															2622
														],
														"referencedDeclaration": 1709,
														"src": "15980:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15980:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2614,
												"id": 2620,
												"nodeType": "Return",
												"src": "15973:32:4"
											}
										]
									},
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "15796:70:4",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "15881:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15915:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "15890:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2606,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"15890:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "15890:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "15890:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15928:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "15920:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15889:43:4"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "15956:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15956:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15955:6:4"
									},
									"scope": 2745,
									"src": "15872:141:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2636,
										"nodeType": "Block",
										"src": "16179:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2632,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "16204:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16208:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "16204:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2631,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1953,
															2166,
															2415,
															2637
														],
														"referencedDeclaration": 1724,
														"src": "16197:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16197:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2630,
												"id": 2635,
												"nodeType": "Return",
												"src": "16190:25:4"
											}
										]
									},
									"documentation": {
										"id": 2623,
										"nodeType": "StructuredDocumentation",
										"src": "16021:74:4",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "16110:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16142:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "16117:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2624,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16117:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "16117:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "16117:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16116:30:4"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "16170:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16170:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16169:9:4"
									},
									"scope": 2745,
									"src": "16101:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2667,
										"nodeType": "Block",
										"src": "16669:110:4",
										"statements": [
											{
												"assignments": [
													2651,
													2653
												],
												"declarations": [
													{
														"constant": false,
														"id": 2651,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "16689:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 2667,
														"src": "16681:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2650,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16681:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2653,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "16702:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2667,
														"src": "16694:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2652,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16694:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2655,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "16714:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16718:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "16714:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2657,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2643,
															"src": "16726:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2654,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1753,
															1987,
															2206,
															2455,
															2668
														],
														"referencedDeclaration": 1753,
														"src": "16711:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16711:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16680:52:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2660,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2651,
															"src": "16751:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2653,
																	"src": "16764:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16756:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2661,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16756:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16756:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2665,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16750:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 2649,
												"id": 2666,
												"nodeType": "Return",
												"src": "16743:28:4"
											}
										]
									},
									"documentation": {
										"id": 2638,
										"nodeType": "StructuredDocumentation",
										"src": "16231:334:4",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "16580:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16608:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "16583:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2640,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2639,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16583:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "16583:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "16583:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "16621:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "16613:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16582:45:4"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "16651:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "16660:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16660:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16650:18:4"
									},
									"scope": 2745,
									"src": "16571:208:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2698,
										"nodeType": "Block",
										"src": "17023:117:4",
										"statements": [
											{
												"assignments": [
													2682,
													2684
												],
												"declarations": [
													{
														"constant": false,
														"id": 2682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17040:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2698,
														"src": "17035:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17035:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2684,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "17057:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2698,
														"src": "17049:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2683,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17049:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2690,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2686,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2672,
																"src": "17073:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17077:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "17073:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2688,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "17085:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2685,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2021,
															2246,
															2495,
															2699
														],
														"referencedDeclaration": 1797,
														"src": "17066:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17066:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17034:55:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2691,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "17108:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2684,
																	"src": "17125:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17117:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17117:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17117:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2696,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17107:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2680,
												"id": 2697,
												"nodeType": "Return",
												"src": "17100:32:4"
											}
										]
									},
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "16787:133:4",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "16935:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16967:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "16942:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16942:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "16942:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "16942:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16980:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "16972:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16941:43:4"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "17008:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17008:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "17014:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17014:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17007:15:4"
									},
									"scope": 2745,
									"src": "16926:214:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "17388:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2713,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2703,
																		"src": "17418:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17422:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2561,
																	"src": "17418:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2715,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2705,
																	"src": "17430:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2712,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1865,
																	2045,
																	2072,
																	2276,
																	2309,
																	2525,
																	2558,
																	2720,
																	2744
																],
																"referencedDeclaration": 1830,
																"src": "17414:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17414:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17406:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2710,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17406:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17406:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2709,
												"id": 2718,
												"nodeType": "Return",
												"src": "17399:36:4"
											}
										]
									},
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "17148:146:4",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "17309:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17338:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "17313:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2701,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17313:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "17313:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "17313:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17351:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "17343:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2704,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17312:43:4"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "17379:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17379:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17378:9:4"
									},
									"scope": 2745,
									"src": "17300:143:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2743,
										"nodeType": "Block",
										"src": "17881:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2736,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2724,
																		"src": "17911:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17915:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2561,
																	"src": "17911:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2738,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "17923:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2739,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2728,
																	"src": "17928:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1639_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2735,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1865,
																	2045,
																	2072,
																	2276,
																	2309,
																	2525,
																	2558,
																	2720,
																	2744
																],
																"referencedDeclaration": 1865,
																"src": "17907:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1639_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17907:34:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17899:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17899:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2732,
												"id": 2742,
												"nodeType": "Return",
												"src": "17892:50:4"
											}
										]
									},
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "17451:274:4",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "17740:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17779:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "17754:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2722,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17754:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "17754:16:4"
													},
													"referencedDeclaration": 2562,
													"src": "17754:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2562_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17801:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "17793:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2725,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17829:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "17815:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17815:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17743:105:4"
									},
									"returnParameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "17872:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17871:9:4"
									},
									"scope": 2745,
									"src": "17731:219:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2746,
							"src": "1668:16285:4",
							"usedErrors": []
						}
					],
					"src": "209:17744:4"
				},
				"id": 4
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							3358
						]
					},
					"id": 3359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "209:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2748,
								"nodeType": "StructuredDocumentation",
								"src": "236:1123:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 3358,
							"linearizedBaseContracts": [
								3358
							],
							"name": "EnumerableSet",
							"nameLocation": "1369:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2756,
									"members": [
										{
											"constant": false,
											"id": 2751,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1905:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 2756,
											"src": "1895:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2749,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2750,
												"nodeType": "ArrayTypeName",
												"src": "1895:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2755,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "2076:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 2756,
											"src": "2048:36:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2754,
												"keyType": {
													"id": 2752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2048:27:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1846:3:5",
									"nodeType": "StructDefinition",
									"scope": 3358,
									"src": "1839:253:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "2339:345:5",
										"statements": [
											{
												"condition": {
													"id": 2771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2354:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 2768,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2760,
																"src": "2365:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 2769,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "2370:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2767,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "2355:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2355:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2795,
													"nodeType": "Block",
													"src": "2638:39:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2660:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2766,
															"id": 2794,
															"nodeType": "Return",
															"src": "2653:12:5"
														}
													]
												},
												"id": 2796,
												"nodeType": "IfStatement",
												"src": "2350:327:5",
												"trueBody": {
													"id": 2792,
													"nodeType": "Block",
													"src": "2378:254:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2777,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "2410:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2772,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2760,
																			"src": "2393:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2397:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2751,
																		"src": "2393:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2405:4:5",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2393:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2393:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2779,
															"nodeType": "ExpressionStatement",
															"src": "2393:23:5"
														},
														{
															"expression": {
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 2780,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2760,
																			"src": "2554:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2558:8:5",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2755,
																		"src": "2554:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2784,
																	"indexExpression": {
																		"id": 2782,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "2567:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2554:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 2785,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2760,
																			"src": "2576:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2580:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2751,
																		"src": "2576:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2588:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2576:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2554:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2789,
															"nodeType": "ExpressionStatement",
															"src": "2554:40:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2616:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2766,
															"id": 2791,
															"nodeType": "Return",
															"src": "2609:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2757,
										"nodeType": "StructuredDocumentation",
										"src": "2100:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2279:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2296:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2284:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2758,
														"name": "Set",
														"nameLocations": [
															"2284:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2756,
														"src": "2284:3:5"
													},
													"referencedDeclaration": 2756,
													"src": "2284:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:32:5"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2333:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2333:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:6:5"
									},
									"scope": 3358,
									"src": "2270:414:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "2932:1348:5",
										"statements": [
											{
												"assignments": [
													2810
												],
												"declarations": [
													{
														"constant": false,
														"id": 2810,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "3052:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 2881,
														"src": "3044:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2815,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2811,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "3065:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3069:8:5",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2755,
														"src": "3065:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2814,
													"indexExpression": {
														"id": 2813,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "3078:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3065:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3044:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2816,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "3101:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3115:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3101:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2879,
													"nodeType": "Block",
													"src": "4234:39:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4256:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2808,
															"id": 2878,
															"nodeType": "Return",
															"src": "4249:12:5"
														}
													]
												},
												"id": 2880,
												"nodeType": "IfStatement",
												"src": "3097:1176:5",
												"trueBody": {
													"id": 2876,
													"nodeType": "Block",
													"src": "3118:1110:5",
													"statements": [
														{
															"assignments": [
																2820
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2820,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3484:13:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2876,
																	"src": "3476:21:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2819,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3476:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2824,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2821,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2810,
																	"src": "3500:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3513:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3500:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3476:38:5"
														},
														{
															"assignments": [
																2826
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2826,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3537:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2876,
																	"src": "3529:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2825,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3529:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2832,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 2827,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2802,
																			"src": "3549:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3553:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2751,
																		"src": "3549:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3561:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3549:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3570:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3549:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3529:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2833,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2826,
																	"src": "3592:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2834,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2820,
																	"src": "3605:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3592:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2860,
															"nodeType": "IfStatement",
															"src": "3588:405:5",
															"trueBody": {
																"id": 2859,
																"nodeType": "Block",
																"src": "3620:373:5",
																"statements": [
																	{
																		"assignments": [
																			2837
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2837,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3647:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 2859,
																				"src": "3639:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2836,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3639:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2842,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 2838,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2802,
																					"src": "3659:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3663:7:5",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2751,
																				"src": "3659:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 2841,
																			"indexExpression": {
																				"id": 2840,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2826,
																				"src": "3671:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3659:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3639:42:5"
																	},
																	{
																		"expression": {
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2843,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2802,
																						"src": "3784:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2846,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3788:7:5",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2751,
																					"src": "3784:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 2847,
																				"indexExpression": {
																					"id": 2845,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2820,
																					"src": "3796:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3784:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2848,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2837,
																				"src": "3813:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3784:38:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2850,
																		"nodeType": "ExpressionStatement",
																		"src": "3784:38:5"
																	},
																	{
																		"expression": {
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2851,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2802,
																						"src": "3898:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2854,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3902:8:5",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2755,
																					"src": "3898:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 2855,
																				"indexExpression": {
																					"id": 2853,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2837,
																					"src": "3911:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3898:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2856,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2810,
																				"src": "3924:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3898:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2858,
																		"nodeType": "ExpressionStatement",
																		"src": "3898:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2861,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2802,
																			"src": "4074:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4078:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2751,
																		"src": "4074:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4086:3:5",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "4074:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4074:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2867,
															"nodeType": "ExpressionStatement",
															"src": "4074:17:5"
														},
														{
															"expression": {
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4162:26:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2868,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2802,
																			"src": "4169:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2869,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4173:8:5",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2755,
																		"src": "4169:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2871,
																	"indexExpression": {
																		"id": 2870,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2804,
																		"src": "4182:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4169:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2873,
															"nodeType": "ExpressionStatement",
															"src": "4162:26:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4212:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2808,
															"id": 2875,
															"nodeType": "Return",
															"src": "4205:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2799,
										"nodeType": "StructuredDocumentation",
										"src": "2692:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2869:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2889:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2877:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2800,
														"name": "Set",
														"nameLocations": [
															"2877:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2756,
														"src": "2877:3:5"
													},
													"referencedDeclaration": 2756,
													"src": "2877:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2902:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2894:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2803,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2894:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:32:5"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2926:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2926:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2925:6:5"
									},
									"scope": 3358,
									"src": "2860:1420:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2900,
										"nodeType": "Block",
										"src": "4445:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 2893,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "4463:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4467:8:5",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2755,
															"src": "4463:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 2896,
														"indexExpression": {
															"id": 2895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "4476:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4463:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4486:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4463:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2892,
												"id": 2899,
												"nodeType": "Return",
												"src": "4456:31:5"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "4288:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4375:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "4385:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2884,
														"name": "Set",
														"nameLocations": [
															"4385:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2756,
														"src": "4385:3:5"
													},
													"referencedDeclaration": 2756,
													"src": "4385:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4410:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "4402:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2887,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4384:32:5"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "4439:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4439:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:6:5"
									},
									"scope": 3358,
									"src": "4366:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2914,
										"nodeType": "Block",
										"src": "4646:44:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2910,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2905,
															"src": "4664:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2911,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4668:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2751,
														"src": "4664:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4676:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4664:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2909,
												"id": 2913,
												"nodeType": "Return",
												"src": "4657:25:5"
											}
										]
									},
									"documentation": {
										"id": 2902,
										"nodeType": "StructuredDocumentation",
										"src": "4503:72:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4590:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4610:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "4598:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2903,
														"name": "Set",
														"nameLocations": [
															"4598:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2756,
														"src": "4598:3:5"
													},
													"referencedDeclaration": 2756,
													"src": "4598:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:17:5"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "4637:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4636:9:5"
									},
									"scope": 3358,
									"src": "4581:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2931,
										"nodeType": "Block",
										"src": "5120:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 2926,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2919,
															"src": "5138:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2927,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5142:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2751,
														"src": "5138:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2929,
													"indexExpression": {
														"id": 2928,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2921,
														"src": "5150:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5138:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2925,
												"id": 2930,
												"nodeType": "Return",
												"src": "5131:25:5"
											}
										]
									},
									"documentation": {
										"id": 2916,
										"nodeType": "StructuredDocumentation",
										"src": "4698:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "5053:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5069:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "5057:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2917,
														"name": "Set",
														"nameLocations": [
															"5057:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2756,
														"src": "5057:3:5"
													},
													"referencedDeclaration": 2756,
													"src": "5057:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "5082:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "5074:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5056:32:5"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "5111:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:9:5"
									},
									"scope": 3358,
									"src": "5044:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "5788:37:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2942,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2936,
														"src": "5806:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5810:7:5",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2751,
													"src": "5806:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 2941,
												"id": 2944,
												"nodeType": "Return",
												"src": "5799:18:5"
											}
										]
									},
									"documentation": {
										"id": 2933,
										"nodeType": "StructuredDocumentation",
										"src": "5172:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5723:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5743:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "5731:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2934,
														"name": "Set",
														"nameLocations": [
															"5731:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2756,
														"src": "5731:3:5"
													},
													"referencedDeclaration": 2756,
													"src": "5731:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5730:17:5"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "5770:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2938,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5770:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2939,
													"nodeType": "ArrayTypeName",
													"src": "5770:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5769:18:5"
									},
									"scope": 3358,
									"src": "5714:111:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 2950,
									"members": [
										{
											"constant": false,
											"id": 2949,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5887:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2950,
											"src": "5883:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2948,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2947,
													"name": "Set",
													"nameLocations": [
														"5883:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2756,
													"src": "5883:3:5"
												},
												"referencedDeclaration": 2756,
												"src": "5883:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5861:10:5",
									"nodeType": "StructDefinition",
									"scope": 3358,
									"src": "5854:47:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "6155:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2962,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2954,
																"src": "6178:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2963,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6182:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2949,
															"src": "6178:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "6190:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2961,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "6173:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2960,
												"id": 2966,
												"nodeType": "Return",
												"src": "6166:30:5"
											}
										]
									},
									"documentation": {
										"id": 2951,
										"nodeType": "StructuredDocumentation",
										"src": "5909:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "6088:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6111:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "6092:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2952,
														"name": "Bytes32Set",
														"nameLocations": [
															"6092:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "6092:10:5"
													},
													"referencedDeclaration": 2950,
													"src": "6092:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6124:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "6116:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2955,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6091:39:5"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "6149:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6149:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:6:5"
									},
									"scope": 3358,
									"src": "6079:125:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "6459:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2980,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2972,
																"src": "6485:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6489:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2949,
															"src": "6485:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2982,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "6497:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2979,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "6477:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6477:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2978,
												"id": 2984,
												"nodeType": "Return",
												"src": "6470:33:5"
											}
										]
									},
									"documentation": {
										"id": 2969,
										"nodeType": "StructuredDocumentation",
										"src": "6212:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6389:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6415:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "6396:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2970,
														"name": "Bytes32Set",
														"nameLocations": [
															"6396:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "6396:10:5"
													},
													"referencedDeclaration": 2950,
													"src": "6396:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6428:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "6420:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6395:39:5"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "6453:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6453:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6452:6:5"
									},
									"scope": 3358,
									"src": "6380:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3003,
										"nodeType": "Block",
										"src": "6683:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2998,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2990,
																"src": "6711:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2999,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6715:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2949,
															"src": "6711:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3000,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "6723:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2997,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "6701:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2996,
												"id": 3002,
												"nodeType": "Return",
												"src": "6694:35:5"
											}
										]
									},
									"documentation": {
										"id": 2987,
										"nodeType": "StructuredDocumentation",
										"src": "6519:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6606:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6634:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "6615:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2988,
														"name": "Bytes32Set",
														"nameLocations": [
															"6615:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "6615:10:5"
													},
													"referencedDeclaration": 2950,
													"src": "6615:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6647:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "6639:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2991,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:39:5"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "6677:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6677:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6676:6:5"
									},
									"scope": 3358,
									"src": "6597:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "6895:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3014,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3008,
																"src": "6921:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6925:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2949,
															"src": "6921:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3013,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "6913:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6913:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3012,
												"id": 3017,
												"nodeType": "Return",
												"src": "6906:26:5"
											}
										]
									},
									"documentation": {
										"id": 3005,
										"nodeType": "StructuredDocumentation",
										"src": "6745:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6832:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6858:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "6839:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3006,
														"name": "Bytes32Set",
														"nameLocations": [
															"6839:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "6839:10:5"
													},
													"referencedDeclaration": 2950,
													"src": "6839:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6838:24:5"
									},
									"returnParameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "6886:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:9:5"
									},
									"scope": 3358,
									"src": "6823:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3036,
										"nodeType": "Block",
										"src": "7377:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3031,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "7399:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7403:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2949,
															"src": "7399:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3033,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3025,
															"src": "7411:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3030,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "7395:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7395:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3035,
												"nodeType": "Return",
												"src": "7388:29:5"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "6948:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7303:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7325:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "7306:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3021,
														"name": "Bytes32Set",
														"nameLocations": [
															"7306:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "7306:10:5"
													},
													"referencedDeclaration": 2950,
													"src": "7306:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7338:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "7330:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7305:39:5"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "7368:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3027,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:9:5"
									},
									"scope": 3358,
									"src": "7294:131:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "8056:229:5",
										"statements": [
											{
												"assignments": [
													3051
												],
												"declarations": [
													{
														"constant": false,
														"id": 3051,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "8084:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 3066,
														"src": "8067:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3049,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "8067:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3050,
															"nodeType": "ArrayTypeName",
															"src": "8067:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3056,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3053,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3041,
																"src": "8100:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3054,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8104:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2949,
															"src": "8100:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3052,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "8092:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8092:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8067:44:5"
											},
											{
												"assignments": [
													3061
												],
												"declarations": [
													{
														"constant": false,
														"id": 3061,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8139:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 3066,
														"src": "8122:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3059,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "8122:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3060,
															"nodeType": "ArrayTypeName",
															"src": "8122:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3062,
												"nodeType": "VariableDeclarationStatement",
												"src": "8122:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8211:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "8236:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8226:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3061,
														"isOffset": false,
														"isSlot": false,
														"src": "8226:6:5",
														"valueSize": 1
													},
													{
														"declaration": 3051,
														"isOffset": false,
														"isSlot": false,
														"src": "8236:5:5",
														"valueSize": 1
													}
												],
												"id": 3063,
												"nodeType": "InlineAssembly",
												"src": "8202:50:5"
											},
											{
												"expression": {
													"id": 3064,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3061,
													"src": "8271:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 3046,
												"id": 3065,
												"nodeType": "Return",
												"src": "8264:13:5"
											}
										]
									},
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "7433:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7984:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8010:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "7991:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3039,
														"name": "Bytes32Set",
														"nameLocations": [
															"7991:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "7991:10:5"
													},
													"referencedDeclaration": 2950,
													"src": "7991:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2950_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7990:24:5"
									},
									"returnParameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "8038:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3043,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "8038:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3044,
													"nodeType": "ArrayTypeName",
													"src": "8038:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8037:18:5"
									},
									"scope": 3358,
									"src": "7975:310:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 3071,
									"members": [
										{
											"constant": false,
											"id": 3070,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8347:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 3071,
											"src": "8343:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3069,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3068,
													"name": "Set",
													"nameLocations": [
														"8343:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2756,
													"src": "8343:3:5"
												},
												"referencedDeclaration": 2756,
												"src": "8343:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8321:10:5",
									"nodeType": "StructDefinition",
									"scope": 3358,
									"src": "8314:47:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "8615:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3083,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3075,
																"src": "8638:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3084,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8642:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "8638:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3091,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3077,
																					"src": "8674:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8666:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3089,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8666:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8666:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8658:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3087,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8658:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8658:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8650:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3085,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8650:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8650:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3082,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "8633:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8633:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3081,
												"id": 3096,
												"nodeType": "Return",
												"src": "8626:57:5"
											}
										]
									},
									"documentation": {
										"id": 3072,
										"nodeType": "StructuredDocumentation",
										"src": "8369:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8548:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8571:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "8552:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3074,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3073,
														"name": "AddressSet",
														"nameLocations": [
															"8552:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3071,
														"src": "8552:10:5"
													},
													"referencedDeclaration": 3071,
													"src": "8552:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "8576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8576:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8551:39:5"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "8609:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8609:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8608:6:5"
									},
									"scope": 3358,
									"src": "8539:152:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3124,
										"nodeType": "Block",
										"src": "8946:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3110,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3102,
																"src": "8972:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8976:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "8972:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3118,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "9008:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9000:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3116,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9000:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9000:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8992:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3114,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8992:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8992:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8984:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3112,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8984:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8984:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3109,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "8964:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3108,
												"id": 3123,
												"nodeType": "Return",
												"src": "8957:60:5"
											}
										]
									},
									"documentation": {
										"id": 3099,
										"nodeType": "StructuredDocumentation",
										"src": "8699:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8876:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8902:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "8883:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3100,
														"name": "AddressSet",
														"nameLocations": [
															"8883:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3071,
														"src": "8883:10:5"
													},
													"referencedDeclaration": 3071,
													"src": "8883:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "8907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8882:39:5"
									},
									"returnParameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "8940:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8940:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8939:6:5"
									},
									"scope": 3358,
									"src": "8867:158:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "9197:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3137,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3129,
																"src": "9225:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3138,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9229:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "9225:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3145,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3131,
																					"src": "9261:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9253:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3143,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9253:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9253:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9245:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3141,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9245:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9245:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9237:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3139,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9237:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9237:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3136,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "9215:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9215:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3135,
												"id": 3150,
												"nodeType": "Return",
												"src": "9208:62:5"
											}
										]
									},
									"documentation": {
										"id": 3126,
										"nodeType": "StructuredDocumentation",
										"src": "9033:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "9120:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9148:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "9129:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3127,
														"name": "AddressSet",
														"nameLocations": [
															"9129:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3071,
														"src": "9129:10:5"
													},
													"referencedDeclaration": 3071,
													"src": "9129:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9161:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "9153:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9153:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:39:5"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "9191:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9191:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9190:6:5"
									},
									"scope": 3358,
									"src": "9111:167:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "9436:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3162,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3156,
																"src": "9462:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9466:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "9462:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3161,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "9454:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9454:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3160,
												"id": 3165,
												"nodeType": "Return",
												"src": "9447:26:5"
											}
										]
									},
									"documentation": {
										"id": 3153,
										"nodeType": "StructuredDocumentation",
										"src": "9286:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9373:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9399:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "9380:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3154,
														"name": "AddressSet",
														"nameLocations": [
															"9380:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3071,
														"src": "9380:10:5"
													},
													"referencedDeclaration": 3071,
													"src": "9380:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9379:24:5"
									},
									"returnParameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "9427:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9426:9:5"
									},
									"scope": 3358,
									"src": "9364:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3193,
										"nodeType": "Block",
										"src": "9918:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3185,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3171,
																						"src": "9964:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 3186,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9968:6:5",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3070,
																					"src": "9964:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2756_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 3187,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3173,
																					"src": "9976:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$2756_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3184,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2932,
																				"src": "9960:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 3188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9960:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9952:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3182,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9952:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9952:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9944:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 3180,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9944:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9944:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 3179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9936:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9936:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9936:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3177,
												"id": 3192,
												"nodeType": "Return",
												"src": "9929:56:5"
											}
										]
									},
									"documentation": {
										"id": 3168,
										"nodeType": "StructuredDocumentation",
										"src": "9489:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9844:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9866:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9847:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3169,
														"name": "AddressSet",
														"nameLocations": [
															"9847:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3071,
														"src": "9847:10:5"
													},
													"referencedDeclaration": 3071,
													"src": "9847:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9879:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9871:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9871:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9846:39:5"
									},
									"returnParameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "9909:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9909:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9908:9:5"
									},
									"scope": 3358,
									"src": "9835:158:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "10624:229:5",
										"statements": [
											{
												"assignments": [
													3208
												],
												"declarations": [
													{
														"constant": false,
														"id": 3208,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10652:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 3223,
														"src": "10635:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3206,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10635:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3207,
															"nodeType": "ArrayTypeName",
															"src": "10635:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3213,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3210,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3198,
																"src": "10668:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10672:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "10668:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3209,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "10660:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10660:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10635:44:5"
											},
											{
												"assignments": [
													3218
												],
												"declarations": [
													{
														"constant": false,
														"id": 3218,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10707:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 3223,
														"src": "10690:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10690:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3217,
															"nodeType": "ArrayTypeName",
															"src": "10690:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3219,
												"nodeType": "VariableDeclarationStatement",
												"src": "10690:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10779:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10794:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10804:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10794:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3218,
														"isOffset": false,
														"isSlot": false,
														"src": "10794:6:5",
														"valueSize": 1
													},
													{
														"declaration": 3208,
														"isOffset": false,
														"isSlot": false,
														"src": "10804:5:5",
														"valueSize": 1
													}
												],
												"id": 3220,
												"nodeType": "InlineAssembly",
												"src": "10770:50:5"
											},
											{
												"expression": {
													"id": 3221,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3218,
													"src": "10839:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 3203,
												"id": 3222,
												"nodeType": "Return",
												"src": "10832:13:5"
											}
										]
									},
									"documentation": {
										"id": 3195,
										"nodeType": "StructuredDocumentation",
										"src": "10001:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10552:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10578:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "10559:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3196,
														"name": "AddressSet",
														"nameLocations": [
															"10559:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3071,
														"src": "10559:10:5"
													},
													"referencedDeclaration": 3071,
													"src": "10559:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3071_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10558:24:5"
									},
									"returnParameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "10606:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3200,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10606:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3201,
													"nodeType": "ArrayTypeName",
													"src": "10606:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10605:18:5"
									},
									"scope": 3358,
									"src": "10543:310:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 3228,
									"members": [
										{
											"constant": false,
											"id": 3227,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10909:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 3228,
											"src": "10905:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3226,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3225,
													"name": "Set",
													"nameLocations": [
														"10905:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2756,
													"src": "10905:3:5"
												},
												"referencedDeclaration": 2756,
												"src": "10905:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2756_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10886:7:5",
									"nodeType": "StructDefinition",
									"scope": 3358,
									"src": "10879:44:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3248,
										"nodeType": "Block",
										"src": "11174:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3240,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3232,
																"src": "11197:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11201:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3227,
															"src": "11197:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3244,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3234,
																	"src": "11217:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11209:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3242,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11209:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11209:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3239,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "11192:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3238,
												"id": 3247,
												"nodeType": "Return",
												"src": "11185:39:5"
											}
										]
									},
									"documentation": {
										"id": 3229,
										"nodeType": "StructuredDocumentation",
										"src": "10931:164:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "11110:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11130:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "11114:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3230,
														"name": "UintSet",
														"nameLocations": [
															"11114:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3228,
														"src": "11114:7:5"
													},
													"referencedDeclaration": 3228,
													"src": "11114:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "11135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11113:36:5"
									},
									"returnParameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "11168:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11168:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11167:6:5"
									},
									"scope": 3358,
									"src": "11101:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3269,
										"nodeType": "Block",
										"src": "11484:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3261,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3253,
																"src": "11510:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3262,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11514:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3227,
															"src": "11510:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3255,
																	"src": "11530:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11522:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3263,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11522:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11522:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3260,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "11502:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11502:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3259,
												"id": 3268,
												"nodeType": "Return",
												"src": "11495:42:5"
											}
										]
									},
									"documentation": {
										"id": 3250,
										"nodeType": "StructuredDocumentation",
										"src": "11240:162:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11417:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3253,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11440:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "11424:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3251,
														"name": "UintSet",
														"nameLocations": [
															"11424:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3228,
														"src": "11424:7:5"
													},
													"referencedDeclaration": 3228,
													"src": "11424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11453:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "11445:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11423:36:5"
									},
									"returnParameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "11478:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11478:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11477:6:5"
									},
									"scope": 3358,
									"src": "11408:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3290,
										"nodeType": "Block",
										"src": "11714:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3282,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3274,
																"src": "11742:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11746:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3227,
															"src": "11742:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3286,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3276,
																	"src": "11762:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11754:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3284,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11754:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11754:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3281,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "11732:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11732:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3280,
												"id": 3289,
												"nodeType": "Return",
												"src": "11725:44:5"
											}
										]
									},
									"documentation": {
										"id": 3271,
										"nodeType": "StructuredDocumentation",
										"src": "11553:72:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11665:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "11649:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3272,
														"name": "UintSet",
														"nameLocations": [
															"11649:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3228,
														"src": "11649:7:5"
													},
													"referencedDeclaration": 3228,
													"src": "11649:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11678:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "11670:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11670:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11648:36:5"
									},
									"returnParameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "11708:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11708:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11707:6:5"
									},
									"scope": 3358,
									"src": "11631:146:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3305,
										"nodeType": "Block",
										"src": "11932:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3301,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3295,
																"src": "11958:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11962:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3227,
															"src": "11958:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3300,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "11950:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11950:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3299,
												"id": 3304,
												"nodeType": "Return",
												"src": "11943:26:5"
											}
										]
									},
									"documentation": {
										"id": 3292,
										"nodeType": "StructuredDocumentation",
										"src": "11785:72:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11872:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11895:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "11879:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3293,
														"name": "UintSet",
														"nameLocations": [
															"11879:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3228,
														"src": "11879:7:5"
													},
													"referencedDeclaration": 3228,
													"src": "11879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11878:21:5"
									},
									"returnParameters": {
										"id": 3299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "11923:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11922:9:5"
									},
									"scope": 3358,
									"src": "11863:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3326,
										"nodeType": "Block",
										"src": "12411:57:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3320,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3310,
																		"src": "12441:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 3321,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12445:6:5",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3227,
																	"src": "12441:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2756_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 3322,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3312,
																	"src": "12453:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2756_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3319,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2932,
																"src": "12437:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 3323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12437:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12429:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12429:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12429:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3316,
												"id": 3325,
												"nodeType": "Return",
												"src": "12422:38:5"
											}
										]
									},
									"documentation": {
										"id": 3307,
										"nodeType": "StructuredDocumentation",
										"src": "11985:340:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12340:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12359:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3327,
												"src": "12343:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3309,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3308,
														"name": "UintSet",
														"nameLocations": [
															"12343:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3228,
														"src": "12343:7:5"
													},
													"referencedDeclaration": 3228,
													"src": "12343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12372:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3327,
												"src": "12364:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12364:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12342:36:5"
									},
									"returnParameters": {
										"id": 3316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3327,
												"src": "12402:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12401:9:5"
									},
									"scope": 3358,
									"src": "12331:137:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3356,
										"nodeType": "Block",
										"src": "13096:229:5",
										"statements": [
											{
												"assignments": [
													3341
												],
												"declarations": [
													{
														"constant": false,
														"id": 3341,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "13124:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 3356,
														"src": "13107:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3339,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "13107:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3340,
															"nodeType": "ArrayTypeName",
															"src": "13107:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3346,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3343,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "13140:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3344,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13144:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3227,
															"src": "13140:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2756_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3342,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "13132:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2756_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13132:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13107:44:5"
											},
											{
												"assignments": [
													3351
												],
												"declarations": [
													{
														"constant": false,
														"id": 3351,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13179:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 3356,
														"src": "13162:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3349,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13162:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3350,
															"nodeType": "ArrayTypeName",
															"src": "13162:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3352,
												"nodeType": "VariableDeclarationStatement",
												"src": "13162:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13251:41:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13266:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "13276:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3351,
														"isOffset": false,
														"isSlot": false,
														"src": "13266:6:5",
														"valueSize": 1
													},
													{
														"declaration": 3341,
														"isOffset": false,
														"isSlot": false,
														"src": "13276:5:5",
														"valueSize": 1
													}
												],
												"id": 3353,
												"nodeType": "InlineAssembly",
												"src": "13242:50:5"
											},
											{
												"expression": {
													"id": 3354,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3351,
													"src": "13311:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3336,
												"id": 3355,
												"nodeType": "Return",
												"src": "13304:13:5"
											}
										]
									},
									"documentation": {
										"id": 3328,
										"nodeType": "StructuredDocumentation",
										"src": "12476:536:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "13027:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "13050:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "13034:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3329,
														"name": "UintSet",
														"nameLocations": [
															"13034:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3228,
														"src": "13034:7:5"
													},
													"referencedDeclaration": 3228,
													"src": "13034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3228_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13033:21:5"
									},
									"returnParameters": {
										"id": 3336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "13078:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13078:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3334,
													"nodeType": "ArrayTypeName",
													"src": "13078:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13077:18:5"
									},
									"scope": 3358,
									"src": "13018:307:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3359,
							"src": "1361:11967:5",
							"usedErrors": []
						}
					],
					"src": "209:13119:5"
				},
				"id": 5
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							3480
						],
						"IERC165": [
							3548
						]
					},
					"id": 3481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 3361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3481,
							"sourceUnit": 3549,
							"src": "140:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3363,
										"name": "IERC165",
										"nameLocations": [
											"361:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3548,
										"src": "361:7:6"
									},
									"id": 3364,
									"nodeType": "InheritanceSpecifier",
									"src": "361:7:6"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3362,
								"nodeType": "StructuredDocumentation",
								"src": "167:170:6",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 3480,
							"linearizedBaseContracts": [
								3480,
								3548
							],
							"name": "IERC1155",
							"nameLocation": "349:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3365,
										"nodeType": "StructuredDocumentation",
										"src": "376:123:6",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 3377,
									"name": "TransferSingle",
									"nameLocation": "511:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "542:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "526:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3369,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "568:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "552:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3371,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "590:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "574:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3373,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "602:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "594:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3375,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "614:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "606:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:95:6"
									},
									"src": "505:116:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3378,
										"nodeType": "StructuredDocumentation",
										"src": "629:147:6",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 3392,
									"name": "TransferBatch",
									"nameLocation": "788:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "812:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3382,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "863:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "847:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3384,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "894:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "878:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3387,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "917:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3385,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "907:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3386,
													"nodeType": "ArrayTypeName",
													"src": "907:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3390,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "941:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "931:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "931:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3389,
													"nodeType": "ArrayTypeName",
													"src": "931:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:153:6"
									},
									"src": "782:173:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3393,
										"nodeType": "StructuredDocumentation",
										"src": "963:150:6",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 3401,
									"name": "ApprovalForAll",
									"nameLocation": "1125:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1156:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "1140:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3397,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1181:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "1165:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3399,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1196:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "1191:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1191:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:66:6"
									},
									"src": "1119:87:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3402,
										"nodeType": "StructuredDocumentation",
										"src": "1214:349:6",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 3408,
									"name": "URI",
									"nameLocation": "1575:3:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3404,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1586:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "1579:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1579:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3406,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1609:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "1593:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:34:6"
									},
									"src": "1569:44:6"
								},
								{
									"documentation": {
										"id": 3409,
										"nodeType": "StructuredDocumentation",
										"src": "1621:179:6",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 3418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1815:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1833:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "1825:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1850:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "1842:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:29:6"
									},
									"returnParameters": {
										"id": 3417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "1877:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:9:6"
									},
									"scope": 3480,
									"src": "1806:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3419,
										"nodeType": "StructuredDocumentation",
										"src": "1894:194:6",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 3431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2103:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3422,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2137:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "2118:27:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3420,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2118:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3421,
													"nodeType": "ArrayTypeName",
													"src": "2118:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2166:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "2147:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2147:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3424,
													"nodeType": "ArrayTypeName",
													"src": "2147:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:53:6"
									},
									"returnParameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "2221:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3427,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2221:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3428,
													"nodeType": "ArrayTypeName",
													"src": "2221:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:18:6"
									},
									"scope": 3480,
									"src": "2094:145:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3432,
										"nodeType": "StructuredDocumentation",
										"src": "2247:256:6",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 3439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2518:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2544:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "2536:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3436,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2559:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "2554:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2554:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:33:6"
									},
									"returnParameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:0:6"
									},
									"scope": 3480,
									"src": "2509:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3440,
										"nodeType": "StructuredDocumentation",
										"src": "2586:139:6",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 3449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2740:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2765:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "2757:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2782:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "2774:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:35:6"
									},
									"returnParameters": {
										"id": 3448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "2815:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2815:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:6:6"
									},
									"scope": 3480,
									"src": "2731:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3450,
										"nodeType": "StructuredDocumentation",
										"src": "2829:568:6",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 3463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3412:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3447:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "3439:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3470:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "3462:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3462:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3491:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "3483:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3512:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "3504:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3544:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "3529:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3529:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:127:6"
									},
									"returnParameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:0:6"
									},
									"scope": 3480,
									"src": "3403:162:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3464,
										"nodeType": "StructuredDocumentation",
										"src": "3573:400:6",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 3479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3988:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4028:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "4020:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4020:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3468,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4051:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "4043:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3471,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4083:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "4064:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3469,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4064:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3470,
													"nodeType": "ArrayTypeName",
													"src": "4064:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4116:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "4097:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3472,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4097:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3473,
													"nodeType": "ArrayTypeName",
													"src": "4097:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4149:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "4134:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4134:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:151:6"
									},
									"returnParameters": {
										"id": 3478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4169:0:6"
									},
									"scope": 3480,
									"src": "3979:191:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3481,
							"src": "339:3834:6",
							"usedErrors": []
						}
					],
					"src": "113:4060:6"
				},
				"id": 6
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							3480
						],
						"IERC1155MetadataURI": [
							3495
						],
						"IERC165": [
							3548
						]
					},
					"id": 3496,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3482,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:7"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 3483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3496,
							"sourceUnit": 3481,
							"src": "147:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3485,
										"name": "IERC1155",
										"nameLocations": [
											"409:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3480,
										"src": "409:8:7"
									},
									"id": 3486,
									"nodeType": "InheritanceSpecifier",
									"src": "409:8:7"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3484,
								"nodeType": "StructuredDocumentation",
								"src": "175:199:7",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 3495,
							"linearizedBaseContracts": [
								3495,
								3480,
								3548
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "386:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3487,
										"nodeType": "StructuredDocumentation",
										"src": "425:197:7",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 3494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "637:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "641:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:12:7"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "676:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "676:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:15:7"
									},
									"scope": 3495,
									"src": "628:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3496,
							"src": "376:318:7",
							"usedErrors": []
						}
					],
					"src": "120:574:7"
				},
				"id": 7
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							3536
						],
						"IERC165": [
							3548
						]
					},
					"id": 3537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3497,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:8"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 3498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3537,
							"sourceUnit": 3549,
							"src": "148:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3500,
										"name": "IERC165",
										"nameLocations": [
											"248:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3548,
										"src": "248:7:8"
									},
									"id": 3501,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:8"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3499,
								"nodeType": "StructuredDocumentation",
								"src": "175:41:8",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 3536,
							"linearizedBaseContracts": [
								3536,
								3548
							],
							"name": "IERC1155Receiver",
							"nameLocation": "228:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3502,
										"nodeType": "StructuredDocumentation",
										"src": "263:840:8",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 3517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1118:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1154:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "1146:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1181:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "1173:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3508,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1204:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "1196:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1225:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "1217:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1256:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "1241:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1241:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:132:8"
									},
									"returnParameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "1286:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3514,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1286:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:8:8"
									},
									"scope": 3536,
									"src": "1109:185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3518,
										"nodeType": "StructuredDocumentation",
										"src": "1302:1009:8",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 3535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2326:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3520,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2367:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "2359:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2394:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "2386:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2428:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "2409:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3523,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2409:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3524,
													"nodeType": "ArrayTypeName",
													"src": "2409:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3528,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2461:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "2442:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3526,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2442:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3527,
													"nodeType": "ArrayTypeName",
													"src": "2442:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2493:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "2478:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2478:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:156:8"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "2523:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3532,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2523:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2522:8:8"
									},
									"scope": 3536,
									"src": "2317:214:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3537,
							"src": "218:2316:8",
							"usedErrors": []
						}
					],
					"src": "121:2413:8"
				},
				"id": 8
			},
			"Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/newmultinft/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							3548
						]
					},
					"id": 3549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3539,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 3548,
							"linearizedBaseContracts": [
								3548
							],
							"name": "IERC165",
							"nameLocation": "429:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3540,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 3547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3542,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "824:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3541,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:9"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3547,
												"src": "867:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:9"
									},
									"scope": 3548,
									"src": "797:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3549,
							"src": "419:457:9",
							"usedErrors": []
						}
					],
					"src": "103:773:9"
				},
				"id": 9
			}
		}
	}
}