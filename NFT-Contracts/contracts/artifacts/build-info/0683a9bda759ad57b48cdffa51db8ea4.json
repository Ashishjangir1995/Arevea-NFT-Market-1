{
	"id": "0683a9bda759ad57b48cdffa51db8ea4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\nimport \"./ERC20.sol\";\r\nimport \"./External/SafeMath.sol\";\r\nimport \"./External/Ownable.sol\";\r\n\r\n/**\r\n\r\n * @title AREVEA-Token\r\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\r\n * Note they can later distribute these tokens as they wish using `transfer` and other\r\n * `ERC20` functions.\r\n */\r\n\r\ncontract AREVEAToken is ERC20,Ownable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    uint8 public constant DECIMALS = 18;\r\n\r\n    uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** uint256(DECIMALS));\r\n\r\n    uint256 public constant Maximum_SUPPLY = 1000000000000 * (10 ** uint256(DECIMALS));\r\n\r\n    /**\r\n\r\n     * @dev Constructor that gives msg.sender all of existing tokens.\r\n\r\n     */\r\n\r\n    constructor () ERC20 (\"AREVEA\", \"AVA\") {\r\n\r\n        mint(msg.sender, INITIAL_SUPPLY);\r\n\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n \t* the total supply.\r\n \t*\r\n \t* Emits a {Transfer} event with `from` set to the zero address.\r\n \t*\r\n \t* Requirements:\r\n \t*\r\n \t* - `account` cannot be the zero address.\r\n \t*/\r\n\r\n    function mint(address account, uint256 amount) public  onlyOwner  {\r\n\r\n       require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") ;\r\n\r\n      _mint(account,amount);\r\n\r\n    }  \r\n   /**\r\n \t* @dev Destroys `amount` tokens from the caller.\r\n \t*\r\n \t* See {ERC20-_burn}.\r\n \t*/\r\n   \r\n    function burn(uint256 amount) public {\r\n\r\n      _burn(msg.sender, amount);\r\n\r\n    }\r\n    /**\r\n \t* @dev Destroys `amount` tokens from `account`, deducting from the caller's\r\n \t* allowance.\r\n \t*\r\n \t* See {ERC20-_burn} and {ERC20-allowance}.\r\n \t*\r\n \t* Requirements:\r\n \t*\r\n \t* - the caller must have allowance for ``accounts``'s tokens of at least\r\n \t* `amount`.\r\n \t*/\r\n    function burnFrom(address account, uint256 amount) public virtual {\r\n\r\n        _spendAllowance(account, _msgSender(), amount);\r\n\r\n        _burn(account, amount);\r\n\r\n    }\r\n\r\n   \r\n\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer modulo of two numbers, truncating the remainder.\r\n    */\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./External/Context.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol": {
				"AREVEAToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Maximum_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"constructor": {
								"details": "Constructor that gives msg.sender all of existing tokens."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements: - `account` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "AREVEA-Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":399:2013  contract AREVEAToken is ERC20,Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":796:890  constructor () ERC20 (\"AREVEA\", \"AVA\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2021:2137  constructor(string memory name_, string memory symbol_) {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd0, 0x415245564541)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x415641)\n  dup2\n  mstore\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2096:2101  name_ */\n  dup2\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2088:2093  _name */\n  0x03\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2088:2101  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2112:2129  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2112:2119  _symbol */\n  0x04\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2112:2129  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2021:2137  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":976:988  _msgSender() */\n  tag_11\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":976:986  _msgSender */\n  shl(0x20, tag_12)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":976:988  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":957:975  _transferOwnership */\n  tag_13\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":848:880  mint(msg.sender, INITIAL_SUPPLY) */\n  tag_15\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":853:863  msg.sender */\n  caller\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":577:600  10 ** uint256(DECIMALS) */\n  tag_16\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":514:516  18 */\n  0x12\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":577:579  10 */\n  0x0a\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":577:600  10 ** uint256(DECIMALS) */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":566:601  1000000 * (10 ** uint256(DECIMALS)) */\n  tag_18\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":566:573  1000000 */\n  0x0f4240\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":566:601  1000000 * (10 ** uint256(DECIMALS)) */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":848:852  mint */\n  tag_20\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":848:880  mint(msg.sender, INITIAL_SUPPLY) */\n  jump\t// in\ntag_15:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":399:2013  contract AREVEAToken is ERC20,Ownable {\r... */\n  jump(tag_79)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":145:260  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_12:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n  caller\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":145:260  function _msgSender() internal view virtual returns (address payable) {\r... */\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2503:2694  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_13:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2596:2602  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2613:2630  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2646:2686  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2596:2602  _owner */\n  swap2\n  and\n  swap2\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2613:2630  _owner = newOwner */\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2596:2602  _owner */\n  dup3\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2646:2686  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2577:2593  address oldOwner */\n  0x00\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2646:2686  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2566:2694  {\r... */\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2503:2694  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\ntag_20:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n  tag_25\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1133  _checkOwner */\n  tag_26\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n  jump\t// in\ntag_25:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:691  10 ** uint256(DECIMALS) */\n  tag_28\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":514:516  18 */\n  0x12\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:670  10 */\n  0x0a\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:691  10 ** uint256(DECIMALS) */\n  tag_17\n  jump\t// in\ntag_28:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:692  1000000000000 * (10 ** uint256(DECIMALS)) */\n  tag_29\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:664  1000000000000 */\n  0xe8d4a51000\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:692  1000000000000 * (10 ** uint256(DECIMALS)) */\n  tag_19\n  jump\t// in\ntag_29:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1266  totalSupply().add(amount) */\n  tag_30\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1259:1265  amount */\n  dup3\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1254  totalSupply() */\n  tag_31\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3415:3427  _totalSupply */\n  sload(0x02)\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n  jump\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1254  totalSupply() */\ntag_31:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1258  totalSupply().add */\n  or(tag_0_102, shl(0x20, tag_33))\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1266  totalSupply().add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1284  totalSupply().add(amount) <= Maximum_SUPPLY */\n  gt\n  iszero\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1233:1310  require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":572:574   */\n  0x20\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1233:1310  require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":554:575   */\n  mstore\n    /* \"#utility.yul\":611:613   */\n  0x16\n    /* \"#utility.yul\":591:609   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":584:614   */\n  mstore\n    /* \"#utility.yul\":650:674   */\n  0x4d6178696d756d20737570706c79207265616368656400000000000000000000\n    /* \"#utility.yul\":630:648   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":623:675   */\n  mstore\n    /* \"#utility.yul\":692:710   */\n  0x64\n  add\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1233:1310  require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_34:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1322:1343  _mint(account,amount) */\n  tag_37\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1328:1335  account */\n  dup3\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1336:1342  amount */\n  dup3\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1322:1327  _mint */\n  tag_38\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1322:1343  _mint(account,amount) */\n  jump\t// in\ntag_37:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {\r... */\ntag_26:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1309:1315  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n  caller\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1465:1488  owner() == _msgSender() */\n  eq\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":923:925   */\n  0x20\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":905:926   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":942:960   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":935:965   */\n  mstore\n    /* \"#utility.yul\":1001:1035   */\n  0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    /* \"#utility.yul\":981:999   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":974:1036   */\n  mstore\n    /* \"#utility.yul\":1053:1071   */\n  0x64\n  add\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_35\n    /* \"#utility.yul\":721:1077   */\n  jump\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_43:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {\r... */\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":302:483  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_33:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":360:367  uint256 */\n  0x00\n  dup1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":392:397  a + b */\n  tag_48\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":396:397  b */\n  dup4\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":392:393  a */\n  dup6\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":392:397  a + b */\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":380:397  uint256 c = a + b */\n  swap1\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":421:422  a */\n  dup4\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":416:417  c */\n  dup2\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":416:422  c >= a */\n  lt\n  iszero\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_50\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1b\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:323   */\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:324   */\n  mstore\n    /* \"#utility.yul\":341:359   */\n  0x64\n  add\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_35\n    /* \"#utility.yul\":14:365   */\n  jump\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\ntag_50:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":474:475  c */\n  swap1\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":302:483  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_47:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8648:9047  function _mint(address account, uint256 amount) internal virtual {\r... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8732:8753  account != address(0) */\n  dup3\n  and\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_54\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1284:1286   */\n  0x20\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1266:1287   */\n  mstore\n    /* \"#utility.yul\":1323:1325   */\n  0x1f\n    /* \"#utility.yul\":1303:1321   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1296:1326   */\n  mstore\n    /* \"#utility.yul\":1362:1395   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":1342:1360   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1335:1396   */\n  mstore\n    /* \"#utility.yul\":1413:1431   */\n  0x64\n  add\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_35\n    /* \"#utility.yul\":1082:1437   */\n  jump\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_54:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8880:8886  amount */\n  dup1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8864:8876  _totalSupply */\n  0x02\n  0x00\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8864:8886  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_59\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_59:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8915  _balances[account] */\n  dup3\n  and\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8906  _balances */\n  0x00\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8915  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8925  _balances[account] += amount */\n  dup1\n  sload\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8919:8925  amount */\n  dup4\n  swap3\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8906  _balances */\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8925  _balances[account] += amount */\n  tag_60\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8919:8925  amount */\n  dup5\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8925  _balances[account] += amount */\n  tag_49\n  jump\t// in\ntag_60:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":1588:1613   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8958:8959  0 */\n  0x00\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":1576:1578   */\n  0x20\n    /* \"#utility.yul\":1561:1579   */\n  add\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":399:2013  contract AREVEAToken is ERC20,Ownable {\r... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_68\n  swap1\n  tag_69\n  jump\t// in\ntag_68:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_71\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_74)\ntag_71:\n  dup3\n  0x1f\n  lt\n  tag_72\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_74)\ntag_72:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_74\n  jumpi\n  swap2\n  dup3\n  add\ntag_73:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_74\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_73)\ntag_74:\n  pop\n  tag_75\n  swap3\n  swap2\n  pop\n  tag_76\n  jump\t// in\ntag_75:\n  pop\n  swap1\n  jump\t// out\ntag_76:\ntag_77:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_75\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_77)\n    /* \"#utility.yul\":1624:1752   */\ntag_49:\n    /* \"#utility.yul\":1664:1667   */\n  0x00\n    /* \"#utility.yul\":1695:1696   */\n  dup3\n    /* \"#utility.yul\":1691:1697   */\n  not\n    /* \"#utility.yul\":1688:1689   */\n  dup3\n    /* \"#utility.yul\":1685:1698   */\n  gt\n    /* \"#utility.yul\":1682:1721   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1701:1719   */\n  tag_87\n  tag_88\n  jump\t// in\ntag_87:\n  pop\n    /* \"#utility.yul\":1737:1746   */\n  add\n  swap1\n    /* \"#utility.yul\":1624:1752   */\n  jump\t// out\n    /* \"#utility.yul\":1757:2179   */\ntag_89:\n    /* \"#utility.yul\":1846:1847   */\n  0x01\n    /* \"#utility.yul\":1889:1894   */\n  dup2\n    /* \"#utility.yul\":1846:1847   */\n  dup2\n    /* \"#utility.yul\":1903:2173   */\ntag_91:\n    /* \"#utility.yul\":1924:1931   */\n  dup1\n    /* \"#utility.yul\":1914:1922   */\n  dup6\n    /* \"#utility.yul\":1911:1932   */\n  gt\n    /* \"#utility.yul\":1903:2173   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1983:1987   */\n  dup2\n    /* \"#utility.yul\":1979:1980   */\n  0x00\n    /* \"#utility.yul\":1975:1981   */\n  not\n    /* \"#utility.yul\":1971:1988   */\n  div\n    /* \"#utility.yul\":1965:1969   */\n  dup3\n    /* \"#utility.yul\":1962:1989   */\n  gt\n    /* \"#utility.yul\":1959:2012   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1992:2010   */\n  tag_95\n  tag_88\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2042:2049   */\n  dup1\n    /* \"#utility.yul\":2032:2040   */\n  dup6\n    /* \"#utility.yul\":2028:2050   */\n  and\n    /* \"#utility.yul\":2025:2080   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2062:2078   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":2025:2080   */\ntag_96:\n    /* \"#utility.yul\":2141:2163   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":2101:2116   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":1903:2173   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":1907:1910   */\n  pop\n    /* \"#utility.yul\":1757:2179   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2184:2315   */\ntag_17:\n    /* \"#utility.yul\":2244:2249   */\n  0x00\n    /* \"#utility.yul\":2273:2309   */\n  tag_98\n    /* \"#utility.yul\":2300:2308   */\n  dup4\n    /* \"#utility.yul\":2294:2298   */\n  dup4\n    /* \"#utility.yul\":2273:2309   */\n  tag_99\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2264:2309   */\n  swap4\n    /* \"#utility.yul\":2184:2315   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2320:3126   */\ntag_99:\n    /* \"#utility.yul\":2369:2374   */\n  0x00\n    /* \"#utility.yul\":2399:2407   */\n  dup3\n    /* \"#utility.yul\":2389:2469   */\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":2440:2441   */\n  0x01\n    /* \"#utility.yul\":2454:2459   */\n  jump(tag_47)\n    /* \"#utility.yul\":2389:2469   */\ntag_101:\n    /* \"#utility.yul\":2488:2492   */\n  dup2\n    /* \"#utility.yul\":2478:2554   */\n  tag_102\n  jumpi\n  pop\n    /* \"#utility.yul\":2525:2526   */\n  0x00\n    /* \"#utility.yul\":2539:2544   */\n  jump(tag_47)\n    /* \"#utility.yul\":2478:2554   */\ntag_102:\n    /* \"#utility.yul\":2570:2574   */\n  dup2\n    /* \"#utility.yul\":2588:2589   */\n  0x01\n    /* \"#utility.yul\":2583:2642   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2656:2657   */\n  0x02\n    /* \"#utility.yul\":2651:2781   */\n  dup2\n  eq\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2563:2781   */\n  jump(tag_103)\n    /* \"#utility.yul\":2583:2642   */\ntag_104:\n    /* \"#utility.yul\":2613:2614   */\n  0x01\n    /* \"#utility.yul\":2604:2614   */\n  swap2\n  pop\n    /* \"#utility.yul\":2627:2632   */\n  pop\n  jump(tag_47)\n    /* \"#utility.yul\":2651:2781   */\ntag_105:\n    /* \"#utility.yul\":2688:2691   */\n  0xff\n    /* \"#utility.yul\":2678:2686   */\n  dup5\n    /* \"#utility.yul\":2675:2692   */\n  gt\n    /* \"#utility.yul\":2672:2715   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2695:2713   */\n  tag_107\n  tag_88\n  jump\t// in\ntag_107:\n  pop\n  pop\n    /* \"#utility.yul\":2751:2752   */\n  0x01\n    /* \"#utility.yul\":2737:2753   */\n  dup3\n  shl\n    /* \"#utility.yul\":2766:2771   */\n  jump(tag_47)\n    /* \"#utility.yul\":2563:2781   */\ntag_103:\n  pop\n    /* \"#utility.yul\":2865:2867   */\n  0x20\n    /* \"#utility.yul\":2855:2863   */\n  dup4\n    /* \"#utility.yul\":2852:2868   */\n  lt\n    /* \"#utility.yul\":2846:2849   */\n  0x0133\n    /* \"#utility.yul\":2840:2844   */\n  dup4\n    /* \"#utility.yul\":2837:2850   */\n  lt\n    /* \"#utility.yul\":2833:2869   */\n  and\n    /* \"#utility.yul\":2827:2829   */\n  0x4e\n    /* \"#utility.yul\":2817:2825   */\n  dup5\n    /* \"#utility.yul\":2814:2830   */\n  lt\n    /* \"#utility.yul\":2809:2811   */\n  0x0b\n    /* \"#utility.yul\":2803:2807   */\n  dup5\n    /* \"#utility.yul\":2800:2812   */\n  lt\n    /* \"#utility.yul\":2796:2831   */\n  and\n    /* \"#utility.yul\":2793:2870   */\n  or\n    /* \"#utility.yul\":2790:2949   */\n  iszero\n  tag_108\n  jumpi\n  pop\n    /* \"#utility.yul\":2902:2921   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":2934:2939   */\n  jump(tag_47)\n    /* \"#utility.yul\":2790:2949   */\ntag_108:\n    /* \"#utility.yul\":2981:3015   */\n  tag_109\n    /* \"#utility.yul\":3006:3014   */\n  dup4\n    /* \"#utility.yul\":3000:3004   */\n  dup4\n    /* \"#utility.yul\":2981:3015   */\n  tag_89\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3051:3057   */\n  dup1\n    /* \"#utility.yul\":3047:3048   */\n  0x00\n    /* \"#utility.yul\":3043:3049   */\n  not\n    /* \"#utility.yul\":3039:3058   */\n  div\n    /* \"#utility.yul\":3030:3037   */\n  dup3\n    /* \"#utility.yul\":3027:3059   */\n  gt\n    /* \"#utility.yul\":3024:3082   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3062:3080   */\n  tag_111\n  tag_88\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3100:3120   */\n  mul\n  swap4\n    /* \"#utility.yul\":2320:3126   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3131:3299   */\ntag_19:\n    /* \"#utility.yul\":3171:3178   */\n  0x00\n    /* \"#utility.yul\":3237:3238   */\n  dup2\n    /* \"#utility.yul\":3233:3234   */\n  0x00\n    /* \"#utility.yul\":3229:3235   */\n  not\n    /* \"#utility.yul\":3225:3239   */\n  div\n    /* \"#utility.yul\":3222:3223   */\n  dup4\n    /* \"#utility.yul\":3219:3240   */\n  gt\n    /* \"#utility.yul\":3214:3215   */\n  dup3\n    /* \"#utility.yul\":3207:3216   */\n  iszero\n    /* \"#utility.yul\":3200:3217   */\n  iszero\n    /* \"#utility.yul\":3196:3241   */\n  and\n    /* \"#utility.yul\":3193:3264   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3244:3262   */\n  tag_114\n  tag_88\n  jump\t// in\ntag_114:\n  pop\n    /* \"#utility.yul\":3284:3293   */\n  mul\n  swap1\n    /* \"#utility.yul\":3131:3299   */\n  jump\t// out\n    /* \"#utility.yul\":3304:3684   */\ntag_69:\n    /* \"#utility.yul\":3383:3384   */\n  0x01\n    /* \"#utility.yul\":3379:3391   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":3426:3438   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":3447:3508   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3501:3505   */\n  0x7f\n    /* \"#utility.yul\":3493:3499   */\n  dup3\n    /* \"#utility.yul\":3489:3506   */\n  and\n    /* \"#utility.yul\":3479:3506   */\n  swap2\n  pop\n    /* \"#utility.yul\":3447:3508   */\ntag_116:\n    /* \"#utility.yul\":3554:3556   */\n  0x20\n    /* \"#utility.yul\":3546:3552   */\n  dup3\n    /* \"#utility.yul\":3543:3557   */\n  lt\n    /* \"#utility.yul\":3523:3541   */\n  dup2\n    /* \"#utility.yul\":3520:3558   */\n  eq\n    /* \"#utility.yul\":3517:3678   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3600:3610   */\n  0x4e487b71\n    /* \"#utility.yul\":3595:3598   */\n  0xe0\n    /* \"#utility.yul\":3591:3611   */\n  shl\n    /* \"#utility.yul\":3588:3589   */\n  0x00\n    /* \"#utility.yul\":3581:3612   */\n  mstore\n    /* \"#utility.yul\":3635:3639   */\n  0x22\n    /* \"#utility.yul\":3632:3633   */\n  0x04\n    /* \"#utility.yul\":3625:3640   */\n  mstore\n    /* \"#utility.yul\":3663:3667   */\n  0x24\n    /* \"#utility.yul\":3660:3661   */\n  0x00\n    /* \"#utility.yul\":3653:3668   */\n  revert\n    /* \"#utility.yul\":3517:3678   */\ntag_117:\n  pop\n    /* \"#utility.yul\":3304:3684   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3689:3816   */\ntag_88:\n    /* \"#utility.yul\":3750:3760   */\n  0x4e487b71\n    /* \"#utility.yul\":3745:3748   */\n  0xe0\n    /* \"#utility.yul\":3741:3761   */\n  shl\n    /* \"#utility.yul\":3738:3739   */\n  0x00\n    /* \"#utility.yul\":3731:3762   */\n  mstore\n    /* \"#utility.yul\":3781:3785   */\n  0x11\n    /* \"#utility.yul\":3778:3779   */\n  0x04\n    /* \"#utility.yul\":3771:3786   */\n  mstore\n    /* \"#utility.yul\":3805:3809   */\n  0x24\n    /* \"#utility.yul\":3802:3803   */\n  0x00\n    /* \"#utility.yul\":3795:3810   */\n  revert\n    /* \"#utility.yul\":3689:3816   */\ntag_79:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":399:2013  contract AREVEAToken is ERC20,Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":399:2013  contract AREVEAToken is ERC20,Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x2e0f2625\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x2e0f2625\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1b62d7af\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2207:2307  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1798:1812   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1791:1813   */\n      iszero\n        /* \"#utility.yul\":1773:1814   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"#utility.yul\":1746:1764   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_28\n        /* \"#utility.yul\":1633:1820   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3415:3427  _totalSupply */\n      sload(0x02)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":8002:8027   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7990:7992   */\n      0x20\n        /* \"#utility.yul\":7975:7993   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_28\n        /* \"#utility.yul\":7856:8033   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":610:692  uint256 public constant Maximum_SUPPLY = 1000000000000 * (10 ** uint256(DECIMALS)) */\n    tag_6:\n      tag_36\n      tag_41\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5339:5634  function transferFrom(\r... */\n    tag_7:\n      tag_30\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":481:516  uint8 public constant DECIMALS = 18 */\n    tag_8:\n      tag_48\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":514:516  18 */\n      0x12\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":481:516  uint8 public constant DECIMALS = 18 */\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":8210:8214   */\n      0xff\n        /* \"#utility.yul\":8198:8215   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8180:8216   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8168:8170   */\n      0x20\n        /* \"#utility.yul\":8153:8171   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":481:516  uint8 public constant DECIMALS = 18 */\n      tag_28\n        /* \"#utility.yul\":8038:8222   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":525:601  uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** uint256(DECIMALS)) */\n    tag_9:\n      tag_36\n      tag_53\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3169:3262  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_10:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3252:3254  18 */\n      0x12\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3169:3262  function decimals() public view virtual override returns (uint8) {\r... */\n      jump(tag_48)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6043:6281  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_30\n      tag_59\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\n    tag_12:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1461:1544  function burn(uint256 amount) public {\r... */\n    tag_13:\n      tag_62\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3498:3625  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_14:\n      tag_36\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3599:3617  _balances[account] */\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3572:3579  uint256 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3599:3617  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3498:3625  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1884:1987  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_15:\n      tag_62\n      tag_75\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1831:2001  function burnFrom(address account, uint256 amount) public virtual {\r... */\n    tag_16:\n      tag_62\n      tag_77\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {\r... */\n    tag_17:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1309:1315  _owner */\n      sload(0x05)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1309:1315  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1571:1622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1544:1562   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {\r... */\n      tag_28\n        /* \"#utility.yul\":1425:1628   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2426:2530  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_18:\n      tag_26\n      tag_84\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6784:7220  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_19:\n      tag_30\n      tag_87\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3831:4024  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_20:\n      tag_30\n      tag_91\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4087:4238  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_21:\n      tag_36\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2142:2343  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_22:\n      tag_62\n      tag_100\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2207:2307  function name() public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2261:2274  string memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2294:2299  _name */\n      0x03\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2287:2299  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2207:2307  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_33:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4641:4645  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4697:4729  _approve(owner, spender, amount) */\n      tag_113\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4713:4720  spender */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4722:4728  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4697:4705  _approve */\n      tag_114\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4697:4729  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_113:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4747:4751  true */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4740:4751  return true */\n      swap2\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_110:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":610:692  uint256 public constant Maximum_SUPPLY = 1000000000000 * (10 ** uint256(DECIMALS)) */\n    tag_41:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:691  10 ** uint256(DECIMALS) */\n      tag_116\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":514:516  18 */\n      0x12\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:670  10 */\n      0x0a\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:691  10 ** uint256(DECIMALS) */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:692  1000000000000 * (10 ** uint256(DECIMALS)) */\n      tag_118\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:664  1000000000000 */\n      0xe8d4a51000\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:692  1000000000000 * (10 ** uint256(DECIMALS)) */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":610:692  uint256 public constant Maximum_SUPPLY = 1000000000000 * (10 ** uint256(DECIMALS)) */\n      dup2\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5339:5634  function transferFrom(\r... */\n    tag_46:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5470:5474  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5528:5566  _spendAllowance(from, spender, amount) */\n      tag_122\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5544:5548  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5559:5565  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5528:5543  _spendAllowance */\n      tag_123\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5528:5566  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_122:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5577:5604  _transfer(from, to, amount) */\n      tag_124\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5587:5591  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5593:5595  to */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5597:5603  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5577:5586  _transfer */\n      tag_125\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5577:5604  _transfer(from, to, amount) */\n      jump\t// in\n    tag_124:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5622:5626  true */\n      0x01\n      swap5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5339:5634  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":525:601  uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** uint256(DECIMALS)) */\n    tag_53:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":577:600  10 ** uint256(DECIMALS) */\n      tag_126\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":514:516  18 */\n      0x12\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":577:579  10 */\n      0x0a\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":577:600  10 ** uint256(DECIMALS) */\n      tag_117\n      jump\t// in\n    tag_126:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":566:601  1000000 * (10 ** uint256(DECIMALS)) */\n      tag_118\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":566:573  1000000 */\n      0x0f4240\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":566:601  1000000 * (10 ** uint256(DECIMALS)) */\n      tag_119\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6043:6281  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_60:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6131:6135  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6187:6251  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_113\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6203:6210  spender */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6240:6250  addedValue */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6237  allowance(owner, spender) */\n      tag_132\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6203:6210  spender */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6221  allowance */\n      tag_97\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6237  allowance(owner, spender) */\n      jump\t// in\n    tag_132:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6250  allowance(owner, spender) + addedValue */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6187:6195  _approve */\n      tag_114\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6187:6251  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\n    tag_64:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_136\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1133  _checkOwner */\n      tag_137\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:691  10 ** uint256(DECIMALS) */\n      tag_139\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":514:516  18 */\n      0x12\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:670  10 */\n      0x0a\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":668:691  10 ** uint256(DECIMALS) */\n      tag_117\n      jump\t// in\n    tag_139:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:692  1000000000000 * (10 ** uint256(DECIMALS)) */\n      tag_140\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:664  1000000000000 */\n      0xe8d4a51000\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":651:692  1000000000000 * (10 ** uint256(DECIMALS)) */\n      tag_119\n      jump\t// in\n    tag_140:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1266  totalSupply().add(amount) */\n      tag_141\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1259:1265  amount */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1254  totalSupply() */\n      tag_142\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3415:3427  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1254  totalSupply() */\n    tag_142:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1258  totalSupply().add */\n      swap1\n      tag_102\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1266  totalSupply().add(amount) */\n      jump\t// in\n    tag_141:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1241:1284  totalSupply().add(amount) <= Maximum_SUPPLY */\n      gt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1233:1310  require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1233:1310  require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5349:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5408   */\n      0x16\n        /* \"#utility.yul\":5386:5404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5379:5409   */\n      mstore\n      shl(0x52, 0x13585e1a5b5d5b481cdd5c1c1b1e481c995858da1959)\n        /* \"#utility.yul\":5425:5443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5418:5470   */\n      mstore\n        /* \"#utility.yul\":5487:5505   */\n      0x64\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1233:1310  require(totalSupply().add(amount) <= Maximum_SUPPLY,\"Maximum supply reached\") */\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1322:1343  _mint(account,amount) */\n      tag_146\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1328:1335  account */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1336:1342  amount */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1322:1327  _mint */\n      tag_147\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1322:1343  _mint(account,amount) */\n      jump\t// in\n    tag_146:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1461:1544  function burn(uint256 amount) public {\r... */\n    tag_68:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1509:1534  _burn(msg.sender, amount) */\n      tag_149\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1515:1525  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1527:1533  amount */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1509:1514  _burn */\n      tag_150\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1509:1534  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_149:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1461:1544  function burn(uint256 amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1884:1987  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_75:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_153\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1133  _checkOwner */\n      tag_137\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1949:1979  _transferOwnership(address(0)) */\n      tag_155\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1976:1977  0 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1949:1967  _transferOwnership */\n      tag_156\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1949:1979  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1884:1987  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1831:2001  function burnFrom(address account, uint256 amount) public virtual {\r... */\n    tag_78:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1910:1956  _spendAllowance(account, _msgSender(), amount) */\n      tag_158\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1926:1933  account */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1949:1955  amount */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1910:1925  _spendAllowance */\n      tag_123\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1910:1956  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_158:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1969:1991  _burn(account, amount) */\n      tag_146\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1975:1982  account */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1984:1990  amount */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1969:1974  _burn */\n      tag_150\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1969:1991  _burn(account, amount) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2426:2530  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_84:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2482:2495  string memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2515:2522  _symbol */\n      0x04\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2508:2522  return _symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6784:7220  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_88:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6877:6881  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6877:6881  bool */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6960:6985  allowance(owner, spender) */\n      tag_170\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6977:6984  spender */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6960:6969  allowance */\n      tag_97\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6960:6985  allowance(owner, spender) */\n      jump\t// in\n    tag_170:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6933:6985  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7024:7039  subtractedValue */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7004:7020  currentAllowance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7004:7039  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7292:7294   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7274:7295   */\n      mstore\n        /* \"#utility.yul\":7331:7333   */\n      0x25\n        /* \"#utility.yul\":7311:7329   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7304:7334   */\n      mstore\n        /* \"#utility.yul\":7370:7404   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7350:7368   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7343:7405   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7421:7439   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7414:7449   */\n      mstore\n        /* \"#utility.yul\":7466:7485   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_144\n        /* \"#utility.yul\":7090:7491   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_171:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7117:7177  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_124\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7126:7131  owner */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7133:7140  spender */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7161:7176  subtractedValue */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7142:7158  currentAllowance */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7142:7176  currentAllowance - subtractedValue */\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7117:7125  _approve */\n      tag_114\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7117:7177  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3831:4024  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_92:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3910:3914  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3966:3994  _transfer(owner, to, amount) */\n      tag_113\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3983:3985  to */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3987:3993  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3966:3975  _transfer */\n      tag_125\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3966:3994  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4087:4238  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4221  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4176:4183  uint256 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4221  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4214  _allowances */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4221  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4230  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4087:4238  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2142:2343  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_101:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_180\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1133  _checkOwner */\n      tag_137\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2231:2253  newOwner != address(0) */\n      dup2\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2223:2296  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3436:3438   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2223:2296  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3439   */\n      mstore\n        /* \"#utility.yul\":3475:3477   */\n      0x26\n        /* \"#utility.yul\":3455:3473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3448:3478   */\n      mstore\n        /* \"#utility.yul\":3514:3548   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3494:3512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3487:3549   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3565:3583   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3558:3594   */\n      mstore\n        /* \"#utility.yul\":3611:3630   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2223:2296  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_144\n        /* \"#utility.yul\":3234:3636   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2223:2296  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_182:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2307:2335  _transferOwnership(newOwner) */\n      tag_149\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2326:2334  newOwner */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2307:2325  _transferOwnership */\n      tag_156\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2307:2335  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":302:483  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_102:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":360:367  uint256 */\n      0x00\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":392:397  a + b */\n      tag_187\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":396:397  b */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":392:393  a */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":392:397  a + b */\n      tag_134\n      jump\t// in\n    tag_187:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":380:397  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":421:422  a */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":416:417  c */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":416:422  c >= a */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4246:4248   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4228:4249   */\n      mstore\n        /* \"#utility.yul\":4285:4287   */\n      0x1b\n        /* \"#utility.yul\":4265:4283   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4258:4288   */\n      mstore\n        /* \"#utility.yul\":4324:4353   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":4304:4322   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4297:4354   */\n      mstore\n        /* \"#utility.yul\":4371:4389   */\n      0x64\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_144\n        /* \"#utility.yul\":4044:4395   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_188:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":474:475  c */\n      swap4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":302:483  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10409:10789  function _approve(\r... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10545:10564  owner != address(0) */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6887:6889   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6869:6890   */\n      mstore\n        /* \"#utility.yul\":6926:6928   */\n      0x24\n        /* \"#utility.yul\":6906:6924   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6899:6929   */\n      mstore\n        /* \"#utility.yul\":6965:6999   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6945:6963   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6938:7000   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7016:7034   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7009:7043   */\n      mstore\n        /* \"#utility.yul\":7060:7079   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_144\n        /* \"#utility.yul\":6685:7085   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10624:10645  spender != address(0) */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3825:3846   */\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x22\n        /* \"#utility.yul\":3862:3880   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3855:3885   */\n      mstore\n        /* \"#utility.yul\":3921:3955   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3901:3919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3894:3956   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3972:3990   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3965:3997   */\n      mstore\n        /* \"#utility.yul\":4014:4033   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_144\n        /* \"#utility.yul\":3641:4039   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10715  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10708  _allowances */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10715  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10724  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10733  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10749:10781  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":8002:8027   */\n      dup5\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10749:10781  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7975:7993   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10749:10781  Approval(owner, spender, amount) */\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10409:10789  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11080:11533  function _spendAllowance(\r... */\n    tag_123:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11215:11239  uint256 currentAllowance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11242:11267  allowance(owner, spender) */\n      tag_201\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11252:11257  owner */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11259:11266  spender */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11242:11251  allowance */\n      tag_97\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11242:11267  allowance(owner, spender) */\n      jump\t// in\n    tag_201:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11215:11267  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11282:11298  currentAllowance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11282:11319  currentAllowance != type(uint256).max */\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11278:11526  if (currentAllowance != type(uint256).max) {\r... */\n      tag_206\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11364:11370  amount */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11344:11360  currentAllowance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11344:11370  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4602:4604   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4584:4605   */\n      mstore\n        /* \"#utility.yul\":4641:4643   */\n      0x1d\n        /* \"#utility.yul\":4621:4639   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4614:4644   */\n      mstore\n        /* \"#utility.yul\":4680:4711   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4660:4678   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4653:4712   */\n      mstore\n        /* \"#utility.yul\":4729:4747   */\n      0x64\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_144\n        /* \"#utility.yul\":4400:4753   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_203:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11448:11499  _approve(owner, spender, currentAllowance - amount) */\n      tag_206\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11457:11462  owner */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11464:11471  spender */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11492:11498  amount */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11473:11489  currentAllowance */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11473:11498  currentAllowance - amount */\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11448:11456  _approve */\n      tag_114\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11448:11499  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_206:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11204:11533  {\r... */\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11080:11533  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7690:8361  function _transfer(\r... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7821:7839  from != address(0) */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6481:6483   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6463:6484   */\n      mstore\n        /* \"#utility.yul\":6520:6522   */\n      0x25\n        /* \"#utility.yul\":6500:6518   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6493:6523   */\n      mstore\n        /* \"#utility.yul\":6559:6593   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6539:6557   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6532:6594   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6610:6628   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6603:6638   */\n      mstore\n        /* \"#utility.yul\":6655:6674   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_144\n        /* \"#utility.yul\":6279:6680   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7900:7916  to != address(0) */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2629:2631   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2611:2632   */\n      mstore\n        /* \"#utility.yul\":2668:2670   */\n      0x23\n        /* \"#utility.yul\":2648:2666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2641:2671   */\n      mstore\n        /* \"#utility.yul\":2707:2741   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2687:2705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2680:2742   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2758:2776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2751:2784   */\n      mstore\n        /* \"#utility.yul\":2801:2820   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_144\n        /* \"#utility.yul\":2427:2826   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8042:8057  _balances[from] */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8020:8039  uint256 fromBalance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8042:8057  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8076:8097  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4942:4963   */\n      mstore\n        /* \"#utility.yul\":4999:5001   */\n      0x26\n        /* \"#utility.yul\":4979:4997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4972:5002   */\n      mstore\n        /* \"#utility.yul\":5038:5072   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5018:5036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5011:5073   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5089:5107   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5082:5118   */\n      mstore\n        /* \"#utility.yul\":5135:5154   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_144\n        /* \"#utility.yul\":4758:5160   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8191  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8185  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8191  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8194:8214  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8214  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8249  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8259  _balances[to] += amount */\n      dup1\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8208:8214  amount */\n      dup5\n      swap3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8185  _balances */\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8259  _balances[to] += amount */\n      tag_219\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8208:8214  amount */\n      dup5\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8259  _balances[to] += amount */\n      tag_134\n      jump\t// in\n    tag_219:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8292:8294  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8286:8290  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8296:8302  amount */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_220\n      swap2\n        /* \"#utility.yul\":8002:8027   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7990:7992   */\n      0x20\n        /* \"#utility.yul\":7975:7993   */\n      add\n      swap1\n        /* \"#utility.yul\":7856:8033   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8316:8353  _afterTokenTransfer(from, to, amount) */\n      tag_206\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9380:9971  function _burn(address account, uint256 amount) internal virtual {\r... */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {\r... */\n    tag_137:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1309:1315  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5718:5720   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5700:5721   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5737:5755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5730:5760   */\n      mstore\n        /* \"#utility.yul\":5796:5830   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5776:5794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5769:5831   */\n      mstore\n        /* \"#utility.yul\":5848:5866   */\n      0x64\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n        /* \"#utility.yul\":5516:5872   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8648:9047  function _mint(address account, uint256 amount) internal virtual {\r... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8732:8753  account != address(0) */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7700   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7680:7701   */\n      mstore\n        /* \"#utility.yul\":7737:7739   */\n      0x1f\n        /* \"#utility.yul\":7717:7735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7710:7740   */\n      mstore\n        /* \"#utility.yul\":7776:7809   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7756:7774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7749:7810   */\n      mstore\n        /* \"#utility.yul\":7827:7845   */\n      0x64\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_144\n        /* \"#utility.yul\":7496:7851   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8724:8789  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_230:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8880:8886  amount */\n      dup1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8864:8876  _totalSupply */\n      0x02\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8864:8886  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_234\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_234:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8915  _balances[account] */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8906  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8915  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8925  _balances[account] += amount */\n      dup1\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8919:8925  amount */\n      dup4\n      swap3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8906  _balances */\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8925  _balances[account] += amount */\n      tag_235\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8919:8925  amount */\n      dup5\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8897:8925  _balances[account] += amount */\n      tag_134\n      jump\t// in\n    tag_235:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":8002:8027   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8958:8959  0 */\n      0x00\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7990:7992   */\n      0x20\n        /* \"#utility.yul\":7975:7993   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8941:8978  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":1155:1353  function mint(address account, uint256 amount) public  onlyOwner  {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9380:9971  function _burn(address account, uint256 amount) internal virtual {\r... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9464:9485  account != address(0) */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9456:9523  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6079:6081   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9456:9523  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6061:6082   */\n      mstore\n        /* \"#utility.yul\":6118:6120   */\n      0x21\n        /* \"#utility.yul\":6098:6116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6091:6121   */\n      mstore\n        /* \"#utility.yul\":6157:6191   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":6137:6155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6130:6192   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":6208:6226   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6201:6232   */\n      mstore\n        /* \"#utility.yul\":6249:6268   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9456:9523  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_144\n        /* \"#utility.yul\":5877:6274   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9456:9523  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9623:9641  _balances[account] */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9598:9620  uint256 accountBalance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9623:9641  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9660:9684  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9652:9723  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9652:9723  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3015:3036   */\n      mstore\n        /* \"#utility.yul\":3072:3074   */\n      0x22\n        /* \"#utility.yul\":3052:3070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3045:3075   */\n      mstore\n        /* \"#utility.yul\":3111:3145   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":3091:3109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3084:3146   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":3162:3180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3155:3187   */\n      mstore\n        /* \"#utility.yul\":3204:3223   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9652:9723  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_144\n        /* \"#utility.yul\":2831:3229   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9652:9723  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9759:9777  _balances[account] */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9759:9768  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9759:9777  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9780:9803  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9759:9803  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9825:9837  _totalSupply */\n      0x02\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9825:9847  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9797:9803  amount */\n      dup5\n      swap3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9759:9768  _balances */\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9825:9847  _totalSupply -= amount */\n      tag_246\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9797:9803  amount */\n      dup5\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9825:9847  _totalSupply -= amount */\n      tag_247\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9865:9902  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":8002:8027   */\n      dup3\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9891:9892  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9865:9902  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7990:7992   */\n      0x20\n        /* \"#utility.yul\":7975:7993   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":9865:9902  Transfer(account, address(0), amount) */\n      tag_199\n        /* \"#utility.yul\":7856:8033   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2503:2694  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_156:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2596:2602  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2613:2630  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2646:2686  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2596:2602  _owner */\n      swap2\n      and\n      swap2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2613:2630  _owner = newOwner */\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2596:2602  _owner */\n      dup3\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2646:2686  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2577:2593  address oldOwner */\n      0x00\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2646:2686  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2566:2694  {\r... */\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":2503:2694  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_254:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_256:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_71:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_258:\n        /* \"#utility.yul\":343:372   */\n      tag_188\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_254\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_96:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_261:\n        /* \"#utility.yul\":551:580   */\n      tag_262\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_254\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_263\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_254\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_45:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_265:\n        /* \"#utility.yul\":833:862   */\n      tag_266\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_254\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_267\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_254\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_32:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_269:\n        /* \"#utility.yul\":1149:1178   */\n      tag_270\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_254\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:1420   */\n    tag_67:\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1340:1349   */\n      dup3\n        /* \"#utility.yul\":1331:1338   */\n      dup5\n        /* \"#utility.yul\":1327:1350   */\n      sub\n        /* \"#utility.yul\":1323:1355   */\n      slt\n        /* \"#utility.yul\":1320:1372   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1320:1372   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":1391:1414   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1240:1420   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:2422   */\n    tag_29:\n        /* \"#utility.yul\":1937:1941   */\n      0x00\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"#utility.yul\":1995:1997   */\n      dup1\n        /* \"#utility.yul\":1984:1993   */\n      dup4\n        /* \"#utility.yul\":1977:1998   */\n      mstore\n        /* \"#utility.yul\":2027:2033   */\n      dup4\n        /* \"#utility.yul\":2021:2034   */\n      mload\n        /* \"#utility.yul\":2070:2076   */\n      dup1\n        /* \"#utility.yul\":2065:2067   */\n      dup3\n        /* \"#utility.yul\":2054:2063   */\n      dup6\n        /* \"#utility.yul\":2050:2068   */\n      add\n        /* \"#utility.yul\":2043:2077   */\n      mstore\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2105:2245   */\n    tag_276:\n        /* \"#utility.yul\":2119:2125   */\n      dup2\n        /* \"#utility.yul\":2116:2117   */\n      dup2\n        /* \"#utility.yul\":2113:2126   */\n      lt\n        /* \"#utility.yul\":2105:2245   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2214:2228   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2210:2233   */\n      dup4\n      add\n        /* \"#utility.yul\":2204:2234   */\n      mload\n        /* \"#utility.yul\":2180:2197   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2199:2201   */\n      0x40\n        /* \"#utility.yul\":2176:2202   */\n      add\n        /* \"#utility.yul\":2169:2235   */\n      mstore\n        /* \"#utility.yul\":2134:2144   */\n      dup3\n      add\n        /* \"#utility.yul\":2105:2245   */\n      jump(tag_276)\n    tag_278:\n        /* \"#utility.yul\":2263:2269   */\n      dup2\n        /* \"#utility.yul\":2260:2261   */\n      dup2\n        /* \"#utility.yul\":2257:2270   */\n      gt\n        /* \"#utility.yul\":2254:2345   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2333:2334   */\n      0x00\n        /* \"#utility.yul\":2328:2330   */\n      0x40\n        /* \"#utility.yul\":2319:2325   */\n      dup4\n        /* \"#utility.yul\":2308:2317   */\n      dup8\n        /* \"#utility.yul\":2304:2326   */\n      add\n        /* \"#utility.yul\":2300:2331   */\n      add\n        /* \"#utility.yul\":2293:2335   */\n      mstore\n        /* \"#utility.yul\":2254:2345   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":2406:2408   */\n      0x1f\n        /* \"#utility.yul\":2385:2400   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2381:2410   */\n      and\n        /* \"#utility.yul\":2366:2411   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2362:2416   */\n      add\n      swap4\n        /* \"#utility.yul\":1825:2422   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8227:8355   */\n    tag_134:\n        /* \"#utility.yul\":8267:8270   */\n      0x00\n        /* \"#utility.yul\":8298:8299   */\n      dup3\n        /* \"#utility.yul\":8294:8300   */\n      not\n        /* \"#utility.yul\":8291:8292   */\n      dup3\n        /* \"#utility.yul\":8288:8301   */\n      gt\n        /* \"#utility.yul\":8285:8324   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8304:8322   */\n      tag_298\n      tag_299\n      jump\t// in\n    tag_298:\n      pop\n        /* \"#utility.yul\":8340:8349   */\n      add\n      swap1\n        /* \"#utility.yul\":8227:8355   */\n      jump\t// out\n        /* \"#utility.yul\":8360:8782   */\n    tag_300:\n        /* \"#utility.yul\":8449:8450   */\n      0x01\n        /* \"#utility.yul\":8492:8497   */\n      dup2\n        /* \"#utility.yul\":8449:8450   */\n      dup2\n        /* \"#utility.yul\":8506:8776   */\n    tag_302:\n        /* \"#utility.yul\":8527:8534   */\n      dup1\n        /* \"#utility.yul\":8517:8525   */\n      dup6\n        /* \"#utility.yul\":8514:8535   */\n      gt\n        /* \"#utility.yul\":8506:8776   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":8586:8590   */\n      dup2\n        /* \"#utility.yul\":8582:8583   */\n      0x00\n        /* \"#utility.yul\":8578:8584   */\n      not\n        /* \"#utility.yul\":8574:8591   */\n      div\n        /* \"#utility.yul\":8568:8572   */\n      dup3\n        /* \"#utility.yul\":8565:8592   */\n      gt\n        /* \"#utility.yul\":8562:8615   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":8595:8613   */\n      tag_306\n      tag_299\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8645:8652   */\n      dup1\n        /* \"#utility.yul\":8635:8643   */\n      dup6\n        /* \"#utility.yul\":8631:8653   */\n      and\n        /* \"#utility.yul\":8628:8683   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":8665:8681   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":8628:8683   */\n    tag_307:\n        /* \"#utility.yul\":8744:8766   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":8704:8719   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":8506:8776   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":8510:8513   */\n      pop\n        /* \"#utility.yul\":8360:8782   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8787:8918   */\n    tag_117:\n        /* \"#utility.yul\":8847:8852   */\n      0x00\n        /* \"#utility.yul\":8876:8912   */\n      tag_188\n        /* \"#utility.yul\":8903:8911   */\n      dup4\n        /* \"#utility.yul\":8897:8901   */\n      dup4\n        /* \"#utility.yul\":8972:8977   */\n      0x00\n        /* \"#utility.yul\":9002:9010   */\n      dup3\n        /* \"#utility.yul\":8992:9072   */\n      tag_312\n      jumpi\n      pop\n        /* \"#utility.yul\":9043:9044   */\n      0x01\n        /* \"#utility.yul\":9057:9062   */\n      jump(tag_110)\n        /* \"#utility.yul\":8992:9072   */\n    tag_312:\n        /* \"#utility.yul\":9091:9095   */\n      dup2\n        /* \"#utility.yul\":9081:9157   */\n      tag_313\n      jumpi\n      pop\n        /* \"#utility.yul\":9128:9129   */\n      0x00\n        /* \"#utility.yul\":9142:9147   */\n      jump(tag_110)\n        /* \"#utility.yul\":9081:9157   */\n    tag_313:\n        /* \"#utility.yul\":9173:9177   */\n      dup2\n        /* \"#utility.yul\":9191:9192   */\n      0x01\n        /* \"#utility.yul\":9186:9245   */\n      dup2\n      eq\n      tag_315\n      jumpi\n        /* \"#utility.yul\":9259:9260   */\n      0x02\n        /* \"#utility.yul\":9254:9384   */\n      dup2\n      eq\n      tag_316\n      jumpi\n        /* \"#utility.yul\":9166:9384   */\n      jump(tag_314)\n        /* \"#utility.yul\":9186:9245   */\n    tag_315:\n        /* \"#utility.yul\":9216:9217   */\n      0x01\n        /* \"#utility.yul\":9207:9217   */\n      swap2\n      pop\n        /* \"#utility.yul\":9230:9235   */\n      pop\n      jump(tag_110)\n        /* \"#utility.yul\":9254:9384   */\n    tag_316:\n        /* \"#utility.yul\":9291:9294   */\n      0xff\n        /* \"#utility.yul\":9281:9289   */\n      dup5\n        /* \"#utility.yul\":9278:9295   */\n      gt\n        /* \"#utility.yul\":9275:9318   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":9298:9316   */\n      tag_318\n      tag_299\n      jump\t// in\n    tag_318:\n      pop\n      pop\n        /* \"#utility.yul\":9354:9355   */\n      0x01\n        /* \"#utility.yul\":9340:9356   */\n      dup3\n      shl\n        /* \"#utility.yul\":9369:9374   */\n      jump(tag_110)\n        /* \"#utility.yul\":9166:9384   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":9468:9470   */\n      0x20\n        /* \"#utility.yul\":9458:9466   */\n      dup4\n        /* \"#utility.yul\":9455:9471   */\n      lt\n        /* \"#utility.yul\":9449:9452   */\n      0x0133\n        /* \"#utility.yul\":9443:9447   */\n      dup4\n        /* \"#utility.yul\":9440:9453   */\n      lt\n        /* \"#utility.yul\":9436:9472   */\n      and\n        /* \"#utility.yul\":9430:9432   */\n      0x4e\n        /* \"#utility.yul\":9420:9428   */\n      dup5\n        /* \"#utility.yul\":9417:9433   */\n      lt\n        /* \"#utility.yul\":9412:9414   */\n      0x0b\n        /* \"#utility.yul\":9406:9410   */\n      dup5\n        /* \"#utility.yul\":9403:9415   */\n      lt\n        /* \"#utility.yul\":9399:9434   */\n      and\n        /* \"#utility.yul\":9396:9473   */\n      or\n        /* \"#utility.yul\":9393:9552   */\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"#utility.yul\":9505:9524   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":9537:9542   */\n      jump(tag_110)\n        /* \"#utility.yul\":9393:9552   */\n    tag_319:\n        /* \"#utility.yul\":9584:9618   */\n      tag_320\n        /* \"#utility.yul\":9609:9617   */\n      dup4\n        /* \"#utility.yul\":9603:9607   */\n      dup4\n        /* \"#utility.yul\":9584:9618   */\n      tag_300\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9654:9660   */\n      dup1\n        /* \"#utility.yul\":9650:9651   */\n      0x00\n        /* \"#utility.yul\":9646:9652   */\n      not\n        /* \"#utility.yul\":9642:9661   */\n      div\n        /* \"#utility.yul\":9633:9640   */\n      dup3\n        /* \"#utility.yul\":9630:9662   */\n      gt\n        /* \"#utility.yul\":9627:9685   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":9665:9683   */\n      tag_322\n      tag_299\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9703:9723   */\n      mul\n      swap4\n        /* \"#utility.yul\":8923:9729   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9734:9902   */\n    tag_119:\n        /* \"#utility.yul\":9774:9781   */\n      0x00\n        /* \"#utility.yul\":9840:9841   */\n      dup2\n        /* \"#utility.yul\":9836:9837   */\n      0x00\n        /* \"#utility.yul\":9832:9838   */\n      not\n        /* \"#utility.yul\":9828:9842   */\n      div\n        /* \"#utility.yul\":9825:9826   */\n      dup4\n        /* \"#utility.yul\":9822:9843   */\n      gt\n        /* \"#utility.yul\":9817:9818   */\n      dup3\n        /* \"#utility.yul\":9810:9819   */\n      iszero\n        /* \"#utility.yul\":9803:9820   */\n      iszero\n        /* \"#utility.yul\":9799:9844   */\n      and\n        /* \"#utility.yul\":9796:9867   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":9847:9865   */\n      tag_325\n      tag_299\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":9887:9896   */\n      mul\n      swap1\n        /* \"#utility.yul\":9734:9902   */\n      jump\t// out\n        /* \"#utility.yul\":9907:10032   */\n    tag_247:\n        /* \"#utility.yul\":9947:9951   */\n      0x00\n        /* \"#utility.yul\":9975:9976   */\n      dup3\n        /* \"#utility.yul\":9972:9973   */\n      dup3\n        /* \"#utility.yul\":9969:9977   */\n      lt\n        /* \"#utility.yul\":9966:10000   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":9980:9998   */\n      tag_328\n      tag_299\n      jump\t// in\n    tag_328:\n      pop\n        /* \"#utility.yul\":10017:10026   */\n      sub\n      swap1\n        /* \"#utility.yul\":9907:10032   */\n      jump\t// out\n        /* \"#utility.yul\":10037:10417   */\n    tag_105:\n        /* \"#utility.yul\":10116:10117   */\n      0x01\n        /* \"#utility.yul\":10112:10124   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":10159:10171   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":10180:10241   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":10234:10238   */\n      0x7f\n        /* \"#utility.yul\":10226:10232   */\n      dup3\n        /* \"#utility.yul\":10222:10239   */\n      and\n        /* \"#utility.yul\":10212:10239   */\n      swap2\n      pop\n        /* \"#utility.yul\":10180:10241   */\n    tag_330:\n        /* \"#utility.yul\":10287:10289   */\n      0x20\n        /* \"#utility.yul\":10279:10285   */\n      dup3\n        /* \"#utility.yul\":10276:10290   */\n      lt\n        /* \"#utility.yul\":10256:10274   */\n      dup2\n        /* \"#utility.yul\":10253:10291   */\n      eq\n        /* \"#utility.yul\":10250:10411   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":10333:10343   */\n      0x4e487b71\n        /* \"#utility.yul\":10328:10331   */\n      0xe0\n        /* \"#utility.yul\":10324:10344   */\n      shl\n        /* \"#utility.yul\":10321:10322   */\n      0x00\n        /* \"#utility.yul\":10314:10345   */\n      mstore\n        /* \"#utility.yul\":10368:10372   */\n      0x22\n        /* \"#utility.yul\":10365:10366   */\n      0x04\n        /* \"#utility.yul\":10358:10373   */\n      mstore\n        /* \"#utility.yul\":10396:10400   */\n      0x24\n        /* \"#utility.yul\":10393:10394   */\n      0x00\n        /* \"#utility.yul\":10386:10401   */\n      revert\n        /* \"#utility.yul\":10250:10411   */\n    tag_331:\n      pop\n        /* \"#utility.yul\":10037:10417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10422:10549   */\n    tag_299:\n        /* \"#utility.yul\":10483:10493   */\n      0x4e487b71\n        /* \"#utility.yul\":10478:10481   */\n      0xe0\n        /* \"#utility.yul\":10474:10494   */\n      shl\n        /* \"#utility.yul\":10471:10472   */\n      0x00\n        /* \"#utility.yul\":10464:10495   */\n      mstore\n        /* \"#utility.yul\":10514:10518   */\n      0x11\n        /* \"#utility.yul\":10511:10512   */\n      0x04\n        /* \"#utility.yul\":10504:10519   */\n      mstore\n        /* \"#utility.yul\":10538:10542   */\n      0x24\n        /* \"#utility.yul\":10535:10536   */\n      0x00\n        /* \"#utility.yul\":10528:10543   */\n      revert\n\n    auxdata: 0xa264697066735822122078d8d672ae2151d101910ecea4cba34a224e558ac5a4a102fddb6fbdefb001b264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_739": {
									"entryPoint": null,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_770": {
									"entryPoint": 460,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_517": {
									"entryPoint": 662,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_714": {
									"entryPoint": 198,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_827": {
									"entryPoint": 202,
									"id": 827,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_857": {
									"entryPoint": 554,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_79": {
									"entryPoint": 284,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3818:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:7"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:29:7",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "333:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:7",
														"type": ""
													}
												],
												"src": "14:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "544:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "561:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "554:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "595:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "591:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "591:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "584:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "645:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:18:7"
																	},
																	{
																		"hexValue": "4d6178696d756d20737570706c792072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "650:24:7",
																		"type": "",
																		"value": "Maximum supply reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "623:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "684:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "692:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "684:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "535:4:7",
														"type": ""
													}
												],
												"src": "370:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "895:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "912:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "905:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "905:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "962:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "935:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1001:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "974:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "974:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "974:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1045:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1057:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1045:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "872:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "886:4:7",
														"type": ""
													}
												],
												"src": "721:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1256:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1273:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1284:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1307:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1318:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1303:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1303:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1357:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1342:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1362:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1405:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1405:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1233:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1247:4:7",
														"type": ""
													}
												],
												"src": "1082:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1553:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1595:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1606:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1588:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1512:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1534:4:7",
														"type": ""
													}
												],
												"src": "1442:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1699:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1701:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1701:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1701:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1688:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1695:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1691:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1691:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1685:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:13:7"
															},
															"nodeType": "YulIf",
															"src": "1682:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1730:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1741:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1744:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1737:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1730:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1655:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1658:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1664:3:7",
														"type": ""
													}
												],
												"src": "1624:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1821:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1831:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1846:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1835:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1856:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "1865:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1856:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1881:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "1889:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "1881:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1945:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1990:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "1992:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1992:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1965:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1979:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1975:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1975:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "1983:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "1971:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1971:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1962:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1962:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "1959:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2051:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2053:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "2066:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "2073:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "2062:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2062:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "2053:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2032:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "2042:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2028:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2025:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2093:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2105:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2111:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "2101:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2101:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "2093:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2129:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2154:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "2141:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2141:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "2129:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1914:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1924:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1911:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1933:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1907:3:7",
																"statements": []
															},
															"src": "1903:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "1785:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1792:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1805:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1812:4:7",
														"type": ""
													}
												],
												"src": "1757:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:61:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2294:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2300:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "2273:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:36:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2225:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2231:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2244:5:7",
														"type": ""
													}
												],
												"src": "2184:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2379:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2417:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2431:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2440:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2431:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2454:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2399:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2392:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:16:7"
															},
															"nodeType": "YulIf",
															"src": "2389:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2502:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2516:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2525:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2516:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2539:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2488:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2481:12:7"
															},
															"nodeType": "YulIf",
															"src": "2478:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2590:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "2604:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2613:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2604:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2627:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2583:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2658:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2693:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "2695:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2695:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2695:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "2678:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2688:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "2675:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2675:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2672:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "2728:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "2741:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2751:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2737:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2737:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2728:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2766:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2651:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "2570:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "2563:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2879:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2893:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2906:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2912:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "2902:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2902:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2893:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2934:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2803:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2809:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2800:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2800:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2817:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2827:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2814:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2814:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2796:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2796:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2840:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2846:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2837:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2837:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2855:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2865:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2852:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2852:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2833:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2793:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:77:7"
															},
															"nodeType": "YulIf",
															"src": "2790:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2958:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2981:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2962:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "2971:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3060:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3062:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3062:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3062:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3030:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3047:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3043:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3043:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "3051:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3039:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3027:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:32:7"
															},
															"nodeType": "YulIf",
															"src": "3024:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3091:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3104:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "3113:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3100:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3091:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2350:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2356:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2369:5:7",
														"type": ""
													}
												],
												"src": "2320:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3183:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3242:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3244:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3244:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3244:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3214:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3207:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3207:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3200:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3222:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3233:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3229:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3229:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3237:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3225:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3225:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3219:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3219:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:45:7"
															},
															"nodeType": "YulIf",
															"src": "3193:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3273:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3288:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3291:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3273:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3162:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3165:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3171:7:7",
														"type": ""
													}
												],
												"src": "3131:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3359:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3369:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3386:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3379:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3369:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3400:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3430:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3404:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3477:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3479:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3493:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3501:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3489:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3489:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3479:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3457:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:26:7"
															},
															"nodeType": "YulIf",
															"src": "3447:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3567:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3588:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3595:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3600:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3591:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3591:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3581:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3581:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3632:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3635:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3625:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3625:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3625:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3660:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3663:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3653:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3653:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3653:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3523:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3546:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3554:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3543:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:38:7"
															},
															"nodeType": "YulIf",
															"src": "3517:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3339:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3348:6:7",
														"type": ""
													}
												],
												"src": "3304:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3721:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3745:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3750:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3778:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3771:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3771:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3802:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3805:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3689:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Maximum supply reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600681526020016541524556454160d01b8152506040518060400160405280600381526020016241564160e81b8152508160039080519060200190620000659291906200037b565b5080516200007b9060049060208401906200037b565b5050506200009862000092620000c660201b60201c565b620000ca565b620000c033620000ab6012600a62000485565b620000ba90620f42406200054e565b6200011c565b620005c3565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000126620001cc565b620001346012600a62000485565b620001459064e8d4a510006200054e565b62000168826200015460025490565b6200022a60201b620005de1790919060201c565b1115620001bc5760405162461bcd60e51b815260206004820152601660248201527f4d6178696d756d20737570706c7920726561636865640000000000000000000060448201526064015b60405180910390fd5b620001c8828262000296565b5050565b6005546001600160a01b03163314620002285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620001b3565b565b60008062000239838562000421565b9050838110156200028d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401620001b3565b90505b92915050565b6001600160a01b038216620002ee5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620001b3565b806002600082825462000302919062000421565b90915550506001600160a01b038216600090815260208190526040812080548392906200033190849062000421565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620003899062000570565b90600052602060002090601f016020900481019282620003ad5760008555620003f8565b82601f10620003c857805160ff1916838001178555620003f8565b82800160010185558215620003f8579182015b82811115620003f8578251825591602001919060010190620003db565b50620004069291506200040a565b5090565b5b808211156200040657600081556001016200040b565b60008219821115620004375762000437620005ad565b500190565b600181815b808511156200047d578160001904821115620004615762000461620005ad565b808516156200046f57918102915b93841c939080029062000441565b509250929050565b60006200049383836200049a565b9392505050565b600082620004ab5750600162000290565b81620004ba5750600062000290565b8160018114620004d35760028114620004de57620004fe565b600191505062000290565b60ff841115620004f257620004f2620005ad565b50506001821b62000290565b5060208310610133831016604e8410600b841016171562000523575081810a62000290565b6200052f83836200043c565b8060001904821115620005465762000546620005ad565b029392505050565b60008160001904831182151516156200056b576200056b620005ad565b500290565b600181811c908216806200058557607f821691505b60208210811415620005a757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610f8080620005d36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f2fde38b146102a357600080fd5b806342966c68146101f057806370a0823114610203578063715018a61461022c57806379cc6790146102345780638da5cb5b1461024757600080fd5b80632e0f2625116100f45780632e0f26251461019f5780632ff2e9dc146101b9578063313ce567146101c157806339509351146101c857806340c10f19146101db57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd146101725780631b62d7af1461018457806323b872dd1461018c575b600080fd5b6101396102b6565b6040516101469190610d6b565b60405180910390f35b61016261015d366004610d28565b610348565b6040519015158152602001610146565b6002545b604051908152602001610146565b610176610362565b61016261019a366004610cec565b610380565b6101a7601281565b60405160ff9091168152602001610146565b6101766103a4565b60126101a7565b6101626101d6366004610d28565b6103bd565b6101ee6101e9366004610d28565b6103df565b005b6101ee6101fe366004610d52565b61046f565b610176610211366004610c9e565b6001600160a01b031660009081526020819052604090205490565b6101ee61047c565b6101ee610242366004610d28565b610490565b6005546040516001600160a01b039091168152602001610146565b6101396104a5565b610162610278366004610d28565b6104b4565b61016261028b366004610d28565b61052f565b61017661029e366004610cb9565b61053d565b6101ee6102b1366004610c9e565b610568565b6060600380546102c590610ef9565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190610ef9565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050505050905090565b600033610356818585610644565b60019150505b92915050565b61036e6012600a610e1b565b61037d9064e8d4a51000610ec3565b81565b60003361038e858285610769565b6103998585856107e3565b506001949350505050565b6103b06012600a610e1b565b61037d90620f4240610ec3565b6000336103568185856103d0838361053d565b6103da9190610dc0565b610644565b6103e76109b1565b6103f36012600a610e1b565b6104029064e8d4a51000610ec3565b6104158261040f60025490565b906105de565b11156104615760405162461bcd60e51b815260206004820152601660248201527513585e1a5b5d5b481cdd5c1c1b1e481c995858da195960521b60448201526064015b60405180910390fd5b61046b8282610a0b565b5050565b6104793382610aea565b50565b6104846109b1565b61048e6000610c30565b565b61049b823383610769565b61046b8282610aea565b6060600480546102c590610ef9565b600033816104c2828661053d565b9050838110156105225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610458565b6103998286868403610644565b6000336103568185856107e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105706109b1565b6001600160a01b0381166105d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610458565b61047981610c30565b6000806105eb8385610dc0565b90508381101561063d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610458565b9392505050565b6001600160a01b0383166106a65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610458565b6001600160a01b0382166107075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610458565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610775848461053d565b905060001981146107dd57818110156107d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610458565b6107dd8484848403610644565b50505050565b6001600160a01b0383166108475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610458565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610458565b6001600160a01b038316600090815260208190526040902054818110156109215760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610458565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610958908490610dc0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109a491815260200190565b60405180910390a36107dd565b6005546001600160a01b0316331461048e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610458565b6001600160a01b038216610a615760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610458565b8060026000828254610a739190610dc0565b90915550506001600160a01b03821660009081526020819052604081208054839290610aa0908490610dc0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b4a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610458565b6001600160a01b03821660009081526020819052604090205481811015610bbe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610458565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bed908490610ee2565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161075c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610c9957600080fd5b919050565b600060208284031215610cb057600080fd5b61063d82610c82565b60008060408385031215610ccc57600080fd5b610cd583610c82565b9150610ce360208401610c82565b90509250929050565b600080600060608486031215610d0157600080fd5b610d0a84610c82565b9250610d1860208501610c82565b9150604084013590509250925092565b60008060408385031215610d3b57600080fd5b610d4483610c82565b946020939093013593505050565b600060208284031215610d6457600080fd5b5035919050565b600060208083528351808285015260005b81811015610d9857858101830151858201604001528201610d7c565b81811115610daa576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610dd357610dd3610f34565b500190565b600181815b80851115610e13578160001904821115610df957610df9610f34565b80851615610e0657918102915b93841c9390800290610ddd565b509250929050565b600061063d8383600082610e315750600161035c565b81610e3e5750600061035c565b8160018114610e545760028114610e5e57610e7a565b600191505061035c565b60ff841115610e6f57610e6f610f34565b50506001821b61035c565b5060208310610133831016604e8410600b8410161715610e9d575081810a61035c565b610ea78383610dd8565b8060001904821115610ebb57610ebb610f34565b029392505050565b6000816000190483118215151615610edd57610edd610f34565b500290565b600082821015610ef457610ef4610f34565b500390565b600181811c90821680610f0d57607f821691505b60208210811415610f2e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122078d8d672ae2151d101910ecea4cba34a224e558ac5a4a102fddb6fbdefb001b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x415245564541 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x415641 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x65 SWAP3 SWAP2 SWAP1 PUSH3 0x37B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x7B SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x37B JUMP JUMPDEST POP POP POP PUSH3 0x98 PUSH3 0x92 PUSH3 0xC6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCA JUMP JUMPDEST PUSH3 0xC0 CALLER PUSH3 0xAB PUSH1 0x12 PUSH1 0xA PUSH3 0x485 JUMP JUMPDEST PUSH3 0xBA SWAP1 PUSH3 0xF4240 PUSH3 0x54E JUMP JUMPDEST PUSH3 0x11C JUMP JUMPDEST PUSH3 0x5C3 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x126 PUSH3 0x1CC JUMP JUMPDEST PUSH3 0x134 PUSH1 0x12 PUSH1 0xA PUSH3 0x485 JUMP JUMPDEST PUSH3 0x145 SWAP1 PUSH5 0xE8D4A51000 PUSH3 0x54E JUMP JUMPDEST PUSH3 0x168 DUP3 PUSH3 0x154 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x22A PUSH1 0x20 SHL PUSH3 0x5DE OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20737570706C79207265616368656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1C8 DUP3 DUP3 PUSH3 0x296 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x228 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1B3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x239 DUP4 DUP6 PUSH3 0x421 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1B3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x302 SWAP2 SWAP1 PUSH3 0x421 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x331 SWAP1 DUP5 SWAP1 PUSH3 0x421 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x389 SWAP1 PUSH3 0x570 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3AD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x3F8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3C8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3F8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3F8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3F8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3DB JUMP JUMPDEST POP PUSH3 0x406 SWAP3 SWAP2 POP PUSH3 0x40A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x406 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x40B JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x437 JUMPI PUSH3 0x437 PUSH3 0x5AD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x47D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x461 JUMPI PUSH3 0x461 PUSH3 0x5AD JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x46F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x441 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x493 DUP4 DUP4 PUSH3 0x49A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x4AB JUMPI POP PUSH1 0x1 PUSH3 0x290 JUMP JUMPDEST DUP2 PUSH3 0x4BA JUMPI POP PUSH1 0x0 PUSH3 0x290 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4D3 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4DE JUMPI PUSH3 0x4FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x290 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x4F2 JUMPI PUSH3 0x4F2 PUSH3 0x5AD JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x290 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x523 JUMPI POP DUP2 DUP2 EXP PUSH3 0x290 JUMP JUMPDEST PUSH3 0x52F DUP4 DUP4 PUSH3 0x43C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x546 JUMPI PUSH3 0x546 PUSH3 0x5AD JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x56B JUMPI PUSH3 0x56B PUSH3 0x5AD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x585 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x5A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF80 DUP1 PUSH3 0x5D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E0F2625 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x1B62D7AF EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH2 0x1A7 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH2 0x176 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x47C JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH2 0x176 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F1 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36E PUSH1 0x12 PUSH1 0xA PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x37D SWAP1 PUSH5 0xE8D4A51000 PUSH2 0xEC3 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x38E DUP6 DUP3 DUP6 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 PUSH2 0x7E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x12 PUSH1 0xA PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x37D SWAP1 PUSH3 0xF4240 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x3D0 DUP4 DUP4 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH2 0x3E7 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x3F3 PUSH1 0x12 PUSH1 0xA PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x402 SWAP1 PUSH5 0xE8D4A51000 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x415 DUP3 PUSH2 0x40F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5DE JUMP JUMPDEST GT ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585E1A5B5D5B481CDD5C1C1B1E481C995858DA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46B DUP3 DUP3 PUSH2 0xA0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x479 CALLER DUP3 PUSH2 0xAEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x484 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x48E PUSH1 0x0 PUSH2 0xC30 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x49B DUP3 CALLER DUP4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x46B DUP3 DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4C2 DUP3 DUP7 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x399 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x644 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x479 DUP2 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5EB DUP4 DUP6 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x775 DUP5 DUP5 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7DD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x7DD DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x644 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x958 SWAP1 DUP5 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9A4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA0 SWAP1 DUP5 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBED SWAP1 DUP5 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x75C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63D DUP3 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD5 DUP4 PUSH2 0xC82 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE3 PUSH1 0x20 DUP5 ADD PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD0A DUP5 PUSH2 0xC82 JUMP JUMPDEST SWAP3 POP PUSH2 0xD18 PUSH1 0x20 DUP6 ADD PUSH2 0xC82 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD44 DUP4 PUSH2 0xC82 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD7C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD3 PUSH2 0xF34 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xE13 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF9 PUSH2 0xF34 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xE06 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xDDD JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63D DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0xE31 JUMPI POP PUSH1 0x1 PUSH2 0x35C JUMP JUMPDEST DUP2 PUSH2 0xE3E JUMPI POP PUSH1 0x0 PUSH2 0x35C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE54 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE5E JUMPI PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xF34 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x35C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE9D JUMPI POP DUP2 DUP2 EXP PUSH2 0x35C JUMP JUMPDEST PUSH2 0xEA7 DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEBB PUSH2 0xF34 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEDD JUMPI PUSH2 0xEDD PUSH2 0xF34 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 PUSH2 0xF34 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF0D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xD8D672AE2151D101910ECEA4CBA34A224E558AC5A4A102FDDB PUSH16 0xBDEFB001B264736F6C63430008070033 ",
							"sourceMap": "399:1614:0:-:0;;;796:94;;;;;;;;;;2021:116:1;;;;;;;;;;;;;-1:-1:-1;;;2021:116:1;;;;;;;;;;;;;;;;-1:-1:-1;;;2021:116:1;;;2096:5;2088;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:17:1;;;;:7;;:17;;;;;:::i;:::-;;2021:116;;957:32:3;976:12;:10;;;:12;;:::i;:::-;957:18;:32::i;:::-;848::0::1;853:10;577:23;514:2;577;:23;:::i;:::-;566:35;::::0;:7:::1;:35;:::i;:::-;848:4;:32::i;:::-;399:1614:::0;;145:115:2;241:10;;145:115::o;2503:191:3:-;2596:6;;;-1:-1:-1;;;;;2613:17:3;;;-1:-1:-1;;;;;;2613:17:3;;;;;;;2646:40;;2596:6;;;2613:17;2596:6;;2646:40;;2577:16;;2646:40;2566:128;2503:191;:::o;1155:198:0:-;1122:13:3;:11;:13::i;:::-;668:23:0::1;514:2;668;:23;:::i;:::-;651:41;::::0;:13:::1;:41;:::i;:::-;1241:25;1259:6:::0;1241:13:::1;3415:12:1::0;;;3327:108;1241:13:0::1;:17;;;;;;:25;;;;:::i;:::-;:43;;1233:77;;;::::0;-1:-1:-1;;;1233:77:0;;572:2:7;1233:77:0::1;::::0;::::1;554:21:7::0;611:2;591:18;;;584:30;650:24;630:18;;;623:52;692:18;;1233:77:0::1;;;;;;;;;1322:21;1328:7:::0;1336:6;1322:5:::1;:21::i;:::-;1155:198:::0;;:::o;1401:132:3:-;1309:6;;-1:-1:-1;;;;;1309:6:3;241:10:2;1465:23:3;1457:68;;;;-1:-1:-1;;;1457:68:3;;923:2:7;1457:68:3;;;905:21:7;;;942:18;;;935:30;1001:34;981:18;;;974:62;1053:18;;1457:68:3;721:356:7;1457:68:3;1401:132::o;302:181:4:-;360:7;;392:5;396:1;392;:5;:::i;:::-;380:17;;421:1;416;:6;;408:46;;;;-1:-1:-1;;;408:46:4;;216:2:7;408:46:4;;;198:21:7;255:2;235:18;;;228:30;294:29;274:18;;;267:57;341:18;;408:46:4;14:351:7;408:46:4;474:1;-1:-1:-1;302:181:4;;;;;:::o;8648:399:1:-;-1:-1:-1;;;;;8732:21:1;;8724:65;;;;-1:-1:-1;;;8724:65:1;;1284:2:7;8724:65:1;;;1266:21:7;1323:2;1303:18;;;1296:30;1362:33;1342:18;;;1335:61;1413:18;;8724:65:1;1082:355:7;8724:65:1;8880:6;8864:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8897:18:1;;:9;:18;;;;;;;;;;:28;;8919:6;;8897:9;:28;;8919:6;;8897:28;:::i;:::-;;;;-1:-1:-1;;8941:37:1;;1588:25:7;;;-1:-1:-1;;;;;8941:37:1;;;8958:1;;8941:37;;1576:2:7;1561:18;8941:37:1;;;;;;;1155:198:0;;:::o;399:1614::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;399:1614:0;;;-1:-1:-1;399:1614:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;1624:128:7;1664:3;1695:1;1691:6;1688:1;1685:13;1682:39;;;1701:18;;:::i;:::-;-1:-1:-1;1737:9:7;;1624:128::o;1757:422::-;1846:1;1889:5;1846:1;1903:270;1924:7;1914:8;1911:21;1903:270;;;1983:4;1979:1;1975:6;1971:17;1965:4;1962:27;1959:53;;;1992:18;;:::i;:::-;2042:7;2032:8;2028:22;2025:55;;;2062:16;;;;2025:55;2141:22;;;;2101:15;;;;1903:270;;;1907:3;1757:422;;;;;:::o;2184:131::-;2244:5;2273:36;2300:8;2294:4;2273:36;:::i;:::-;2264:45;2184:131;-1:-1:-1;;;2184:131:7:o;2320:806::-;2369:5;2399:8;2389:80;;-1:-1:-1;2440:1:7;2454:5;;2389:80;2488:4;2478:76;;-1:-1:-1;2525:1:7;2539:5;;2478:76;2570:4;2588:1;2583:59;;;;2656:1;2651:130;;;;2563:218;;2583:59;2613:1;2604:10;;2627:5;;;2651:130;2688:3;2678:8;2675:17;2672:43;;;2695:18;;:::i;:::-;-1:-1:-1;;2751:1:7;2737:16;;2766:5;;2563:218;;2865:2;2855:8;2852:16;2846:3;2840:4;2837:13;2833:36;2827:2;2817:8;2814:16;2809:2;2803:4;2800:12;2796:35;2793:77;2790:159;;;-1:-1:-1;2902:19:7;;;2934:5;;2790:159;2981:34;3006:8;3000:4;2981:34;:::i;:::-;3051:6;3047:1;3043:6;3039:19;3030:7;3027:32;3024:58;;;3062:18;;:::i;:::-;3100:20;;2320:806;-1:-1:-1;;;2320:806:7:o;3131:168::-;3171:7;3237:1;3233;3229:6;3225:14;3222:1;3219:21;3214:1;3207:9;3200:17;3196:45;3193:71;;;3244:18;;:::i;:::-;-1:-1:-1;3284:9:7;;3131:168::o;3304:380::-;3383:1;3379:12;;;;3426;;;3447:61;;3501:4;3493:6;3489:17;3479:27;;3447:61;3554:2;3546:6;3543:14;3523:18;3520:38;3517:161;;;3600:10;3595:3;3591:20;3588:1;3581:31;3635:4;3632:1;3625:15;3663:4;3660:1;3653:15;3517:161;;3304:380;;;:::o;3689:127::-;3750:10;3745:3;3741:20;3738:1;3731:31;3781:4;3778:1;3771:15;3805:4;3802:1;3795:15;3689:127;399:1614:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DECIMALS_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_26": {
									"entryPoint": 932,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Maximum_SUPPLY_37": {
									"entryPoint": 866,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_634": {
									"entryPoint": 1604,
									"id": 634,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_589": {
									"entryPoint": 2794,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_770": {
									"entryPoint": 2481,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_517": {
									"entryPoint": 2571,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_714": {
									"entryPoint": null,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_677": {
									"entryPoint": 1897,
									"id": 677,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_827": {
									"entryPoint": 3120,
									"id": 827,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_461": {
									"entryPoint": 2019,
									"id": 461,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_857": {
									"entryPoint": 1502,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_256": {
									"entryPoint": 1341,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_281": {
									"entryPoint": 840,
									"id": 281,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_113": {
									"entryPoint": 1168,
									"id": 113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_92": {
									"entryPoint": 1135,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_384": {
									"entryPoint": 1204,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_343": {
									"entryPoint": 957,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_79": {
									"entryPoint": 991,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_169": {
									"entryPoint": 694,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_784": {
									"entryPoint": 1148,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_179": {
									"entryPoint": 1189,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_314": {
									"entryPoint": 896,
									"id": 314,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_807": {
									"entryPoint": 1384,
									"id": 807,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_238": {
									"entryPoint": 1327,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10551:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:7"
															},
															"nodeType": "YulIf",
															"src": "480:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:7",
														"type": ""
													}
												],
												"src": "383:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:7"
															},
															"nodeType": "YulIf",
															"src": "762:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:7",
														"type": ""
													}
												],
												"src": "648:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:7"
															},
															"nodeType": "YulIf",
															"src": "1078:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:7",
														"type": ""
													}
												],
												"src": "981:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1310:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1356:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1331:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1340:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:32:7"
															},
															"nodeType": "YulIf",
															"src": "1320:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1381:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1391:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1276:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1287:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1299:6:7",
														"type": ""
													}
												],
												"src": "1240:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1536:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1578:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1609:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1614:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1605:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1605:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1618:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1601:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1601:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1495:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1517:4:7",
														"type": ""
													}
												],
												"src": "1425:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1750:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1738:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1780:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1805:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1798:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1798:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1791:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1697:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1708:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1719:4:7",
														"type": ""
													}
												],
												"src": "1633:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1956:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1966:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1960:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1984:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1995:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2007:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2027:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2011:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2065:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2086:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2095:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2090:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2155:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2184:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2195:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2180:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2180:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2199:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2176:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2218:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2226:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2214:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2214:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2230:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2210:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2210:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2204:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2169:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2119:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2113:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2127:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2129:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2138:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2141:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2134:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2129:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2109:3:7",
																"statements": []
															},
															"src": "2105:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2279:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2308:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2319:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2304:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2300:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2300:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2260:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2263:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2257:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:13:7"
															},
															"nodeType": "YulIf",
															"src": "2254:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2354:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2389:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2397:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2385:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2385:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2406:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2402:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2402:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2381:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2381:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2362:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2354:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1926:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1937:4:7",
														"type": ""
													}
												],
												"src": "1825:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2618:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2611:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2641:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2691:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2702:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2707:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2793:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2805:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2816:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2801:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2793:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2592:4:7",
														"type": ""
													}
												],
												"src": "2427:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3005:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3022:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3015:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3106:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3111:34:7",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3166:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3177:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3162:18:7"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3182:4:7",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3155:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3208:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3219:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3196:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2982:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2996:4:7",
														"type": ""
													}
												],
												"src": "2831:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3408:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3418:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3459:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3470:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3455:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3475:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3448:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3509:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3494:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3514:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3569:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3580:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3565:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3565:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3585:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3603:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3615:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3603:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3385:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3399:4:7",
														"type": ""
													}
												],
												"src": "3234:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3815:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3825:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3855:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3921:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3894:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3992:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4006:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4029:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4014:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4006:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3792:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3806:4:7",
														"type": ""
													}
												],
												"src": "3641:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4218:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4235:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4228:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4285:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4258:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4258:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4308:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4319:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4304:18:7"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4324:29:7",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4297:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4363:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4375:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4371:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4363:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4195:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4209:4:7",
														"type": ""
													}
												],
												"src": "4044:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4574:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4591:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4602:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4625:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4636:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4641:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4614:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4680:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4653:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4653:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4721:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4721:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4565:4:7",
														"type": ""
													}
												],
												"src": "4400:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4932:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4983:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4994:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4979:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4972:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4972:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5033:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5018:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5038:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5011:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5093:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5104:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5089:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5089:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5109:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5082:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5082:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5127:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4909:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4923:4:7",
														"type": ""
													}
												],
												"src": "4758:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5339:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5349:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:7"
																	},
																	{
																		"hexValue": "4d6178696d756d20737570706c792072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5445:24:7",
																		"type": "",
																		"value": "Maximum supply reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5479:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5502:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5479:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5316:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5330:4:7",
														"type": ""
													}
												],
												"src": "5165:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5707:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5718:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5700:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5700:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5700:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5752:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5757:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5730:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5730:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5730:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5791:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5796:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5769:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5840:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5852:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5863:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5667:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5681:4:7",
														"type": ""
													}
												],
												"src": "5516:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6051:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6068:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6061:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6061:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6061:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6102:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6113:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6098:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6098:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6118:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6091:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6091:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6091:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6141:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6152:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6137:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6137:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6157:34:7",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6130:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6212:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6223:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6208:18:7"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6228:3:7",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6201:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6201:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6241:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6253:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6264:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6249:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6241:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6028:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6042:4:7",
														"type": ""
													}
												],
												"src": "5877:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6453:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6470:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6481:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6463:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6504:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6515:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6500:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6500:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6520:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6493:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6543:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6554:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6539:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6539:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6559:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6532:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6532:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6625:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6610:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6630:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6603:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6603:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6647:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6659:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6655:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6655:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6647:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6430:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6444:4:7",
														"type": ""
													}
												],
												"src": "6279:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6859:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6876:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6887:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6869:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6921:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6906:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6926:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6899:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6899:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6949:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6960:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6945:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6945:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6965:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6938:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6938:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7020:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7031:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7016:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7036:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7009:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7052:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7064:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7075:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7060:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7060:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7052:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6836:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6850:4:7",
														"type": ""
													}
												],
												"src": "6685:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7264:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7281:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7292:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7274:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7274:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7315:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7326:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7311:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7304:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7304:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7304:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7354:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7365:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7350:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7350:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7370:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7343:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7425:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7436:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7421:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7421:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7441:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7414:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7414:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7458:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7470:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7481:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7466:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7466:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7458:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7241:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7255:4:7",
														"type": ""
													}
												],
												"src": "7090:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7670:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7687:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7680:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7680:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7721:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7732:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7717:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7717:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7737:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7710:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7710:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7710:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7760:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7771:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7756:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7756:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7776:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7749:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7749:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7819:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7831:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7842:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7827:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7827:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7819:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7647:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7661:4:7",
														"type": ""
													}
												],
												"src": "7496:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7957:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7967:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7979:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7975:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7967:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8009:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8020:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8002:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7926:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7948:4:7",
														"type": ""
													}
												],
												"src": "7856:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8135:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8145:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8157:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8168:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8153:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8153:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8145:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8187:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8202:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8210:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8198:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8198:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8180:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8180:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8126:4:7",
														"type": ""
													}
												],
												"src": "8038:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8275:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8302:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8304:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8304:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8304:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8291:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8298:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8294:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8294:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8288:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8288:13:7"
															},
															"nodeType": "YulIf",
															"src": "8285:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8333:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8344:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8347:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8340:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8340:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8258:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8261:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8267:3:7",
														"type": ""
													}
												],
												"src": "8227:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8424:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8434:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8449:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "8438:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8459:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "8468:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8459:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8484:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "8492:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8484:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8548:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8593:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "8595:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8595:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8595:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8568:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8582:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8578:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8578:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "8586:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "8574:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8574:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "8565:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8565:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "8562:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8654:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8656:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "8669:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "8676:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "8665:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8665:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "8656:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8635:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "8645:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8631:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8631:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "8628:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8696:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8708:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8714:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "8704:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8704:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8696:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8732:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "8748:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8757:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "8744:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8744:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "8732:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8517:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "8527:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8514:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8536:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8510:3:7",
																"statements": []
															},
															"src": "8506:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "8388:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8395:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8408:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8415:4:7",
														"type": ""
													}
												],
												"src": "8360:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8857:61:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8867:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8897:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8903:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8876:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8876:36:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8867:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8828:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8834:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8847:5:7",
														"type": ""
													}
												],
												"src": "8787:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8982:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9020:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9034:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9043:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9034:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9057:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9002:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8995:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:16:7"
															},
															"nodeType": "YulIf",
															"src": "8992:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9105:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9119:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9128:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9119:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9142:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9091:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:12:7"
															},
															"nodeType": "YulIf",
															"src": "9081:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9193:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "9207:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9216:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "9207:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "9230:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9186:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9191:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9261:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9296:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "9298:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9298:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9298:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "9281:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9291:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "9278:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9278:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "9275:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9331:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "9344:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9354:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9340:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9340:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "9331:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "9369:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9254:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9259:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "9173:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "9166:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9482:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9496:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "9509:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "9515:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "9505:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9505:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "9496:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "9537:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "9406:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9412:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9403:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9403:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "9420:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9430:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9417:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9417:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9399:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9399:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "9443:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9449:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9440:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9440:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "9458:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9468:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "9455:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9455:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9436:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9436:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9396:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9396:77:7"
															},
															"nodeType": "YulIf",
															"src": "9393:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9561:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9603:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9609:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "9584:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9584:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "9565:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "9574:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9663:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9665:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9665:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9665:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "9633:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9650:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9646:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9646:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "9654:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9642:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9630:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:32:7"
															},
															"nodeType": "YulIf",
															"src": "9627:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9694:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "9707:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "9716:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9703:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9703:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9694:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8953:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8959:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8972:5:7",
														"type": ""
													}
												],
												"src": "8923:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9786:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9845:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9847:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9847:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9847:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9817:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9810:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9810:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9803:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9803:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9825:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9836:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9832:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9832:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9840:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9828:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9828:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9822:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9822:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9799:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9799:45:7"
															},
															"nodeType": "YulIf",
															"src": "9796:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9876:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9891:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9894:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9887:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9876:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9765:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9768:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9774:7:7",
														"type": ""
													}
												],
												"src": "9734:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9956:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9978:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9980:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9980:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9980:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9972:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9975:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9969:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9969:8:7"
															},
															"nodeType": "YulIf",
															"src": "9966:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10009:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10021:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10024:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10017:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10017:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10009:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9938:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9941:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9947:4:7",
														"type": ""
													}
												],
												"src": "9907:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10092:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10102:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10119:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "10112:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10112:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10102:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10133:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10163:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10159:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10159:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10137:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10210:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10212:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10226:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10234:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10222:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10222:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10212:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10190:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10183:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10183:26:7"
															},
															"nodeType": "YulIf",
															"src": "10180:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10300:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10321:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10328:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10333:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10324:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10324:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10314:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10314:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10314:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10365:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10368:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10358:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10358:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10393:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10396:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10386:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10386:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10386:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10256:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10279:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10287:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10276:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10276:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10253:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:38:7"
															},
															"nodeType": "YulIf",
															"src": "10250:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10072:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10081:6:7",
														"type": ""
													}
												],
												"src": "10037:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10454:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10471:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10478:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10483:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10474:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10474:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10464:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10464:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10464:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10511:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10514:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10504:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10504:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10535:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10538:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10528:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10528:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10422:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Maximum supply reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f2fde38b146102a357600080fd5b806342966c68146101f057806370a0823114610203578063715018a61461022c57806379cc6790146102345780638da5cb5b1461024757600080fd5b80632e0f2625116100f45780632e0f26251461019f5780632ff2e9dc146101b9578063313ce567146101c157806339509351146101c857806340c10f19146101db57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd146101725780631b62d7af1461018457806323b872dd1461018c575b600080fd5b6101396102b6565b6040516101469190610d6b565b60405180910390f35b61016261015d366004610d28565b610348565b6040519015158152602001610146565b6002545b604051908152602001610146565b610176610362565b61016261019a366004610cec565b610380565b6101a7601281565b60405160ff9091168152602001610146565b6101766103a4565b60126101a7565b6101626101d6366004610d28565b6103bd565b6101ee6101e9366004610d28565b6103df565b005b6101ee6101fe366004610d52565b61046f565b610176610211366004610c9e565b6001600160a01b031660009081526020819052604090205490565b6101ee61047c565b6101ee610242366004610d28565b610490565b6005546040516001600160a01b039091168152602001610146565b6101396104a5565b610162610278366004610d28565b6104b4565b61016261028b366004610d28565b61052f565b61017661029e366004610cb9565b61053d565b6101ee6102b1366004610c9e565b610568565b6060600380546102c590610ef9565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190610ef9565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050505050905090565b600033610356818585610644565b60019150505b92915050565b61036e6012600a610e1b565b61037d9064e8d4a51000610ec3565b81565b60003361038e858285610769565b6103998585856107e3565b506001949350505050565b6103b06012600a610e1b565b61037d90620f4240610ec3565b6000336103568185856103d0838361053d565b6103da9190610dc0565b610644565b6103e76109b1565b6103f36012600a610e1b565b6104029064e8d4a51000610ec3565b6104158261040f60025490565b906105de565b11156104615760405162461bcd60e51b815260206004820152601660248201527513585e1a5b5d5b481cdd5c1c1b1e481c995858da195960521b60448201526064015b60405180910390fd5b61046b8282610a0b565b5050565b6104793382610aea565b50565b6104846109b1565b61048e6000610c30565b565b61049b823383610769565b61046b8282610aea565b6060600480546102c590610ef9565b600033816104c2828661053d565b9050838110156105225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610458565b6103998286868403610644565b6000336103568185856107e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105706109b1565b6001600160a01b0381166105d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610458565b61047981610c30565b6000806105eb8385610dc0565b90508381101561063d5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610458565b9392505050565b6001600160a01b0383166106a65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610458565b6001600160a01b0382166107075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610458565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610775848461053d565b905060001981146107dd57818110156107d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610458565b6107dd8484848403610644565b50505050565b6001600160a01b0383166108475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610458565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610458565b6001600160a01b038316600090815260208190526040902054818110156109215760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610458565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610958908490610dc0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109a491815260200190565b60405180910390a36107dd565b6005546001600160a01b0316331461048e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610458565b6001600160a01b038216610a615760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610458565b8060026000828254610a739190610dc0565b90915550506001600160a01b03821660009081526020819052604081208054839290610aa0908490610dc0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b4a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610458565b6001600160a01b03821660009081526020819052604090205481811015610bbe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610458565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bed908490610ee2565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161075c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610c9957600080fd5b919050565b600060208284031215610cb057600080fd5b61063d82610c82565b60008060408385031215610ccc57600080fd5b610cd583610c82565b9150610ce360208401610c82565b90509250929050565b600080600060608486031215610d0157600080fd5b610d0a84610c82565b9250610d1860208501610c82565b9150604084013590509250925092565b60008060408385031215610d3b57600080fd5b610d4483610c82565b946020939093013593505050565b600060208284031215610d6457600080fd5b5035919050565b600060208083528351808285015260005b81811015610d9857858101830151858201604001528201610d7c565b81811115610daa576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610dd357610dd3610f34565b500190565b600181815b80851115610e13578160001904821115610df957610df9610f34565b80851615610e0657918102915b93841c9390800290610ddd565b509250929050565b600061063d8383600082610e315750600161035c565b81610e3e5750600061035c565b8160018114610e545760028114610e5e57610e7a565b600191505061035c565b60ff841115610e6f57610e6f610f34565b50506001821b61035c565b5060208310610133831016604e8410600b8410161715610e9d575081810a61035c565b610ea78383610dd8565b8060001904821115610ebb57610ebb610f34565b029392505050565b6000816000190483118215151615610edd57610edd610f34565b500290565b600082821015610ef457610ef4610f34565b500390565b600181811c90821680610f0d57607f821691505b60208210811415610f2e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122078d8d672ae2151d101910ecea4cba34a224e558ac5a4a102fddb6fbdefb001b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E0F2625 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x1B62D7AF EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH2 0x1A7 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH2 0x176 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x47C JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH2 0x176 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F1 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36E PUSH1 0x12 PUSH1 0xA PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x37D SWAP1 PUSH5 0xE8D4A51000 PUSH2 0xEC3 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x38E DUP6 DUP3 DUP6 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 PUSH2 0x7E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x12 PUSH1 0xA PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x37D SWAP1 PUSH3 0xF4240 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x3D0 DUP4 DUP4 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH2 0x3E7 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x3F3 PUSH1 0x12 PUSH1 0xA PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x402 SWAP1 PUSH5 0xE8D4A51000 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x415 DUP3 PUSH2 0x40F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5DE JUMP JUMPDEST GT ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585E1A5B5D5B481CDD5C1C1B1E481C995858DA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46B DUP3 DUP3 PUSH2 0xA0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x479 CALLER DUP3 PUSH2 0xAEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x484 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x48E PUSH1 0x0 PUSH2 0xC30 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x49B DUP3 CALLER DUP4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x46B DUP3 DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4C2 DUP3 DUP7 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x399 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x644 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x356 DUP2 DUP6 DUP6 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x479 DUP2 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5EB DUP4 DUP6 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x775 DUP5 DUP5 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7DD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x7DD DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x644 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x958 SWAP1 DUP5 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9A4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA0 SWAP1 DUP5 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBED SWAP1 DUP5 SWAP1 PUSH2 0xEE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x75C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63D DUP3 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD5 DUP4 PUSH2 0xC82 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE3 PUSH1 0x20 DUP5 ADD PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD0A DUP5 PUSH2 0xC82 JUMP JUMPDEST SWAP3 POP PUSH2 0xD18 PUSH1 0x20 DUP6 ADD PUSH2 0xC82 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD44 DUP4 PUSH2 0xC82 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xD7C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD3 PUSH2 0xF34 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xE13 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF9 PUSH2 0xF34 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xE06 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xDDD JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63D DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0xE31 JUMPI POP PUSH1 0x1 PUSH2 0x35C JUMP JUMPDEST DUP2 PUSH2 0xE3E JUMPI POP PUSH1 0x0 PUSH2 0x35C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE54 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE5E JUMPI PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xF34 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x35C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE9D JUMPI POP DUP2 DUP2 EXP PUSH2 0x35C JUMP JUMPDEST PUSH2 0xEA7 DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEBB PUSH2 0xF34 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEDD JUMPI PUSH2 0xEDD PUSH2 0xF34 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 PUSH2 0xF34 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF0D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xD8D672AE2151D101910ECEA4CBA34A224E558AC5A4A102FDDB PUSH16 0xBDEFB001B264736F6C63430008070033 ",
							"sourceMap": "399:1614:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:100:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4558:201;;;;;;:::i;:::-;;:::i;:::-;;;1798:14:7;;1791:22;1773:41;;1761:2;1746:18;4558:201:1;1633:187:7;3327:108:1;3415:12;;3327:108;;;8002:25:7;;;7990:2;7975:18;3327:108:1;7856:177:7;610:82:0;;;:::i;5339:295:1:-;;;;;;:::i;:::-;;:::i;481:35:0:-;;514:2;481:35;;;;;8210:4:7;8198:17;;;8180:36;;8168:2;8153:18;481:35:0;8038:184:7;525:76:0;;;:::i;3169:93:1:-;3252:2;3169:93;;6043:238;;;;;;:::i;:::-;;:::i;1155:198:0:-;;;;;;:::i;:::-;;:::i;:::-;;1461:83;;;;;;:::i;:::-;;:::i;3498:127:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3599:18:1;3572:7;3599:18;;;;;;;;;;;;3498:127;1884:103:3;;;:::i;1831:170:0:-;;;;;;:::i;:::-;;:::i;1236:87:3:-;1309:6;;1236:87;;-1:-1:-1;;;;;1309:6:3;;;1571:51:7;;1559:2;1544:18;1236:87:3;1425:203:7;2426:104:1;;;:::i;6784:436::-;;;;;;:::i;:::-;;:::i;3831:193::-;;;;;;:::i;:::-;;:::i;4087:151::-;;;;;;:::i;:::-;;:::i;2142:201:3:-;;;;;;:::i;:::-;;:::i;2207:100:1:-;2261:13;2294:5;2287:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:100;:::o;4558:201::-;4641:4;241:10:2;4697:32:1;241:10:2;4713:7:1;4722:6;4697:8;:32::i;:::-;4747:4;4740:11;;;4558:201;;;;;:::o;610:82:0:-;668:23;514:2;668;:23;:::i;:::-;651:41;;:13;:41;:::i;:::-;610:82;:::o;5339:295:1:-;5470:4;241:10:2;5528:38:1;5544:4;241:10:2;5559:6:1;5528:15;:38::i;:::-;5577:27;5587:4;5593:2;5597:6;5577:9;:27::i;:::-;-1:-1:-1;5622:4:1;;5339:295;-1:-1:-1;;;;5339:295:1:o;525:76:0:-;577:23;514:2;577;:23;:::i;:::-;566:35;;:7;:35;:::i;6043:238:1:-;6131:4;241:10:2;6187:64:1;241:10:2;6203:7:1;6240:10;6212:25;241:10:2;6203:7:1;6212:9;:25::i;:::-;:38;;;;:::i;:::-;6187:8;:64::i;1155:198:0:-;1122:13:3;:11;:13::i;:::-;668:23:0::1;514:2;668;:23;:::i;:::-;651:41;::::0;:13:::1;:41;:::i;:::-;1241:25;1259:6;1241:13;3415:12:1::0;;;3327:108;1241:13:0::1;:17:::0;::::1;:25::i;:::-;:43;;1233:77;;;::::0;-1:-1:-1;;;1233:77:0;;5367:2:7;1233:77:0::1;::::0;::::1;5349:21:7::0;5406:2;5386:18;;;5379:30;-1:-1:-1;;;5425:18:7;;;5418:52;5487:18;;1233:77:0::1;;;;;;;;;1322:21;1328:7;1336:6;1322:5;:21::i;:::-;1155:198:::0;;:::o;1461:83::-;1509:25;1515:10;1527:6;1509:5;:25::i;:::-;1461:83;:::o;1884:103:3:-;1122:13;:11;:13::i;:::-;1949:30:::1;1976:1;1949:18;:30::i;:::-;1884:103::o:0;1831:170:0:-;1910:46;1926:7;241:10:2;1949:6:0;1910:15;:46::i;:::-;1969:22;1975:7;1984:6;1969:5;:22::i;2426:104:1:-;2482:13;2515:7;2508:14;;;;;:::i;6784:436::-;6877:4;241:10:2;6877:4:1;6960:25;241:10:2;6977:7:1;6960:9;:25::i;:::-;6933:52;;7024:15;7004:16;:35;;6996:85;;;;-1:-1:-1;;;6996:85:1;;7292:2:7;6996:85:1;;;7274:21:7;7331:2;7311:18;;;7304:30;7370:34;7350:18;;;7343:62;-1:-1:-1;;;7421:18:7;;;7414:35;7466:19;;6996:85:1;7090:401:7;6996:85:1;7117:60;7126:5;7133:7;7161:15;7142:16;:34;7117:8;:60::i;3831:193::-;3910:4;241:10:2;3966:28:1;241:10:2;3983:2:1;3987:6;3966:9;:28::i;4087:151::-;-1:-1:-1;;;;;4203:18:1;;;4176:7;4203:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4087:151::o;2142:201:3:-;1122:13;:11;:13::i;:::-;-1:-1:-1;;;;;2231:22:3;::::1;2223:73;;;::::0;-1:-1:-1;;;2223:73:3;;3436:2:7;2223:73:3::1;::::0;::::1;3418:21:7::0;3475:2;3455:18;;;3448:30;3514:34;3494:18;;;3487:62;-1:-1:-1;;;3565:18:7;;;3558:36;3611:19;;2223:73:3::1;3234:402:7::0;2223:73:3::1;2307:28;2326:8;2307:18;:28::i;302:181:4:-:0;360:7;;392:5;396:1;392;:5;:::i;:::-;380:17;;421:1;416;:6;;408:46;;;;-1:-1:-1;;;408:46:4;;4246:2:7;408:46:4;;;4228:21:7;4285:2;4265:18;;;4258:30;4324:29;4304:18;;;4297:57;4371:18;;408:46:4;4044:351:7;408:46:4;474:1;302:181;-1:-1:-1;;;302:181:4:o;10409:380:1:-;-1:-1:-1;;;;;10545:19:1;;10537:68;;;;-1:-1:-1;;;10537:68:1;;6887:2:7;10537:68:1;;;6869:21:7;6926:2;6906:18;;;6899:30;6965:34;6945:18;;;6938:62;-1:-1:-1;;;7016:18:7;;;7009:34;7060:19;;10537:68:1;6685:400:7;10537:68:1;-1:-1:-1;;;;;10624:21:1;;10616:68;;;;-1:-1:-1;;;10616:68:1;;3843:2:7;10616:68:1;;;3825:21:7;3882:2;3862:18;;;3855:30;3921:34;3901:18;;;3894:62;-1:-1:-1;;;3972:18:7;;;3965:32;4014:19;;10616:68:1;3641:398:7;10616:68:1;-1:-1:-1;;;;;10697:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10749:32;;8002:25:7;;;10749:32:1;;7975:18:7;10749:32:1;;;;;;;;10409:380;;;:::o;11080:453::-;11215:24;11242:25;11252:5;11259:7;11242:9;:25::i;:::-;11215:52;;-1:-1:-1;;11282:16:1;:37;11278:248;;11364:6;11344:16;:26;;11336:68;;;;-1:-1:-1;;;11336:68:1;;4602:2:7;11336:68:1;;;4584:21:7;4641:2;4621:18;;;4614:30;4680:31;4660:18;;;4653:59;4729:18;;11336:68:1;4400:353:7;11336:68:1;11448:51;11457:5;11464:7;11492:6;11473:16;:25;11448:8;:51::i;:::-;11204:329;11080:453;;;:::o;7690:671::-;-1:-1:-1;;;;;7821:18:1;;7813:68;;;;-1:-1:-1;;;7813:68:1;;6481:2:7;7813:68:1;;;6463:21:7;6520:2;6500:18;;;6493:30;6559:34;6539:18;;;6532:62;-1:-1:-1;;;6610:18:7;;;6603:35;6655:19;;7813:68:1;6279:401:7;7813:68:1;-1:-1:-1;;;;;7900:16:1;;7892:64;;;;-1:-1:-1;;;7892:64:1;;2629:2:7;7892:64:1;;;2611:21:7;2668:2;2648:18;;;2641:30;2707:34;2687:18;;;2680:62;-1:-1:-1;;;2758:18:7;;;2751:33;2801:19;;7892:64:1;2427:399:7;7892:64:1;-1:-1:-1;;;;;8042:15:1;;8020:19;8042:15;;;;;;;;;;;8076:21;;;;8068:72;;;;-1:-1:-1;;;8068:72:1;;4960:2:7;8068:72:1;;;4942:21:7;4999:2;4979:18;;;4972:30;5038:34;5018:18;;;5011:62;-1:-1:-1;;;5089:18:7;;;5082:36;5135:19;;8068:72:1;4758:402:7;8068:72:1;-1:-1:-1;;;;;8176:15:1;;;:9;:15;;;;;;;;;;;8194:20;;;8176:38;;8236:13;;;;;;;;:23;;8208:6;;8176:9;8236:23;;8208:6;;8236:23;:::i;:::-;;;;;;;;8292:2;-1:-1:-1;;;;;8277:26:1;8286:4;-1:-1:-1;;;;;8277:26:1;;8296:6;8277:26;;;;8002:25:7;;7990:2;7975:18;;7856:177;8277:26:1;;;;;;;;8316:37;9380:591;1401:132:3;1309:6;;-1:-1:-1;;;;;1309:6:3;241:10:2;1465:23:3;1457:68;;;;-1:-1:-1;;;1457:68:3;;5718:2:7;1457:68:3;;;5700:21:7;;;5737:18;;;5730:30;5796:34;5776:18;;;5769:62;5848:18;;1457:68:3;5516:356:7;8648:399:1;-1:-1:-1;;;;;8732:21:1;;8724:65;;;;-1:-1:-1;;;8724:65:1;;7698:2:7;8724:65:1;;;7680:21:7;7737:2;7717:18;;;7710:30;7776:33;7756:18;;;7749:61;7827:18;;8724:65:1;7496:355:7;8724:65:1;8880:6;8864:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8897:18:1;;:9;:18;;;;;;;;;;:28;;8919:6;;8897:9;:28;;8919:6;;8897:28;:::i;:::-;;;;-1:-1:-1;;8941:37:1;;8002:25:7;;;-1:-1:-1;;;;;8941:37:1;;;8958:1;;8941:37;;7990:2:7;7975:18;8941:37:1;;;;;;;1155:198:0;;:::o;9380:591:1:-;-1:-1:-1;;;;;9464:21:1;;9456:67;;;;-1:-1:-1;;;9456:67:1;;6079:2:7;9456:67:1;;;6061:21:7;6118:2;6098:18;;;6091:30;6157:34;6137:18;;;6130:62;-1:-1:-1;;;6208:18:7;;;6201:31;6249:19;;9456:67:1;5877:397:7;9456:67:1;-1:-1:-1;;;;;9623:18:1;;9598:22;9623:18;;;;;;;;;;;9660:24;;;;9652:71;;;;-1:-1:-1;;;9652:71:1;;3033:2:7;9652:71:1;;;3015:21:7;3072:2;3052:18;;;3045:30;3111:34;3091:18;;;3084:62;-1:-1:-1;;;3162:18:7;;;3155:32;3204:19;;9652:71:1;2831:398:7;9652:71:1;-1:-1:-1;;;;;9759:18:1;;:9;:18;;;;;;;;;;9780:23;;;9759:44;;9825:12;:22;;9797:6;;9759:9;9825:22;;9797:6;;9825:22;:::i;:::-;;;;-1:-1:-1;;9865:37:1;;8002:25:7;;;9891:1:1;;-1:-1:-1;;;;;9865:37:1;;;;;7990:2:7;7975:18;9865:37:1;7856:177:7;2503:191:3;2596:6;;;-1:-1:-1;;;;;2613:17:3;;;-1:-1:-1;;;;;;2613:17:3;;;;;;;2646:40;;2596:6;;;2613:17;2596:6;;2646:40;;2577:16;;2646:40;2566:128;2503:191;:::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:7:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:7;;1240:180;-1:-1:-1;1240:180:7:o;1825:597::-;1937:4;1966:2;1995;1984:9;1977:21;2027:6;2021:13;2070:6;2065:2;2054:9;2050:18;2043:34;2095:1;2105:140;2119:6;2116:1;2113:13;2105:140;;;2214:14;;;2210:23;;2204:30;2180:17;;;2199:2;2176:26;2169:66;2134:10;;2105:140;;;2263:6;2260:1;2257:13;2254:91;;;2333:1;2328:2;2319:6;2308:9;2304:22;2300:31;2293:42;2254:91;-1:-1:-1;2406:2:7;2385:15;-1:-1:-1;;2381:29:7;2366:45;;;;2413:2;2362:54;;1825:597;-1:-1:-1;;;1825:597:7:o;8227:128::-;8267:3;8298:1;8294:6;8291:1;8288:13;8285:39;;;8304:18;;:::i;:::-;-1:-1:-1;8340:9:7;;8227:128::o;8360:422::-;8449:1;8492:5;8449:1;8506:270;8527:7;8517:8;8514:21;8506:270;;;8586:4;8582:1;8578:6;8574:17;8568:4;8565:27;8562:53;;;8595:18;;:::i;:::-;8645:7;8635:8;8631:22;8628:55;;;8665:16;;;;8628:55;8744:22;;;;8704:15;;;;8506:270;;;8510:3;8360:422;;;;;:::o;8787:131::-;8847:5;8876:36;8903:8;8897:4;8972:5;9002:8;8992:80;;-1:-1:-1;9043:1:7;9057:5;;8992:80;9091:4;9081:76;;-1:-1:-1;9128:1:7;9142:5;;9081:76;9173:4;9191:1;9186:59;;;;9259:1;9254:130;;;;9166:218;;9186:59;9216:1;9207:10;;9230:5;;;9254:130;9291:3;9281:8;9278:17;9275:43;;;9298:18;;:::i;:::-;-1:-1:-1;;9354:1:7;9340:16;;9369:5;;9166:218;;9468:2;9458:8;9455:16;9449:3;9443:4;9440:13;9436:36;9430:2;9420:8;9417:16;9412:2;9406:4;9403:12;9399:35;9396:77;9393:159;;;-1:-1:-1;9505:19:7;;;9537:5;;9393:159;9584:34;9609:8;9603:4;9584:34;:::i;:::-;9654:6;9650:1;9646:6;9642:19;9633:7;9630:32;9627:58;;;9665:18;;:::i;:::-;9703:20;;8923:806;-1:-1:-1;;;8923:806:7:o;9734:168::-;9774:7;9840:1;9836;9832:6;9828:14;9825:1;9822:21;9817:1;9810:9;9803:17;9799:45;9796:71;;;9847:18;;:::i;:::-;-1:-1:-1;9887:9:7;;9734:168::o;9907:125::-;9947:4;9975:1;9972;9969:8;9966:34;;;9980:18;;:::i;:::-;-1:-1:-1;10017:9:7;;9907:125::o;10037:380::-;10116:1;10112:12;;;;10159;;;10180:61;;10234:4;10226:6;10222:17;10212:27;;10180:61;10287:2;10279:6;10276:14;10256:18;10253:38;10250:161;;;10333:10;10328:3;10324:20;10321:1;10314:31;10368:4;10365:1;10358:15;10396:4;10393:1;10386:15;10250:161;;10037:380;;;:::o;10422:127::-;10483:10;10478:3;10474:20;10471:1;10464:31;10514:4;10511:1;10504:15;10538:4;10535:1;10528:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "793600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "227",
								"INITIAL_SUPPLY()": "653",
								"Maximum_SUPPLY()": "698",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24652",
								"balanceOf(address)": "2585",
								"burn(uint256)": "50884",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "268",
								"decreaseAllowance(address,uint256)": "26995",
								"increaseAllowance(address,uint256)": "27072",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2412",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51252",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 890,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 796,
									"end": 890,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "415245564541"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "415641"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2112,
									"end": 2119,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 976,
									"end": 988,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 848,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 853,
									"end": 863,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 577,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 577,
									"end": 579,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 577,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 577,
									"end": 600,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 577,
									"end": 600,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 577,
									"end": 600,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 566,
									"end": 601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 566,
									"end": 601,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 566,
									"end": 573,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 566,
									"end": 601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 566,
									"end": 601,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 566,
									"end": 601,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 566,
									"end": 601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 848,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 848,
									"end": 880,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 848,
									"end": 880,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 848,
									"end": 880,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 145,
									"end": 260,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 145,
									"end": 260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 241,
									"end": 251,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 241,
									"end": 251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 260,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2503,
									"end": 2694,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2503,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2646,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2646,
									"end": 2686,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2613,
									"end": 2630,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2596,
									"end": 2602,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2646,
									"end": 2686,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2646,
									"end": 2686,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2577,
									"end": 2593,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2577,
									"end": 2593,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2646,
									"end": 2686,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2694,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2503,
									"end": 2694,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2503,
									"end": 2694,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1122,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1122,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1122,
									"end": 1135,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1122,
									"end": 1135,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1122,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 668,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 668,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 668,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 668,
									"end": 691,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 668,
									"end": 691,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 668,
									"end": 691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 651,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 651,
									"end": 692,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 651,
									"end": 664,
									"name": "PUSH",
									"source": 0,
									"value": "E8D4A51000"
								},
								{
									"begin": 651,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 651,
									"end": 692,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 651,
									"end": 692,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 651,
									"end": 692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1259,
									"end": 1265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3415,
									"end": 3427,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3415,
									"end": 3427,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3415,
									"end": 3427,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3327,
									"end": 3435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1241,
									"end": 1254,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1241,
									"end": 1254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1241,
									"end": 1258,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 1258,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551718"
								},
								{
									"begin": 1241,
									"end": 1258,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1241,
									"end": 1266,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1284,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 572,
									"end": 574,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 554,
									"end": 575,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 591,
									"end": 609,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 584,
									"end": 614,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 650,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "4D6178696D756D20737570706C79207265616368656400000000000000000000"
								},
								{
									"begin": 630,
									"end": 648,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 630,
									"end": 648,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 630,
									"end": 648,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 623,
									"end": 675,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 692,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 692,
									"end": 710,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1233,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1328,
									"end": 1335,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1322,
									"end": 1343,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1322,
									"end": 1343,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1322,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1401,
									"end": 1533,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1401,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 241,
									"end": 251,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1465,
									"end": 1488,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 923,
									"end": 925,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 905,
									"end": 926,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 905,
									"end": 926,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 905,
									"end": 926,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 942,
									"end": 960,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 942,
									"end": 960,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 935,
									"end": 965,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1035,
									"name": "PUSH",
									"source": 7,
									"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
								},
								{
									"begin": 981,
									"end": 999,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 981,
									"end": 999,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 981,
									"end": 999,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1036,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1071,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1053,
									"end": 1071,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 721,
									"end": 1077,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1457,
									"end": 1525,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1533,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 302,
									"end": 483,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 302,
									"end": 483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 360,
									"end": 367,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 367,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 392,
									"end": 397,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 396,
									"end": 397,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 392,
									"end": 393,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 392,
									"end": 397,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 392,
									"end": 397,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 397,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 392,
									"end": 397,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 380,
									"end": 397,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 380,
									"end": 397,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 421,
									"end": 422,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 416,
									"end": 417,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 416,
									"end": 422,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 416,
									"end": 422,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 408,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 408,
									"end": 454,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 408,
									"end": 454,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 408,
									"end": 454,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 408,
									"end": 454,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 408,
									"end": 454,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 408,
									"end": 454,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 408,
									"end": 454,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 408,
									"end": 454,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 7,
									"value": "1B"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 294,
									"end": 323,
									"name": "PUSH",
									"source": 7,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 267,
									"end": 324,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 341,
									"end": 359,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 408,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 408,
									"end": 454,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 408,
									"end": 454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 474,
									"end": 475,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 302,
									"end": 483,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 302,
									"end": 483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 302,
									"end": 483,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 302,
									"end": 483,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 302,
									"end": 483,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 302,
									"end": 483,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 302,
									"end": 483,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 8648,
									"end": 9047,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 8648,
									"end": 9047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8732,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8732,
									"end": 8753,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1286,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1325,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1303,
									"end": 1321,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1303,
									"end": 1321,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1321,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1326,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 1342,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1342,
									"end": 1360,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1335,
									"end": 1396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1413,
									"end": 1431,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1413,
									"end": 1431,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1082,
									"end": 1437,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 8724,
									"end": 8789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8880,
									"end": 8886,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8876,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8864,
									"end": 8876,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8886,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8915,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8919,
									"end": 8925,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8919,
									"end": 8925,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8919,
									"end": 8925,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8919,
									"end": 8925,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8897,
									"end": 8925,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1588,
									"end": 1613,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1588,
									"end": 1613,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1588,
									"end": 1613,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8958,
									"end": 8959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8958,
									"end": 8959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1578,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 1579,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 8978,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1353,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "tag",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1624,
									"end": 1752,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1624,
									"end": 1752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1664,
									"end": 1667,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1691,
									"end": 1697,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1688,
									"end": 1689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1685,
									"end": 1698,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1721,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1682,
									"end": 1721,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1737,
									"end": 1746,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1624,
									"end": 1752,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1889,
									"end": 1894,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1924,
									"end": 1931,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1922,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1911,
									"end": 1932,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1979,
									"end": 1980,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1975,
									"end": 1981,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1971,
									"end": 1988,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1989,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 2012,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1959,
									"end": 2012,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1992,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2049,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2032,
									"end": 2040,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2050,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2080,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2025,
									"end": 2080,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2078,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2078,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2078,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2078,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2080,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2025,
									"end": 2080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2163,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2163,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2163,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2163,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2116,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2116,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2116,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2116,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1903,
									"end": 2173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1907,
									"end": 1910,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 2179,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2184,
									"end": 2315,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2184,
									"end": 2315,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2300,
									"end": 2308,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2294,
									"end": 2298,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2273,
									"end": 2309,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2273,
									"end": 2309,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2273,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2309,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2315,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2184,
									"end": 2315,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2320,
									"end": 3126,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2320,
									"end": 3126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2399,
									"end": 2407,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2389,
									"end": 2469,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2440,
									"end": 2441,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2454,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2454,
									"end": 2459,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2469,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2389,
									"end": 2469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2488,
									"end": 2492,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2478,
									"end": 2554,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2525,
									"end": 2526,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2539,
									"end": 2544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2539,
									"end": 2544,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2554,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2478,
									"end": 2554,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2589,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2583,
									"end": 2642,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2583,
									"end": 2642,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2583,
									"end": 2642,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2583,
									"end": 2642,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2656,
									"end": 2657,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2651,
									"end": 2781,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2781,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2651,
									"end": 2781,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2563,
									"end": 2781,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2583,
									"end": 2642,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2583,
									"end": 2642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2604,
									"end": 2614,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2604,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2627,
									"end": 2632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2627,
									"end": 2632,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2781,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2651,
									"end": 2781,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2691,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2678,
									"end": 2686,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2675,
									"end": 2692,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2715,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2672,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2672,
									"end": 2715,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2695,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2695,
									"end": 2713,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2695,
									"end": 2713,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2695,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2751,
									"end": 2752,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2737,
									"end": 2753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2737,
									"end": 2753,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2766,
									"end": 2771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2766,
									"end": 2771,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2781,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2563,
									"end": 2781,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2865,
									"end": 2867,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2855,
									"end": 2863,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2868,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2846,
									"end": 2849,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2840,
									"end": 2844,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 2850,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2833,
									"end": 2869,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 2829,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 2817,
									"end": 2825,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2814,
									"end": 2830,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2811,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 2803,
									"end": 2807,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2800,
									"end": 2812,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2796,
									"end": 2831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2870,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 2949,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 2949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2790,
									"end": 2949,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2902,
									"end": 2921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2902,
									"end": 2921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2902,
									"end": 2921,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2934,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2934,
									"end": 2939,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 2949,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2790,
									"end": 2949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2981,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2981,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 2981,
									"end": 3015,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2981,
									"end": 3015,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2981,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3051,
									"end": 3057,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3047,
									"end": 3048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3043,
									"end": 3049,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3058,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3037,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3027,
									"end": 3059,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3024,
									"end": 3082,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3024,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3024,
									"end": 3082,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2320,
									"end": 3126,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2320,
									"end": 3126,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3131,
									"end": 3299,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 3131,
									"end": 3299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3171,
									"end": 3178,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3237,
									"end": 3238,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3233,
									"end": 3234,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3235,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3225,
									"end": 3239,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3223,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3240,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3214,
									"end": 3215,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3207,
									"end": 3216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3217,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3196,
									"end": 3241,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3193,
									"end": 3264,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3193,
									"end": 3264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3193,
									"end": 3264,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3244,
									"end": 3262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3244,
									"end": 3262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3244,
									"end": 3262,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3244,
									"end": 3262,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3244,
									"end": 3262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3284,
									"end": 3293,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3284,
									"end": 3293,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3299,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3304,
									"end": 3684,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3304,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3383,
									"end": 3384,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3379,
									"end": 3391,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3391,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3391,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3391,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3438,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3438,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3438,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3447,
									"end": 3508,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3447,
									"end": 3508,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3501,
									"end": 3505,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 3493,
									"end": 3499,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3506,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3506,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3447,
									"end": 3508,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3447,
									"end": 3508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3554,
									"end": 3556,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3546,
									"end": 3552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3557,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3523,
									"end": 3541,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3558,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3678,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3517,
									"end": 3678,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3600,
									"end": 3610,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3595,
									"end": 3598,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3591,
									"end": 3611,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3588,
									"end": 3589,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3612,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3635,
									"end": 3639,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3632,
									"end": 3633,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3625,
									"end": 3640,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3663,
									"end": 3667,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3660,
									"end": 3661,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3653,
									"end": 3668,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3678,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3517,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3684,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3684,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3684,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3684,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3689,
									"end": 3816,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3689,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3760,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3745,
									"end": 3748,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3741,
									"end": 3761,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3739,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3731,
									"end": 3762,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3781,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3778,
									"end": 3779,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3771,
									"end": 3786,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3809,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3802,
									"end": 3803,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3795,
									"end": 3810,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3689,
									"end": 3816,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3689,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 2013,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078d8d672ae2151d101910ecea4cba34a224e558ac5a4a102fddb6fbdefb001b264736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "2E0F2625"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "2E0F2625"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "1B62D7AF"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 2013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1633,
											"end": 1820,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 7992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7856,
											"end": 8033,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 610,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 610,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 610,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 610,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 610,
											"end": 692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8214,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8198,
											"end": 8215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8215,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8215,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 481,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8038,
											"end": 8222,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 525,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 525,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 525,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 525,
											"end": 601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1425,
											"end": 1628,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2294,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 4720,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4740,
											"end": 4751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 610,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 610,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 668,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 610,
											"end": 692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 610,
											"end": 692,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5544,
											"end": 5548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5587,
											"end": 5591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5603,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 525,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 525,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 577,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 577,
											"end": 600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 577,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 566,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 566,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 566,
											"end": 601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6250,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6187,
											"end": 6251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 668,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 668,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 668,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 651,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1241,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1241,
											"end": 1266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1241,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5379,
											"end": 5409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E1A5B5D5B481CDD5C1C1B1E481C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1233,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1515,
											"end": 1525,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1509,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1544,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1987,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1831,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1926,
											"end": 1933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1910,
											"end": 1956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1910,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1910,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1969,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1969,
											"end": 1991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2515,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6984,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7039,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7039,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7404,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7350,
											"end": 7368,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7350,
											"end": 7368,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7421,
											"end": 7439,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7421,
											"end": 7439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7485,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7466,
											"end": 7485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7090,
											"end": 7491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7126,
											"end": 7131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7140,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7176,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7158,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7117,
											"end": 7177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2142,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2231,
											"end": 2253,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3234,
											"end": 3636,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2223,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2326,
											"end": 2334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2307,
											"end": 2335,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 302,
											"end": 483,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 302,
											"end": 483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 360,
											"end": 367,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 396,
											"end": 397,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 392,
											"end": 393,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 380,
											"end": 397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 380,
											"end": 397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 421,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 416,
											"end": 417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 422,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 416,
											"end": 422,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 408,
											"end": 454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 408,
											"end": 454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 408,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4228,
											"end": 4249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4288,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "PUSH",
											"source": 7,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4371,
											"end": 4389,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4371,
											"end": 4389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4044,
											"end": 4395,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 408,
											"end": 454,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 474,
											"end": 475,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 302,
											"end": 483,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 302,
											"end": 483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 10564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6928,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6899,
											"end": 6929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6965,
											"end": 6999,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 7000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7009,
											"end": 7043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7079,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7060,
											"end": 7079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6685,
											"end": 7085,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3955,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4033,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4014,
											"end": 4033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3641,
											"end": 4039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10733,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11282,
											"end": 11298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11278,
											"end": 11526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4641,
											"end": 4643,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4711,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4653,
											"end": 4712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4400,
											"end": 4753,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11457,
											"end": 11462,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11464,
											"end": 11471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11492,
											"end": 11498,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11473,
											"end": 11489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11473,
											"end": 11498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7690,
											"end": 8361,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7690,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6483,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6484,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6493,
											"end": 6523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6593,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6539,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6539,
											"end": 6557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6674,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6655,
											"end": 6674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6279,
											"end": 6680,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7916,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2427,
											"end": 2826,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5082,
											"end": 5118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4758,
											"end": 5160,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8214,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 7992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 8033,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9380,
											"end": 9971,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5769,
											"end": 5831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5516,
											"end": 5872,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 9047,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8648,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8732,
											"end": 8753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7737,
											"end": 7739,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7809,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7827,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7827,
											"end": 7845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7496,
											"end": 7851,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8724,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8925,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8958,
											"end": 8959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 7992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8978,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9380,
											"end": 9971,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9380,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9464,
											"end": 9485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6118,
											"end": 6120,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6098,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6191,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5877,
											"end": 6274,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9456,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3074,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3111,
											"end": 3145,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2831,
											"end": 3229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9652,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9780,
											"end": 9803,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9780,
											"end": 9803,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9780,
											"end": 9803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9803,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9837,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 7992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7856,
											"end": 8033,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2694,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2503,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2646,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2686,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2694,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1355,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1995,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2077,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2126,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2235,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2270,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2326,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8227,
											"end": 8355,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 8227,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8294,
											"end": 8300,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8288,
											"end": 8301,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8285,
											"end": 8324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8340,
											"end": 8349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8340,
											"end": 8349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8227,
											"end": 8355,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8492,
											"end": 8497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8534,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8535,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8584,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8592,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8615,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8562,
											"end": 8615,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8628,
											"end": 8683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8628,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8628,
											"end": 8683,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8681,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8628,
											"end": 8683,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8628,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8766,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8766,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8766,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8719,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8506,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8782,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8787,
											"end": 8918,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8787,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8876,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8903,
											"end": 8911,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 8977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8992,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8992,
											"end": 9072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9057,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 9057,
											"end": 9062,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8992,
											"end": 9072,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8992,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9081,
											"end": 9157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9128,
											"end": 9129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 9142,
											"end": 9147,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9157,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9081,
											"end": 9157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9186,
											"end": 9245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9245,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9186,
											"end": 9245,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9260,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9254,
											"end": 9384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9254,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9166,
											"end": 9384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9245,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9186,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9207,
											"end": 9217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9207,
											"end": 9217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 9230,
											"end": 9235,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9254,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9294,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 9281,
											"end": 9289,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9278,
											"end": 9295,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9318,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9275,
											"end": 9318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9340,
											"end": 9356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9340,
											"end": 9356,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 9369,
											"end": 9374,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9166,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9468,
											"end": 9470,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9458,
											"end": 9466,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9471,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9452,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 9443,
											"end": 9447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9453,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 9420,
											"end": 9428,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9433,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9414,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9406,
											"end": 9410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9403,
											"end": 9415,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9434,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9396,
											"end": 9473,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9552,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 9393,
											"end": 9552,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9505,
											"end": 9524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9505,
											"end": 9524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9505,
											"end": 9524,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9537,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 9537,
											"end": 9542,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9552,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 9393,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9609,
											"end": 9617,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9607,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9646,
											"end": 9652,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9661,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9630,
											"end": 9662,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9627,
											"end": 9685,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9627,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 9627,
											"end": 9685,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9703,
											"end": 9723,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9703,
											"end": 9723,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 9729,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8923,
											"end": 9729,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9734,
											"end": 9902,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 9734,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9836,
											"end": 9837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9838,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9828,
											"end": 9842,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9843,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9819,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 9820,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9799,
											"end": 9844,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9867,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 9796,
											"end": 9867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9887,
											"end": 9896,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 9902,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9907,
											"end": 10032,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9907,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9947,
											"end": 9951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 9977,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 10000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9966,
											"end": 10000,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9980,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9980,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9980,
											"end": 9998,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9980,
											"end": 9998,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9980,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10026,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 10032,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10037,
											"end": 10417,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 10037,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10117,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10112,
											"end": 10124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10124,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10159,
											"end": 10171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10180,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10180,
											"end": 10241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10238,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 10226,
											"end": 10232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10222,
											"end": 10239,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10212,
											"end": 10239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10212,
											"end": 10239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10180,
											"end": 10241,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10180,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10287,
											"end": 10289,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10279,
											"end": 10285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10274,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10291,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 10250,
											"end": 10411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10343,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 10328,
											"end": 10331,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10324,
											"end": 10344,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10314,
											"end": 10345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10372,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10365,
											"end": 10366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10358,
											"end": 10373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10396,
											"end": 10400,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10393,
											"end": 10394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10401,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10411,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 10250,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10417,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10417,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10422,
											"end": 10549,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10422,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10493,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 10478,
											"end": 10481,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10474,
											"end": 10494,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10464,
											"end": 10495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10514,
											"end": 10518,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10504,
											"end": 10519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10542,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10535,
											"end": 10536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10543,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"Maximum_SUPPLY()": "1b62d7af",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Maximum_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements: - `account` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AREVEA-Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":\"AREVEAToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol\":{\"keccak256\":\"0xdad9960a4cf0db2347d4b66fab9ef71f4de82d9ef5130abc7710a85ae283df97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e9495f4ff70c1e8e554c46e4926918aa318f051bef8731a160dcf29619efd7\",\"dweb:/ipfs/QmYCNATSwe9iNxt86bzMwuEUyzUnYQ4om2LtLo3dHCyFZk\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":{\"keccak256\":\"0x618fd2368aea00f5c27b8cd4f9600484b1d0320ed2967d46c04ba76eab2a21a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc79740ba2a03c93594faff7f5a03d8ab4ea71240bf9685057f7ce20cea71ad6\",\"dweb:/ipfs/QmZujg9EuN1UzncJ7cqmkZSidCpdygacQXJpPBHixxHA7p\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":{\"keccak256\":\"0xaac395688edc1129b10b3c1ff17b281ed12211fdad9d79fbc7c66451e48fd1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1edd816216205384dad14ca182e5c1f369d5c441791be33738e0e0b529feaa\",\"dweb:/ipfs/QmVM6viMdjTjqY8Em6i2iKgKQtcwxTXzUchNxSfZHkUMMq\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":{\"keccak256\":\"0x6fb005d8205986c9adb09fa929a48b46c81c37c84922af923282939f28030db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539dd641f233b73274984c158b4568a300f00727309c0cd05f6390ddf985b331\",\"dweb:/ipfs/QmYnZsywQLeFGVisx46UZCtj9xRLU1h9ATjhWabxzFP4hS\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":{\"keccak256\":\"0xea060a43956deecfd79e602fc08adad0ac8e899ee37d67509b915546d249df3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca8af2c52fa895aadc9945608323acf24c0879d50ea3966415704a20e52a134\",\"dweb:/ipfs/QmdA6QQ594Lj5fQAjdJo8bJTixGJKYok8VmjowxF5U9CQf\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol\":{\"keccak256\":\"0x1f32a75186bb2aaa1f9a4c13a4bf5a603b4af5dc2dfd9c8f71483b34f7f556c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9460ab52630c472d623084d34ab505eb4abfe9d0fdb44bfe46046e3fdb38c93\",\"dweb:/ipfs/QmasRT1jYUAsRWDSvt4mfTfZH1jdP8uvUUzvsRWdRDN3uS\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x1ffe2047e11fcdd75b2aca845ef3428d93765011f9bdb0ca7bf5d9f95f62656a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b608f183a24077b867dcf21b1e5956b431291324b6025cbb864eb295e005307\",\"dweb:/ipfs/QmPsgCmqe4HYkFpvYJGWWbkLoQEdhWDzmhG6Lv54FXua8W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol:AREVEAToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol:AREVEAToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 138,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol:AREVEAToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 140,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol:AREVEAToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 142,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol:AREVEAToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol:AREVEAToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":1427:12989  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2021:2137  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2088:2101  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2088:2093  _name */\n  0x03\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2088:2101  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2112:2129  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2112:2119  _symbol */\n  0x04\n  swap1\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2112:2129  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2021:2137  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":1427:12989  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":1427:12989  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":1427:12989  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2207:2307  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3415:3427  _totalSupply */\n      sload(0x02)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3327:3435  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5339:5634  function transferFrom(\r... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3169:3262  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3252:3254  18 */\n      0x12\n        /* \"#utility.yul\":5147:5183   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5120:5138   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3169:3262  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_17\n        /* \"#utility.yul\":5005:5189   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6043:6281  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3498:3625  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3599:3617  _balances[account] */\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3572:3579  uint256 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3599:3617  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3498:3625  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2426:2530  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6784:7220  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3831:4024  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4087:4238  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2207:2307  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2261:2274  string memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2294:2299  _name */\n      0x03\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2287:2299  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2207:2307  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_22:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4641:4645  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4697:4729  _approve(owner, spender, amount) */\n      tag_73\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4713:4720  spender */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4722:4728  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4697:4705  _approve */\n      tag_74\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4697:4729  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4747:4751  true */\n      0x01\n      swap4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4558:4759  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5339:5634  function transferFrom(\r... */\n    tag_32:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5470:5474  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5528:5566  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5544:5548  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5559:5565  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5528:5543  _spendAllowance */\n      tag_79\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5528:5566  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5577:5604  _transfer(from, to, amount) */\n      tag_80\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5587:5591  from */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5593:5595  to */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5597:5603  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5577:5586  _transfer */\n      tag_81\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5577:5604  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5622:5626  true */\n      0x01\n      swap5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":5339:5634  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6043:6281  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_40:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6131:6135  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6187:6251  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6203:6210  spender */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6240:6250  addedValue */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6237  allowance(owner, spender) */\n      tag_86\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6203:6210  spender */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6221  allowance */\n      tag_61\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6237  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6212:6250  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6187:6195  _approve */\n      tag_74\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6187:6251  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2426:2530  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_48:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2482:2495  string memory */\n      0x60\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2515:2522  _symbol */\n      0x04\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":2508:2522  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6784:7220  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_52:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6877:6881  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6877:6881  bool */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6960:6985  allowance(owner, spender) */\n      tag_98\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6977:6984  spender */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6960:6969  allowance */\n      tag_61\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6960:6985  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6933:6985  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7024:7039  subtractedValue */\n      dup4\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7004:7020  currentAllowance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7004:7039  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":6996:7081  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7117:7177  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7126:7131  owner */\n      dup3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7133:7140  spender */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7161:7176  subtractedValue */\n      dup7\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7142:7158  currentAllowance */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7142:7176  currentAllowance - subtractedValue */\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7117:7125  _approve */\n      tag_74\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7117:7177  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3831:4024  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_56:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3910:3914  bool */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3966:3994  _transfer(owner, to, amount) */\n      tag_73\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":241:251  msg.sender */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3983:3985  to */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3987:3993  amount */\n      dup6\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3966:3975  _transfer */\n      tag_81\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":3966:3994  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4087:4238  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4221  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4176:4183  uint256 */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4221  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4214  _allowances */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4221  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4203:4230  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":4087:4238  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10409:10789  function _approve(\r... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10545:10564  owner != address(0) */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4012:4412   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10537:10605  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10624:10645  spender != address(0) */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10616:10684  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10715  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10708  _allowances */\n      0x01\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10715  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10724  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10697:10733  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10749:10781  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10749:10781  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10749:10781  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":10409:10789  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11080:11533  function _spendAllowance(\r... */\n    tag_79:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11215:11239  uint256 currentAllowance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11242:11267  allowance(owner, spender) */\n      tag_117\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11252:11257  owner */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11259:11266  spender */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11242:11251  allowance */\n      tag_61\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11242:11267  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11215:11267  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11282:11298  currentAllowance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11282:11319  currentAllowance != type(uint256).max */\n      eq\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11278:11526  if (currentAllowance != type(uint256).max) {\r... */\n      tag_122\n      jumpi\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11364:11370  amount */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11344:11360  currentAllowance */\n      dup2\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11344:11370  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":2841:3194   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11336:11404  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11448:11499  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11457:11462  owner */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11464:11471  spender */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11492:11498  amount */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11473:11489  currentAllowance */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11473:11498  currentAllowance - amount */\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11448:11456  _approve */\n      tag_74\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11448:11499  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11204:11533  {\r... */\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":11080:11533  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7690:8361  function _transfer(\r... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7821:7839  from != address(0) */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3606:4007   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7813:7881  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7900:7916  to != address(0) */\n      dup3\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":7892:7956  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8042:8057  _balances[from] */\n      dup4\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8020:8039  uint256 fromBalance */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8042:8057  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8076:8097  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":3199:3601   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8068:8140  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8191  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8185  _balances */\n      0x00\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8191  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8194:8214  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8214  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8249  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8259  _balances[to] += amount */\n      dup1\n      sload\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8208:8214  amount */\n      dup5\n      swap3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8176:8185  _balances */\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8259  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8208:8214  amount */\n      dup5\n      swap1\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8236:8259  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8292:8294  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n      and\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8286:8290  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8296:8302  amount */\n      dup5\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4823:5000   */\n      jump\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8277:8303  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":8316:8353  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":12133:12258  function _beforeTokenTransfer(\r... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_142:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_144:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_146:\n        /* \"#utility.yul\":343:372   */\n      tag_147\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_142\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_149:\n        /* \"#utility.yul\":551:580   */\n      tag_150\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_142\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_151\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_142\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_153:\n        /* \"#utility.yul\":833:862   */\n      tag_154\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_142\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_155\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_157:\n        /* \"#utility.yul\":1149:1178   */\n      tag_158\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_142\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_161:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5419   */\n    tag_88:\n        /* \"#utility.yul\":5234:5237   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup3\n        /* \"#utility.yul\":5261:5267   */\n      not\n        /* \"#utility.yul\":5258:5259   */\n      dup3\n        /* \"#utility.yul\":5255:5268   */\n      gt\n        /* \"#utility.yul\":5252:5388   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5310:5320   */\n      0x4e487b71\n        /* \"#utility.yul\":5305:5308   */\n      0xe0\n        /* \"#utility.yul\":5301:5321   */\n      shl\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5291:5322   */\n      mstore\n        /* \"#utility.yul\":5345:5349   */\n      0x11\n        /* \"#utility.yul\":5342:5343   */\n      0x04\n        /* \"#utility.yul\":5335:5350   */\n      mstore\n        /* \"#utility.yul\":5373:5377   */\n      0x24\n        /* \"#utility.yul\":5370:5371   */\n      0x00\n        /* \"#utility.yul\":5363:5378   */\n      revert\n        /* \"#utility.yul\":5252:5388   */\n    tag_175:\n      pop\n        /* \"#utility.yul\":5404:5413   */\n      add\n      swap1\n        /* \"#utility.yul\":5194:5419   */\n      jump\t// out\n        /* \"#utility.yul\":5424:5804   */\n    tag_65:\n        /* \"#utility.yul\":5503:5504   */\n      0x01\n        /* \"#utility.yul\":5499:5511   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5546:5558   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5567:5628   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5621:5625   */\n      0x7f\n        /* \"#utility.yul\":5613:5619   */\n      dup3\n        /* \"#utility.yul\":5609:5626   */\n      and\n        /* \"#utility.yul\":5599:5626   */\n      swap2\n      pop\n        /* \"#utility.yul\":5567:5628   */\n    tag_177:\n        /* \"#utility.yul\":5674:5676   */\n      0x20\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5663:5677   */\n      lt\n        /* \"#utility.yul\":5643:5661   */\n      dup2\n        /* \"#utility.yul\":5640:5678   */\n      eq\n        /* \"#utility.yul\":5637:5798   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5720:5730   */\n      0x4e487b71\n        /* \"#utility.yul\":5715:5718   */\n      0xe0\n        /* \"#utility.yul\":5711:5731   */\n      shl\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5701:5732   */\n      mstore\n        /* \"#utility.yul\":5755:5759   */\n      0x22\n        /* \"#utility.yul\":5752:5753   */\n      0x04\n        /* \"#utility.yul\":5745:5760   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x24\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5773:5788   */\n      revert\n        /* \"#utility.yul\":5637:5798   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":5424:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201ffc962f8304c8e24ed18e387abb45af911940278fa410ff99468fb0620616e564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:7"
															},
															"nodeType": "YulIf",
															"src": "88:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:7"
															},
															"nodeType": "YulIf",
															"src": "221:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:7"
															},
															"nodeType": "YulIf",
															"src": "404:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:7"
															},
															"nodeType": "YulIf",
															"src": "566:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:7",
																"statements": []
															},
															"src": "647:133:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:7"
															},
															"nodeType": "YulIf",
															"src": "789:80:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:7",
														"type": ""
													}
												],
												"src": "14:885:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:7"
															},
															"nodeType": "YulIf",
															"src": "1032:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:7"
															},
															"nodeType": "YulIf",
															"src": "1169:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:7"
															},
															"nodeType": "YulIf",
															"src": "1342:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:7",
														"type": ""
													}
												],
												"src": "904:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:7"
															},
															"nodeType": "YulIf",
															"src": "1614:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:7"
															},
															"nodeType": "YulIf",
															"src": "1684:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:7",
														"type": ""
													}
												],
												"src": "1471:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061079b565b60405180910390f35b6100df6100da366004610771565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df610131366004610771565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610771565b61029f565b6100df610188366004610771565b61031f565b6100f361019b366004610702565b61032d565b6060600380546101af90610816565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610816565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107f0565b610358565b6060600480546101af90610816565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107f0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f257600080fd5b6106fb826106c4565b9392505050565b6000806040838503121561071557600080fd5b61071e836106c4565b915061072c602084016106c4565b90509250929050565b60008060006060848603121561074a57600080fd5b610753846106c4565b9250610761602085016106c4565b9150604084013590509250925092565b6000806040838503121561078457600080fd5b61078d836106c4565b946020939093013593505050565b600060208083528351808285015260005b818110156107c8578581018301518582016040015282016107ac565b818111156107da576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082a57607f821691505b6020821081141561084b57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201ffc962f8304c8e24ed18e387abb45af911940278fa410ff99468fb0620616e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xFC SWAP7 0x2F DUP4 DIV 0xC8 0xE2 0x4E 0xD1 DUP15 CODESIZE PUSH27 0xBB45AF911940278FA410FF99468FB0620616E564736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "1427:11562:1:-:0;;;2021:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2088:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2112:17:1;;;;:7;;:17;;;;;:::i;:::-;;2021:116;;1427:11562;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1427:11562:1;;;-1:-1:-1;1427:11562:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:7;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:7;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:7;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:7:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:7;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1427:11562:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_634": {
									"entryPoint": 856,
									"id": 634,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_714": {
									"entryPoint": null,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_677": {
									"entryPoint": 1148,
									"id": 677,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_461": {
									"entryPoint": 1270,
									"id": 461,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_256": {
									"entryPoint": 813,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_281": {
									"entryPoint": 562,
									"id": 281,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_384": {
									"entryPoint": 671,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_343": {
									"entryPoint": 622,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_169": {
									"entryPoint": 416,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_179": {
									"entryPoint": 656,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_314": {
									"entryPoint": 586,
									"id": 314,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_238": {
									"entryPoint": 799,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:7"
															},
															"nodeType": "YulIf",
															"src": "480:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:7",
														"type": ""
													}
												],
												"src": "383:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:7"
															},
															"nodeType": "YulIf",
															"src": "762:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:7",
														"type": ""
													}
												],
												"src": "648:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:7"
															},
															"nodeType": "YulIf",
															"src": "1078:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:7",
														"type": ""
													}
												],
												"src": "981:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:7",
														"type": ""
													}
												],
												"src": "1240:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:7",
																"statements": []
															},
															"src": "1712:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:7"
															},
															"nodeType": "YulIf",
															"src": "1861:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:7",
														"type": ""
													}
												],
												"src": "1432:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:7",
														"type": ""
													}
												],
												"src": "2034:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:7",
														"type": ""
													}
												],
												"src": "2438:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:7",
														"type": ""
													}
												],
												"src": "2841:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:7",
														"type": ""
													}
												],
												"src": "3199:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:7",
														"type": ""
													}
												],
												"src": "3606:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:7",
														"type": ""
													}
												],
												"src": "4012:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:7",
														"type": ""
													}
												],
												"src": "4417:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:7",
														"type": ""
													}
												],
												"src": "4823:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5071:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5082:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:7",
														"type": ""
													}
												],
												"src": "5005:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5277:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5305:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5310:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5301:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5301:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5291:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5291:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5291:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5342:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5345:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5335:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5335:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5370:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5373:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5363:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5363:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5363:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5258:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5265:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:13:7"
															},
															"nodeType": "YulIf",
															"src": "5252:136:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5397:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5411:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5225:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5228:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5234:3:7",
														"type": ""
													}
												],
												"src": "5194:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5489:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5503:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5506:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5520:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5550:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5556:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5524:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5597:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5599:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5613:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5609:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5577:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5570:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5570:26:7"
															},
															"nodeType": "YulIf",
															"src": "5567:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5687:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5715:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5720:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5711:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5711:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5752:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5755:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5643:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5674:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5663:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:38:7"
															},
															"nodeType": "YulIf",
															"src": "5637:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5459:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5468:6:7",
														"type": ""
													}
												],
												"src": "5424:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061079b565b60405180910390f35b6100df6100da366004610771565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df610131366004610771565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610771565b61029f565b6100df610188366004610771565b61031f565b6100f361019b366004610702565b61032d565b6060600380546101af90610816565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610816565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107f0565b610358565b6060600480546101af90610816565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107f0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f257600080fd5b6106fb826106c4565b9392505050565b6000806040838503121561071557600080fd5b61071e836106c4565b915061072c602084016106c4565b90509250929050565b60008060006060848603121561074a57600080fd5b610753846106c4565b9250610761602085016106c4565b9150604084013590509250925092565b6000806040838503121561078457600080fd5b61078d836106c4565b946020939093013593505050565b600060208083528351808285015260005b818110156107c8578581018301518582016040015282016107ac565b818111156107da576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082a57607f821691505b6020821081141561084b57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201ffc962f8304c8e24ed18e387abb45af911940278fa410ff99468fb0620616e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xFC SWAP7 0x2F DUP4 DIV 0xC8 0xE2 0x4E 0xD1 DUP15 CODESIZE PUSH27 0xBB45AF911940278FA410FF99468FB0620616E564736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "1427:11562:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4558:201;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:7;;1398:22;1380:41;;1368:2;1353:18;4558:201:1;1240:187:7;3327:108:1;3415:12;;3327:108;;;4969:25:7;;;4957:2;4942:18;3327:108:1;4823:177:7;5339:295:1;;;;;;:::i;:::-;;:::i;3169:93::-;;;3252:2;5147:36:7;;5135:2;5120:18;3169:93:1;5005:184:7;6043:238:1;;;;;;:::i;:::-;;:::i;3498:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3599:18:1;3572:7;3599:18;;;;;;;;;;;;3498:127;2426:104;;;:::i;6784:436::-;;;;;;:::i;:::-;;:::i;3831:193::-;;;;;;:::i;:::-;;:::i;4087:151::-;;;;;;:::i;:::-;;:::i;2207:100::-;2261:13;2294:5;2287:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:100;:::o;4558:201::-;4641:4;241:10:2;4697:32:1;241:10:2;4713:7:1;4722:6;4697:8;:32::i;:::-;-1:-1:-1;4747:4:1;;4558:201;-1:-1:-1;;;4558:201:1:o;5339:295::-;5470:4;241:10:2;5528:38:1;5544:4;241:10:2;5559:6:1;5528:15;:38::i;:::-;5577:27;5587:4;5593:2;5597:6;5577:9;:27::i;:::-;-1:-1:-1;5622:4:1;;5339:295;-1:-1:-1;;;;5339:295:1:o;6043:238::-;6131:4;241:10:2;6187:64:1;241:10:2;6203:7:1;6240:10;6212:25;241:10:2;6203:7:1;6212:9;:25::i;:::-;:38;;;;:::i;:::-;6187:8;:64::i;2426:104::-;2482:13;2515:7;2508:14;;;;;:::i;6784:436::-;6877:4;241:10:2;6877:4:1;6960:25;241:10:2;6977:7:1;6960:9;:25::i;:::-;6933:52;;7024:15;7004:16;:35;;6996:85;;;;-1:-1:-1;;;6996:85:1;;4619:2:7;6996:85:1;;;4601:21:7;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:7;;;4741:35;4793:19;;6996:85:1;;;;;;;;;7117:60;7126:5;7133:7;7161:15;7142:16;:34;7117:8;:60::i;3831:193::-;3910:4;241:10:2;3966:28:1;241:10:2;3983:2:1;3987:6;3966:9;:28::i;4087:151::-;-1:-1:-1;;;;;4203:18:1;;;4176:7;4203:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4087:151::o;10409:380::-;-1:-1:-1;;;;;10545:19:1;;10537:68;;;;-1:-1:-1;;;10537:68:1;;4214:2:7;10537:68:1;;;4196:21:7;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:7;;;4336:34;4387:19;;10537:68:1;4012:400:7;10537:68:1;-1:-1:-1;;;;;10624:21:1;;10616:68;;;;-1:-1:-1;;;10616:68:1;;2640:2:7;10616:68:1;;;2622:21:7;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:7;;;2762:32;2811:19;;10616:68:1;2438:398:7;10616:68:1;-1:-1:-1;;;;;10697:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10749:32;;4969:25:7;;;10749:32:1;;4942:18:7;10749:32:1;;;;;;;10409:380;;;:::o;11080:453::-;11215:24;11242:25;11252:5;11259:7;11242:9;:25::i;:::-;11215:52;;-1:-1:-1;;11282:16:1;:37;11278:248;;11364:6;11344:16;:26;;11336:68;;;;-1:-1:-1;;;11336:68:1;;3043:2:7;11336:68:1;;;3025:21:7;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11336:68:1;2841:353:7;11336:68:1;11448:51;11457:5;11464:7;11492:6;11473:16;:25;11448:8;:51::i;:::-;11204:329;11080:453;;;:::o;7690:671::-;-1:-1:-1;;;;;7821:18:1;;7813:68;;;;-1:-1:-1;;;7813:68:1;;3808:2:7;7813:68:1;;;3790:21:7;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:7;;;3930:35;3982:19;;7813:68:1;3606:401:7;7813:68:1;-1:-1:-1;;;;;7900:16:1;;7892:64;;;;-1:-1:-1;;;7892:64:1;;2236:2:7;7892:64:1;;;2218:21:7;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:7;;;2358:33;2408:19;;7892:64:1;2034:399:7;7892:64:1;-1:-1:-1;;;;;8042:15:1;;8020:19;8042:15;;;;;;;;;;;8076:21;;;;8068:72;;;;-1:-1:-1;;;8068:72:1;;3401:2:7;8068:72:1;;;3383:21:7;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:7;;;3523:36;3576:19;;8068:72:1;3199:402:7;8068:72:1;-1:-1:-1;;;;;8176:15:1;;;:9;:15;;;;;;;;;;;8194:20;;;8176:38;;8236:13;;;;;;;;:23;;8208:6;;8176:9;8236:23;;8208:6;;8236:23;:::i;:::-;;;;;;;;8292:2;-1:-1:-1;;;;;8277:26:1;8286:4;-1:-1:-1;;;;;8277:26:1;;8296:6;8277:26;;;;4969:25:7;;4957:2;4942:18;;4823:177;8277:26:1;;;;;;;;8316:37;12133:125;14:173:7;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:7:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:7:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:7;1992:15;-1:-1:-1;;1988:29:7;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:7:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:136;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:136;-1:-1:-1;5404:9:7;;5194:225::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2088,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2112,
									"end": 2119,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2021,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 12989,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ffc962f8304c8e24ed18e387abb45af911940278fa410ff99468fb0620616e564736f6c63430008070033",
									".code": [
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 12989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5005,
											"end": 5189,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3625,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2294,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 4720,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4747,
											"end": 4751,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4558,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5544,
											"end": 5548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5528,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5587,
											"end": 5591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5603,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5577,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5339,
											"end": 5634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6043,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6250,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6212,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6212,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6187,
											"end": 6251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2426,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2515,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6784,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6984,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6960,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7039,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7039,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6996,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7126,
											"end": 7131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7140,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7176,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7158,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7117,
											"end": 7177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3831,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3966,
											"end": 3994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 10564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4012,
											"end": 4412,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10537,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10616,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10724,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10733,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10781,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11242,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11282,
											"end": 11298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11278,
											"end": 11526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2841,
											"end": 3194,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11336,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11457,
											"end": 11462,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11464,
											"end": 11471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11492,
											"end": 11498,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11473,
											"end": 11489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11473,
											"end": 11498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11448,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7690,
											"end": 8361,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7690,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3606,
											"end": 4007,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7813,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7916,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7892,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3601,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8068,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8214,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 5000,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8303,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12133,
											"end": 12258,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5268,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5310,
											"end": 5320,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5305,
											"end": 5308,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5322,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5349,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5378,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5252,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5419,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5663,
											"end": 5677,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5678,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5804,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol\":{\"keccak256\":\"0x618fd2368aea00f5c27b8cd4f9600484b1d0320ed2967d46c04ba76eab2a21a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc79740ba2a03c93594faff7f5a03d8ab4ea71240bf9685057f7ce20cea71ad6\",\"dweb:/ipfs/QmZujg9EuN1UzncJ7cqmkZSidCpdygacQXJpPBHixxHA7p\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":{\"keccak256\":\"0xaac395688edc1129b10b3c1ff17b281ed12211fdad9d79fbc7c66451e48fd1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1edd816216205384dad14ca182e5c1f369d5c441791be33738e0e0b529feaa\",\"dweb:/ipfs/QmVM6viMdjTjqY8Em6i2iKgKQtcwxTXzUchNxSfZHkUMMq\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol\":{\"keccak256\":\"0x1f32a75186bb2aaa1f9a4c13a4bf5a603b4af5dc2dfd9c8f71483b34f7f556c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9460ab52630c472d623084d34ab505eb4abfe9d0fdb44bfe46046e3fdb38c93\",\"dweb:/ipfs/QmasRT1jYUAsRWDSvt4mfTfZH1jdP8uvUUzvsRWdRDN3uS\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x1ffe2047e11fcdd75b2aca845ef3428d93765011f9bdb0ca7bf5d9f95f62656a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b608f183a24077b867dcf21b1e5956b431291324b6025cbb864eb295e005307\",\"dweb:/ipfs/QmPsgCmqe4HYkFpvYJGWWbkLoQEdhWDzmhG6Lv54FXua8W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 138,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 140,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 142,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":{\"keccak256\":\"0xaac395688edc1129b10b3c1ff17b281ed12211fdad9d79fbc7c66451e48fd1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1edd816216205384dad14ca182e5c1f369d5c441791be33738e0e0b529feaa\",\"dweb:/ipfs/QmVM6viMdjTjqY8Em6i2iKgKQtcwxTXzUchNxSfZHkUMMq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol\":{\"keccak256\":\"0xaac395688edc1129b10b3c1ff17b281ed12211fdad9d79fbc7c66451e48fd1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1edd816216205384dad14ca182e5c1f369d5c441791be33738e0e0b529feaa\",\"dweb:/ipfs/QmVM6viMdjTjqY8Em6i2iKgKQtcwxTXzUchNxSfZHkUMMq\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol\":{\"keccak256\":\"0x6fb005d8205986c9adb09fa929a48b46c81c37c84922af923282939f28030db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539dd641f233b73274984c158b4568a300f00727309c0cd05f6390ddf985b331\",\"dweb:/ipfs/QmYnZsywQLeFGVisx46UZCtj9xRLU1h9ATjhWabxzFP4hS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 723,
								"contract": "Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":207:2108  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":207:2108  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e5347f34fb044a273a0dd0469909635c0bae5b1ff48da9539c8e6ae742e5653164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5347f34fb044a273a0dd0469909635c0bae5b1ff48da9539c8e6ae742e5653164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLVALUE PUSH32 0x34FB044A273A0DD0469909635C0BAE5B1FF48DA9539C8E6AE742E5653164736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "207:1901:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;207:1901:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5347f34fb044a273a0dd0469909635c0bae5b1ff48da9539c8e6ae742e5653164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLVALUE PUSH32 0x34FB044A273A0DD0469909635C0BAE5B1FF48DA9539C8E6AE742E5653164736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "207:1901:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5347f34fb044a273a0dd0469909635c0bae5b1ff48da9539c8e6ae742e5653164736f6c63430008070033",
									".code": [
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol\":{\"keccak256\":\"0xea060a43956deecfd79e602fc08adad0ac8e899ee37d67509b915546d249df3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca8af2c52fa895aadc9945608323acf24c0879d50ea3966415704a20e52a134\",\"dweb:/ipfs/QmdA6QQ594Lj5fQAjdJo8bJTixGJKYok8VmjowxF5U9CQf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol\":{\"keccak256\":\"0x1f32a75186bb2aaa1f9a4c13a4bf5a603b4af5dc2dfd9c8f71483b34f7f556c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9460ab52630c472d623084d34ab505eb4abfe9d0fdb44bfe46046e3fdb38c93\",\"dweb:/ipfs/QmasRT1jYUAsRWDSvt4mfTfZH1jdP8uvUUzvsRWdRDN3uS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol\":{\"keccak256\":\"0x1f32a75186bb2aaa1f9a4c13a4bf5a603b4af5dc2dfd9c8f71483b34f7f556c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9460ab52630c472d623084d34ab505eb4abfe9d0fdb44bfe46046e3fdb38c93\",\"dweb:/ipfs/QmasRT1jYUAsRWDSvt4mfTfZH1jdP8uvUUzvsRWdRDN3uS\"]},\"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol\":{\"keccak256\":\"0x1ffe2047e11fcdd75b2aca845ef3428d93765011f9bdb0ca7bf5d9f95f62656a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b608f183a24077b867dcf21b1e5956b431291324b6025cbb864eb295e005307\",\"dweb:/ipfs/QmPsgCmqe4HYkFpvYJGWWbkLoQEdhWDzmhG6Lv54FXua8W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/AREVEAToken.sol",
					"exportedSymbols": {
						"AREVEAToken": [
							114
						],
						"Context": [
							715
						],
						"ERC20": [
							700
						],
						"IERC20": [
							1099
						],
						"IERC20Metadata": [
							1124
						],
						"Ownable": [
							828
						],
						"SafeMath": [
							1021
						]
					},
					"id": 115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 115,
							"sourceUnit": 701,
							"src": "64:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol",
							"file": "./External/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 115,
							"sourceUnit": 1022,
							"src": "87:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol",
							"file": "./External/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 115,
							"sourceUnit": 829,
							"src": "122:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 700,
										"src": "423:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "423:5:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 828,
										"src": "429:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "429:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "158:237:0",
								"text": " @title AREVEA-Token\n @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n Note they can later distribute these tokens as they wish using `transfer` and other\n `ERC20` functions."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114,
								828,
								700,
								1124,
								1099,
								715
							],
							"name": "AREVEAToken",
							"nameLocation": "408:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 12,
									"libraryName": {
										"id": 10,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1021,
										"src": "452:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "446:27:0",
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "2e0f2625",
									"id": 15,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "503:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "481:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 13,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "481:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "514:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 26,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "549:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "525:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "525:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 17,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "566:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "577:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"id": 21,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "591:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 19,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "583:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "583:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "577:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 24,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "576:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "566:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1b62d7af",
									"id": 37,
									"mutability": "constant",
									"name": "Maximum_SUPPLY",
									"nameLocation": "634:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "610:82:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030303030",
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "651:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000_by_1",
												"typeString": "int_const 1000000000000"
											},
											"value": "1000000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "668:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"id": 32,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "682:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "674:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 30,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "674:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "674:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "668:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 35,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "667:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "651:41:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "835:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 46,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "853:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "853:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 48,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "865:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 45,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "848:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "848:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "848:32:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "701:87:0",
										"text": " @dev Constructor that gives msg.sender all of existing tokens."
									},
									"id": 52,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "415245564541",
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "818:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb9575289ec7819dc6b567f19de041fe27e244d7b2fc28f19a76b5d4f5ae84ee",
														"typeString": "literal_string \"AREVEA\""
													},
													"value": "AREVEA"
												},
												{
													"hexValue": "415641",
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8a13e5fdd0d06358cbbffa07ed2478116e9999ff29db91f9d674a0072c803df4",
														"typeString": "literal_string \"AVA\""
													},
													"value": "AVA"
												}
											],
											"id": 43,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 40,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 700,
												"src": "811:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "811:23:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:0:0"
									},
									"scope": 114,
									"src": "796:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1221:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 66,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "1259:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 63,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "1241:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1241:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 857,
																	"src": "1241:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 68,
																"name": "Maximum_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1270:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1241:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178696d756d20737570706c792072656163686564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1285:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
																"typeString": "literal_string \"Maximum supply reached\""
															},
															"value": "Maximum supply reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
																"typeString": "literal_string \"Maximum supply reached\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1233:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 75,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1336:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 73,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1322:21:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "898:249:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "40c10f19",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 747,
												"src": "1210:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1210:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "1164:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1177:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1169:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1194:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1186:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:33:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:0"
									},
									"scope": 114,
									"src": "1155:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1498:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 86,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1515:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1515:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 88,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1527:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 85,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1509:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1509:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1509:25:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1360:90:0",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1470:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1483:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1475:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:16:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:0:0"
									},
									"scope": 114,
									"src": "1461:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1897:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 102,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "1935:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1935:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1949:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 100,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "1910:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1910:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 108,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1969:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1969:22:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1550:275:0",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1840:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1874:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1866:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1848:33:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:0:0"
									},
									"scope": 114,
									"src": "1831:170:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 115,
							"src": "399:1614:0",
							"usedErrors": []
						}
					],
					"src": "35:1978:0"
				},
				"id": 0
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							715
						],
						"ERC20": [
							700
						],
						"IERC20": [
							1099
						],
						"IERC20Metadata": [
							1124
						]
					},
					"id": 701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol",
							"file": "./External/Context.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 716,
							"src": "135:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 1100,
							"src": "169:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 1125,
							"src": "193:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 121,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 715,
										"src": "1445:7:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:7:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1099,
										"src": "1454:6:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1454:6:1"
								},
								{
									"baseName": {
										"id": 125,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1124,
										"src": "1462:14:1"
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "1462:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "229:1196:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 700,
							"linearizedBaseContracts": [
								700,
								1124,
								1099,
								715
							],
							"name": "ERC20",
							"nameLocation": "1436:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1520:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1484:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 129,
										"keyType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1492:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1484:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 128,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1503:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1594:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1538:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1546:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1538:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 134,
											"keyType": {
												"id": 132,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1565:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1557:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1576:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1630:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1614:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1614:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1666:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1651:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1651:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 142,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1693:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1678:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 141,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1678:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2077:60:1",
										"statements": [
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2088:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2096:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2088:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "2088:13:1"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2112:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 155,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2122:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2112:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "2112:17:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1709:306:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2033:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2033:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2068:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2054:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2054:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:44:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:1"
									},
									"scope": 700,
									"src": "2021:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1111
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2276:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2294:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2287:12:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2145:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2216:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2243:8:1"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2220:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2261:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2261:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:15:1"
									},
									"scope": 700,
									"src": "2207:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1117
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2497:33:1",
										"statements": [
											{
												"expression": {
													"id": 176,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "2515:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "2508:14:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2315:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2435:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2464:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2441:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2482:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2482:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:15:1"
									},
									"scope": 700,
									"src": "2426:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1123
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3234:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3252:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3245:9:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "2538:625:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3178:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3209:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3227:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 183,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:7:1"
									},
									"scope": 700,
									"src": "3169:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1048
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "3397:38:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "3415:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "3408:19:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3270:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3336:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 192,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3370:8:1"
									},
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "3388:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:9:1"
									},
									"scope": 700,
									"src": "3327:108:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3581:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 208,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3599:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 210,
													"indexExpression": {
														"id": 209,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3609:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3599:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 207,
												"id": 211,
												"nodeType": "Return",
												"src": "3592:25:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "3443:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3507:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3554:8:1"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3525:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3517:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:17:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3572:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:9:1"
									},
									"scope": 700,
									"src": "3498:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1066
									],
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "3916:108:1",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3935:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "3927:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 224,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 226,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3943:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3976:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3983:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3987:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3966:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "3966:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4012:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 223,
												"id": 236,
												"nodeType": "Return",
												"src": "4005:11:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3633:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3840:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3892:8:1"
									},
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3869:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3861:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:28:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3910:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3910:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3909:6:1"
									},
									"scope": 700,
									"src": "3831:193:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "4185:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4203:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4203:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "4222:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4203:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "4196:34:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4032:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4096:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4158:8:1"
									},
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4114:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4106:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4129:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4121:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4121:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:32:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:9:1"
									},
									"scope": 700,
									"src": "4087:151:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1086
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4647:112:1",
										"statements": [
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4666:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "4658:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 267,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4658:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 269,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "4674:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4674:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4658:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 273,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "4706:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4713:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 275,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4722:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 272,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "4697:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4697:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4697:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 266,
												"id": 279,
												"nodeType": "Return",
												"src": "4740:11:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "4246:306:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4567:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 263,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4623:8:1"
									},
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4583:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4575:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4575:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4600:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4592:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:33:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4641:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4641:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4640:6:1"
									},
									"scope": 700,
									"src": "4558:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1098
									],
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "5476:158:1",
										"statements": [
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5495:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5487:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 294,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5487:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 296,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5505:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5487:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5544:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5550:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5559:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "5528:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5528:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "5528:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5587:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 307,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5593:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5597:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "5577:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "5577:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 293,
												"id": 312,
												"nodeType": "Return",
												"src": "5615:11:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4767:566:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5348:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 290,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5452:8:1"
									},
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5379:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5371:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5423:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5415:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5415:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5360:76:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5470:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5470:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5469:6:1"
									},
									"scope": 700,
									"src": "5339:295:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "6137:144:1",
										"statements": [
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6156:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 342,
														"src": "6148:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 324,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6148:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "6164:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6164:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6148:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "6196:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "6203:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 333,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "6222:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 334,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "6229:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 332,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "6212:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6212:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 336,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "6240:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6212:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 329,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "6187:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6187:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "6187:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6269:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 323,
												"id": 341,
												"nodeType": "Return",
												"src": "6262:11:1"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "5642:395:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6052:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6078:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6070:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6095:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6087:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6069:37:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6131:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6131:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6130:6:1"
									},
									"scope": 700,
									"src": "6043:238:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "6883:337:1",
										"statements": [
											{
												"assignments": [
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6902:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "6894:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 353,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6894:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 355,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "6910:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6910:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6894:28:1"
											},
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6941:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "6933:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6970:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6977:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 360,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "6960:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6960:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6933:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 366,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "7004:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 367,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "7024:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7004:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7041:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6996:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "6996:85:1"
											},
											{
												"id": 380,
												"nodeType": "UncheckedBlock",
												"src": "7092:97:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 373,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "7126:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 374,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "7133:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 375,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "7142:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 376,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "7161:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7142:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 372,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "7117:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7117:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 379,
														"nodeType": "ExpressionStatement",
														"src": "7117:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7208:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 352,
												"id": 382,
												"nodeType": "Return",
												"src": "7201:11:1"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "6289:489:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6793:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6819:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6811:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6836:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6828:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6828:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:42:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6877:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6877:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6876:6:1"
									},
									"scope": 700,
									"src": "6784:436:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "7802:559:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7821:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7837:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7829:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7829:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7829:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7821:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7841:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7813:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7813:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "7813:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7900:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7914:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7906:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 406,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7906:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7906:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7900:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7918:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "7892:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7990:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7996:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 414,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7969:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7969:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "7969:38:1"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8028:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "8020:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8020:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"baseExpression": {
														"id": 422,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "8042:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 424,
													"indexExpression": {
														"id": 423,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "8052:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8042:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8020:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 427,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8076:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 428,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "8091:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8099:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8068:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8068:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "8068:72:1"
											},
											{
												"id": 441,
												"nodeType": "UncheckedBlock",
												"src": "8151:75:1",
												"statements": [
													{
														"expression": {
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 433,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "8176:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"id": 434,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8186:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8176:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 436,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "8194:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 437,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "8208:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8194:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8176:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 440,
														"nodeType": "ExpressionStatement",
														"src": "8176:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 442,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "8236:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 444,
														"indexExpression": {
															"id": 443,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8246:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8236:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 445,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "8253:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8236:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "8236:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 449,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8286:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8292:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8296:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 448,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "8277:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8277:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "8272:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8336:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8342:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8346:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "8316:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8316:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "8316:37:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "7228:456:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7699:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7727:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7719:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7750:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7742:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7742:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7771:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7763:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7708:76:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7802:0:1"
									},
									"scope": 700,
									"src": "7690:671:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "8713:334:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 470,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8732:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8751:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8743:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8743:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8743:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8732:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8755:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8724:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8724:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "8724:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8831:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8823:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8823:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8823:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8835:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8844:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8802:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8802:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "8802:49:1"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "8864:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 489,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "8880:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8864:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "8864:22:1"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 492,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "8897:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 494,
														"indexExpression": {
															"id": 493,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8897:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "8919:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8897:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "8897:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8950:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 499,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8950:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8950:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8962:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8971:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "8941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8941:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "8936:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9019:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9011:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 508,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9011:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9011:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9023:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "9032:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "8991:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8991:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "8991:48:1"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "8369:273:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8657:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8688:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "8680:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:33:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8713:0:1"
									},
									"scope": 700,
									"src": "8648:399:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "9445:526:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "9464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9483:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9475:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 527,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9475:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9475:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9464:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9487:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9456:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "9456:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 537,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "9578:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "9536:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9536:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "9536:49:1"
											},
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9606:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "9598:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9598:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"baseExpression": {
														"id": 546,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "9623:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 548,
													"indexExpression": {
														"id": 547,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "9633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9623:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9598:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9660:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 552,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "9678:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9660:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9686:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9652:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9652:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "9652:71:1"
											},
											{
												"id": 565,
												"nodeType": "UncheckedBlock",
												"src": "9734:81:1",
												"statements": [
													{
														"expression": {
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 557,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "9759:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 559,
																"indexExpression": {
																	"id": 558,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "9769:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9759:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 560,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "9780:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 561,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "9797:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9780:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9759:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 564,
														"nodeType": "ExpressionStatement",
														"src": "9759:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "9825:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 567,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "9841:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9825:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "9825:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 571,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9874:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9891:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9883:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9883:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "9895:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "9865:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9865:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "9860:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9935:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9952:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9944:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9944:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9944:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "9956:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "9915:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9915:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "9915:48:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "9055:319:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9389:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9403:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "9395:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9395:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9420:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "9412:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9394:33:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9445:0:1"
									},
									"scope": 700,
									"src": "9380:591:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "10526:263:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "10545:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10562:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10554:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10554:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10554:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10545:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10566:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10537:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "10537:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "10624:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10643:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10635:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10635:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10635:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10624:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10647:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10616:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10616:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "10616:68:1"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 619,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "10697:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 622,
															"indexExpression": {
																"id": 620,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "10709:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10697:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 623,
														"indexExpression": {
															"id": 621,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "10716:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10697:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "10727:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10697:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "10697:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 628,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "10758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "10765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "10774:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "10749:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10749:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "EmitStatement",
												"src": "10744:37:1"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9979:424:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10418:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10445:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10437:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10437:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10469:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10461:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10495:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10487:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10426:82:1"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10526:0:1"
									},
									"scope": 700,
									"src": "10409:380:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "11204:329:1",
										"statements": [
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11223:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "11215:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11215:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "11252:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 646,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "11242:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11242:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11215:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 651,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "11282:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11307:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 653,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11307:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 652,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11302:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11302:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11302:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11282:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "11278:248:1",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "11321:205:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 659,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "11344:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 660,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "11364:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11344:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11372:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 658,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11336:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11336:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 664,
															"nodeType": "ExpressionStatement",
															"src": "11336:68:1"
														},
														{
															"id": 673,
															"nodeType": "UncheckedBlock",
															"src": "11419:96:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 666,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "11457:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 667,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "11464:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 668,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 645,
																					"src": "11473:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 669,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "11492:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11473:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 665,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "11448:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11448:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "11448:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "10797:277:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11089:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11123:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "11115:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11115:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11147:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "11139:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11173:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "11165:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11104:82:1"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11204:0:1"
									},
									"scope": 700,
									"src": "11080:453:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "12256:2:1",
										"statements": []
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "11541:586:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12142:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12181:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "12173:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12204:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "12196:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12225:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "12217:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12162:76:1"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12256:0:1"
									},
									"scope": 700,
									"src": "12133:125:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "12984:2:1",
										"statements": []
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "12266:590:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12871:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12909:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "12901:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12901:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12932:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "12924:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12953:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "12945:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12890:76:1"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12984:0:1"
									},
									"scope": 700,
									"src": "12862:124:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 701,
							"src": "1427:11562:1",
							"usedErrors": []
						}
					],
					"src": "108:12881:1"
				},
				"id": 1
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol",
					"exportedSymbols": {
						"Context": [
							715
						]
					},
					"id": 716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 702,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 715,
							"linearizedBaseContracts": [
								715
							],
							"name": "Context",
							"nameLocation": "130:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "215:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 709,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "241:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "241:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "233:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "233:8:2",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "233:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 706,
												"id": 712,
												"nodeType": "Return",
												"src": "226:26:2"
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "154:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:2"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "198:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:17:2"
									},
									"scope": 715,
									"src": "145:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 716,
							"src": "112:151:2",
							"usedErrors": []
						}
					],
					"src": "85:178:2"
				},
				"id": 2
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							715
						],
						"Ownable": [
							828
						]
					},
					"id": 829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 717,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/Context.sol",
							"file": "./Context.sol",
							"id": 718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 716,
							"src": "132:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 720,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 715,
										"src": "695:7:3"
									},
									"id": 721,
									"nodeType": "InheritanceSpecifier",
									"src": "695:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "159:505:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 828,
							"linearizedBaseContracts": [
								828,
								715
							],
							"name": "Ownable",
							"nameLocation": "684:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 723,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "726:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 828,
									"src": "710:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 722,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 729,
									"name": "OwnershipTransferred",
									"nameLocation": "747:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "784:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "768:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "815:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "799:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:57:3"
									},
									"src": "741:84:3"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "946:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 734,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "976:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "976:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 733,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "957:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "957:32:3"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "833:93:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 739,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:2:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:3"
									},
									"scope": 828,
									"src": "932:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1111:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 742,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1122:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "1122:13:3"
											},
											{
												"id": 745,
												"nodeType": "PlaceholderStatement",
												"src": "1146:1:3"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "1005:79:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 747,
									"name": "onlyOwner",
									"nameLocation": "1099:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"src": "1090:65:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1291:32:3",
										"statements": [
											{
												"expression": {
													"id": 753,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 723,
													"src": "1309:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 752,
												"id": 754,
												"nodeType": "Return",
												"src": "1302:13:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1163:67:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1245:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:2:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1282:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:9:3"
									},
									"scope": 828,
									"src": "1236:87:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "1446:87:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 761,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "1465:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1465:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 763,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "1476:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1476:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1465:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1457:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "1457:68:3"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "1331:64:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1410:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:2:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:3"
									},
									"scope": 828,
									"src": "1401:132:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1938:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1976:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1968:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1968:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1968:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 776,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1949:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1949:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "1949:30:3"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1541:337:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 774,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 773,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 747,
												"src": "1928:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1928:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1893:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:3"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1938:0:3"
									},
									"scope": 828,
									"src": "1884:103:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "2212:131:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "2231:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2251:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2243:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 794,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2243:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2243:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2231:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2255:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2223:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2223:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "2223:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2326:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2307:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2307:28:3"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "1995:141:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 790,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 789,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 747,
												"src": "2202:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2202:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2151:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2177:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "2169:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:18:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2212:0:3"
									},
									"scope": 828,
									"src": "2142:201:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2566:128:3",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2585:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "2577:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2577:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"id": 815,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 723,
													"src": "2596:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:25:3"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "2613:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 818,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2622:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2613:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "2613:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 822,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2667:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2677:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 821,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "2646:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "2641:45:3"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "2351:146:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2512:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2531:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:18:3"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2566:0:3"
									},
									"scope": 828,
									"src": "2503:191:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 829,
							"src": "666:2031:3",
							"usedErrors": []
						}
					],
					"src": "105:2592:3"
				},
				"id": 3
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/External/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1021
						]
					},
					"id": 1022,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 831,
								"nodeType": "StructuredDocumentation",
								"src": "112:91:4",
								"text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
							},
							"fullyImplemented": true,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "SafeMath",
							"nameLocation": "215:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "369:114:4",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "388:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "380:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 841,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "380:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 843,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "392:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 844,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "396:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "392:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "380:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "416:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 849,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "421:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "416:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "424:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "408:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "408:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "408:46:4"
											},
											{
												"expression": {
													"id": 854,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "474:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 840,
												"id": 855,
												"nodeType": "Return",
												"src": "467:8:4"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "233:61:4",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "311:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "323:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "315:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "334:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "326:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:22:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "360:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:9:4"
									},
									"scope": 1021,
									"src": "302:181:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "677:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "699:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "702:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "705:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 867,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															874,
															901
														],
														"referencedDeclaration": 901,
														"src": "695:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 866,
												"id": 872,
												"nodeType": "Return",
												"src": "688:50:4"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "491:111:4",
										"text": " @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "619:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "631:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "623:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "642:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "634:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:22:4"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "668:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:9:4"
									},
									"scope": 1021,
									"src": "610:136:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "849:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 886,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 887,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "873:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "868:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 889,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "876:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "860:29:4"
											},
											{
												"assignments": [
													893
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "908:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "900:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 892,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "912:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 895,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "916:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "912:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "900:17:4"
											},
											{
												"expression": {
													"id": 898,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 893,
													"src": "937:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 899,
												"nodeType": "Return",
												"src": "930:8:4"
											}
										]
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "763:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "775:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "767:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "786:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "778:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "803:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "789:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 879,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:50:4"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "840:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:9:4"
									},
									"scope": 1021,
									"src": "754:192:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "1096:183:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "1111:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1116:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1111:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "1107:47:4",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "1119:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1141:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 910,
															"id": 915,
															"nodeType": "Return",
															"src": "1134:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1174:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "1166:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 918,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1166:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "1178:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 921,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "1182:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1178:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1166:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 925,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "1202:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 926,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "1206:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1202:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 928,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "1211:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1202:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1214:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1194:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1194:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "1194:56:4"
											},
											{
												"expression": {
													"id": 933,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 919,
													"src": "1270:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 934,
												"nodeType": "Return",
												"src": "1263:8:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "954:67:4",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1038:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1050:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1042:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1061:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1053:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:22:4"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1087:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:9:4"
									},
									"scope": 1021,
									"src": "1029:250:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1443:65:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1465:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 948,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "1468:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1471:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 946,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															953,
															980
														],
														"referencedDeclaration": 980,
														"src": "1461:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 951,
												"nodeType": "Return",
												"src": "1454:46:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "1287:81:4",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1385:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1397:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1389:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1408:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1400:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:22:4"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1434:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:9:4"
									},
									"scope": 1021,
									"src": "1376:132:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "1611:94:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 965,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "1630:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1634:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1630:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 968,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1637:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1622:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "1622:28:4"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1669:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "1661:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1661:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 973,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "1673:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 974,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "1677:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1661:17:4"
											},
											{
												"expression": {
													"id": 977,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 972,
													"src": "1696:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 963,
												"id": 978,
												"nodeType": "Return",
												"src": "1689:8:4"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1525:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1537:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1529:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1548:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1540:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1565:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1551:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1551:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:50:4"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1602:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:9:4"
									},
									"scope": 1021,
									"src": "1516:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1868:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1890:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 992,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "1893:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 990,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															997,
															1020
														],
														"referencedDeclaration": 1020,
														"src": "1886:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 989,
												"id": 995,
												"nodeType": "Return",
												"src": "1879:44:4"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "1713:80:4",
										"text": " @dev Integer modulo of two numbers, truncating the remainder."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1810:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1822:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1814:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1833:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1825:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:22:4"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1859:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:9:4"
									},
									"scope": 1021,
									"src": "1801:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "2034:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1009,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "2053:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2058:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2053:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1012,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "2061:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2045:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "2045:29:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1015,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "2092:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1016,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "2096:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2092:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1018,
												"nodeType": "Return",
												"src": "2085:12:4"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1948:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1960:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1952:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1971:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1963:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1988:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1974:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1002,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1974:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1951:50:4"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "2025:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:9:4"
									},
									"scope": 1021,
									"src": "1939:166:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "207:1901:4",
							"usedErrors": []
						}
					],
					"src": "85:2023:4"
				},
				"id": 4
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1099
						]
					},
					"id": 1100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1023,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1024,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1099,
							"linearizedBaseContracts": [
								1099
							],
							"name": "IERC20",
							"nameLocation": "220:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1033,
									"name": "Transfer",
									"nameLocation": "409:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "418:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "440:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "460:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:5"
									},
									"src": "403:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1042,
									"name": "Approval",
									"nameLocation": "646:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "655:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "678:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "703:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:5"
									},
									"src": "640:78:5"
								},
								{
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:5"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "846:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:5"
									},
									"scope": 1099,
									"src": "800:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "962:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:5"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1002:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:5"
									},
									"scope": 1099,
									"src": "943:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1251:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1263:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:5"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1297:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:5"
									},
									"scope": 1099,
									"src": "1233:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1606:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1621:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "1661:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:5"
									},
									"scope": 1099,
									"src": "1587:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2356:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2373:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:5"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2407:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:5"
									},
									"scope": 1099,
									"src": "2339:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2754:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2777:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2798:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:5"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2838:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:5"
									},
									"scope": 1099,
									"src": "2722:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1100,
							"src": "210:2637:5",
							"usedErrors": []
						}
					],
					"src": "109:2738:5"
				},
				"id": 5
			},
			"Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1099
						],
						"IERC20Metadata": [
							1124
						]
					},
					"id": 1125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "Arevea-NFT-Market/NFT-Contracts/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 1100,
							"src": "140:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1104,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1099,
										"src": "316:6:6"
									},
									"id": 1105,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1103,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1124,
							"linearizedBaseContracts": [
								1124,
								1099
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:6"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "431:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:6"
									},
									"scope": 1124,
									"src": "392:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:6"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "559:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1114,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:6"
									},
									"scope": 1124,
									"src": "518:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "698:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1120,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:6"
									},
									"scope": 1124,
									"src": "655:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1125,
							"src": "288:420:6",
							"usedErrors": []
						}
					],
					"src": "113:595:6"
				},
				"id": 6
			}
		}
	}
}